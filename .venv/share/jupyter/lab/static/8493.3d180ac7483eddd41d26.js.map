{"version":3,"file":"8493.3d180ac7483eddd41d26.js?v=3d180ac7483eddd41d26","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/@codemirror/legacy-modes/mode/groovy.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nvar keywords = words(\n  \"abstract as assert boolean break byte case catch char class const continue def default \" +\n    \"do double else enum extends final finally float for goto if implements import in \" +\n    \"instanceof int interface long native new package private protected public return \" +\n    \"short static strictfp super switch synchronized threadsafe throw throws trait transient \" +\n    \"try void volatile while\");\nvar blockKeywords = words(\"catch class def do else enum finally for if interface switch trait try while\");\nvar standaloneKeywords = words(\"return break continue\");\nvar atoms = words(\"null true false this\");\n\nvar curPunc;\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == '\"' || ch == \"'\") {\n    return startString(ch, stream, state);\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    if (stream.eat(/eE/)) { stream.eat(/\\+\\-/); stream.eatWhile(/\\d/); }\n    return \"number\";\n  }\n  if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize.push(tokenComment);\n      return tokenComment(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    if (expectExpression(state.lastToken, false)) {\n      return startString(ch, stream, state);\n    }\n  }\n  if (ch == \"-\" && stream.eat(\">\")) {\n    curPunc = \"->\";\n    return null;\n  }\n  if (/[+\\-*&%=<>!?|\\/~]/.test(ch)) {\n    stream.eatWhile(/[+\\-*&%=<>|~]/);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_]/);\n  if (ch == \"@\") { stream.eatWhile(/[\\w\\$_\\.]/); return \"meta\"; }\n  if (state.lastToken == \".\") return \"property\";\n  if (stream.eat(\":\")) { curPunc = \"proplabel\"; return \"property\"; }\n  var cur = stream.current();\n  if (atoms.propertyIsEnumerable(cur)) { return \"atom\"; }\n  if (keywords.propertyIsEnumerable(cur)) {\n    if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n    else if (standaloneKeywords.propertyIsEnumerable(cur)) curPunc = \"standalone\";\n    return \"keyword\";\n  }\n  return \"variable\";\n}\ntokenBase.isBase = true;\n\nfunction startString(quote, stream, state) {\n  var tripleQuoted = false;\n  if (quote != \"/\" && stream.eat(quote)) {\n    if (stream.eat(quote)) tripleQuoted = true;\n    else return \"string\";\n  }\n  function t(stream, state) {\n    var escaped = false, next, end = !tripleQuoted;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        if (!tripleQuoted) { break; }\n        if (stream.match(quote + quote)) { end = true; break; }\n      }\n      if (quote == '\"' && next == \"$\" && !escaped) {\n        if (stream.eat(\"{\")) {\n          state.tokenize.push(tokenBaseUntilBrace());\n          return \"string\";\n        } else if (stream.match(/^\\w/, false)) {\n          state.tokenize.push(tokenVariableDeref);\n          return \"string\";\n        }\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end) state.tokenize.pop();\n    return \"string\";\n  }\n  state.tokenize.push(t);\n  return t(stream, state);\n}\n\nfunction tokenBaseUntilBrace() {\n  var depth = 1;\n  function t(stream, state) {\n    if (stream.peek() == \"}\") {\n      depth--;\n      if (depth == 0) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n    } else if (stream.peek() == \"{\") {\n      depth++;\n    }\n    return tokenBase(stream, state);\n  }\n  t.isBase = true;\n  return t;\n}\n\nfunction tokenVariableDeref(stream, state) {\n  var next = stream.match(/^(\\.|[\\w\\$_]+)/)\n  if (!next || !stream.match(next[0] == \".\" ? /^[\\w$_]/ : /^\\./)) state.tokenize.pop()\n  if (!next) return state.tokenize[state.tokenize.length-1](stream, state)\n  return next[0] == \".\" ? null : \"variable\"\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize.pop();\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction expectExpression(last, newline) {\n  return !last || last == \"operator\" || last == \"->\" || /[\\.\\[\\{\\(,;:]/.test(last) ||\n    last == \"newstatement\" || last == \"keyword\" || last == \"proplabel\" ||\n    (last == \"standalone\" && !newline);\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\n\nexport const groovy = {\n  name: \"groovy\",\n  startState: function(indentUnit) {\n    return {\n      tokenize: [tokenBase],\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true,\n      lastToken: null\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n      // Automatic semicolon insertion\n      if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) {\n        popContext(state); ctx = state.context;\n      }\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = state.tokenize[state.tokenize.length-1](stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n    // Handle indentation for {x -> \\n ... }\n    else if (curPunc == \"->\" && ctx.type == \"statement\" && ctx.prev.type == \"}\") {\n      popContext(state);\n      state.context.align = false;\n    }\n    else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"}\") {\n      while (ctx.type == \"statement\") ctx = popContext(state);\n      if (ctx.type == \"}\") ctx = popContext(state);\n      while (ctx.type == \"statement\") ctx = popContext(state);\n    }\n    else if (curPunc == ctx.type) popContext(state);\n    else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n      pushContext(state, stream.column(), \"statement\");\n    state.startOfLine = false;\n    state.lastToken = curPunc || style;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (!state.tokenize[state.tokenize.length-1].isBase) return null;\n    var firstChar = textAfter && textAfter.charAt(0), ctx = state.context;\n    if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) ctx = ctx.prev;\n    var closing = firstChar == ctx.type;\n    if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : cx.unit);\n    else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"'''\", '\"\"\"']}\n  }\n};\n"],"names":["words","str","obj","split","i","length","keywords","blockKeywords","standaloneKeywords","atoms","curPunc","tokenBase","stream","state","ch","next","startString","test","eatWhile","eat","tokenize","push","tokenComment","skipToEnd","expectExpression","lastToken","cur","current","propertyIsEnumerable","isBase","quote","tripleQuoted","t","escaped","end","match","tokenBaseUntilBrace","tokenVariableDeref","pop","depth","peek","maybeEnd","last","newline","Context","indented","column","type","align","prev","this","pushContext","col","context","popContext","groovy","name","startState","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","cx","firstChar","charAt","closing","unit","languageData","indentOnInput","commentTokens","line","block","open","close","closeBrackets","brackets"],"sourceRoot":""}