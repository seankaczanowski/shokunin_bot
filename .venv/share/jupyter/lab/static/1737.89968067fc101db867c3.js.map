{"version":3,"file":"1737.89968067fc101db867c3.js?v=89968067fc101db867c3","mappings":"iLAAA,IAAIA,EAAU,WAAWC,MAAM,IAcxB,MAAMC,EAAY,CACvBC,KAAM,YACNC,WAAY,WACV,MAAO,CACLC,YAAa,MACbC,KAAM,EACNC,MAAO,EACPC,YAAa,MAEjB,EACAC,MAAO,SAASC,EAAQC,GACtB,GAAID,EAAOE,WAAY,OAAO,KAC9B,GAAGF,EAAOG,MAAM,CACdF,EAAMN,YAAc,KACtB,CACA,IAAIS,EAAKJ,EAAOK,OAAOC,WACvB,GAAGhB,EAAQiB,QAAQH,MAAS,EAAE,CAC5B,GAAGH,EAAMN,cAAgB,KAAK,CAC5B,GAAGK,EAAOQ,MAAM,CACdP,EAAMN,YAAc,KACtB,CACA,MAAO,SACT,CACA,GAAGS,IAAO,KAAOA,IAAO,IAAI,CAC1B,GAAGA,IAAO,IAAI,CACZH,EAAML,MACR,KACI,CACFK,EAAMJ,OACR,CACA,MAAO,SACT,MACK,GAAGO,IAAO,KAAOA,IAAO,IAAI,CAC/B,MAAO,SACT,MACK,GAAGA,IAAO,KAAOA,IAAO,IAAI,CAC/B,MAAO,MACT,MACK,GAAGA,IAAO,KAAOA,IAAO,IAAI,CAC/B,MAAO,KACT,CACF,KACI,CACFH,EAAMN,YAAc,KACpB,GAAGK,EAAOQ,MAAM,CACdP,EAAMN,YAAc,KACtB,CACA,MAAO,SACT,CACA,GAAGK,EAAOQ,MAAM,CACdP,EAAMN,YAAc,KACtB,CACF,E","sources":["webpack://@jupyterlab/application-top/./node_modules/@codemirror/legacy-modes/mode/brainfuck.js"],"sourcesContent":["var reserve = \"><+-.,[]\".split(\"\");\n/*\n  comments can be either:\n  placed behind lines\n\n  +++    this is a comment\n\n  where reserved characters cannot be used\n  or in a loop\n  [\n  this is ok to use [ ] and stuff\n  ]\n  or preceded by #\n*/\nexport const brainfuck = {\n  name: \"brainfuck\",\n  startState: function() {\n    return {\n      commentLine: false,\n      left: 0,\n      right: 0,\n      commentLoop: false\n    }\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null\n    if(stream.sol()){\n      state.commentLine = false;\n    }\n    var ch = stream.next().toString();\n    if(reserve.indexOf(ch) !== -1){\n      if(state.commentLine === true){\n        if(stream.eol()){\n          state.commentLine = false;\n        }\n        return \"comment\";\n      }\n      if(ch === \"]\" || ch === \"[\"){\n        if(ch === \"[\"){\n          state.left++;\n        }\n        else{\n          state.right++;\n        }\n        return \"bracket\";\n      }\n      else if(ch === \"+\" || ch === \"-\"){\n        return \"keyword\";\n      }\n      else if(ch === \"<\" || ch === \">\"){\n        return \"atom\";\n      }\n      else if(ch === \".\" || ch === \",\"){\n        return \"def\";\n      }\n    }\n    else{\n      state.commentLine = true;\n      if(stream.eol()){\n        state.commentLine = false;\n      }\n      return \"comment\";\n    }\n    if(stream.eol()){\n      state.commentLine = false;\n    }\n  }\n};\n"],"names":["reserve","split","brainfuck","name","startState","commentLine","left","right","commentLoop","token","stream","state","eatSpace","sol","ch","next","toString","indexOf","eol"],"sourceRoot":""}