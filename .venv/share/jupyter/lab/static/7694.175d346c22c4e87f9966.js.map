{"version":3,"file":"7694.175d346c22c4e87f9966.js?v=175d346c22c4e87f9966","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/@codemirror/legacy-modes/mode/jinja2.js"],"sourcesContent":["var keywords = [\"and\", \"as\", \"block\", \"endblock\", \"by\", \"cycle\", \"debug\", \"else\", \"elif\",\n                \"extends\", \"filter\", \"endfilter\", \"firstof\", \"do\", \"for\",\n                \"endfor\", \"if\", \"endif\", \"ifchanged\", \"endifchanged\",\n                \"ifequal\", \"endifequal\", \"ifnotequal\", \"set\", \"raw\", \"endraw\",\n                \"endifnotequal\", \"in\", \"include\", \"load\", \"not\", \"now\", \"or\",\n                \"parsed\", \"regroup\", \"reversed\", \"spaceless\", \"call\", \"endcall\", \"macro\",\n                \"endmacro\", \"endspaceless\", \"ssi\", \"templatetag\", \"openblock\",\n                \"closeblock\", \"openvariable\", \"closevariable\", \"without\", \"context\",\n                \"openbrace\", \"closebrace\", \"opencomment\",\n                \"closecomment\", \"widthratio\", \"url\", \"with\", \"endwith\",\n                \"get_current_language\", \"trans\", \"endtrans\", \"noop\", \"blocktrans\",\n                \"endblocktrans\", \"get_available_languages\",\n                \"get_current_language_bidi\", \"pluralize\", \"autoescape\", \"endautoescape\"],\n    operator = /^[+\\-*&%=<>!?|~^]/,\n    sign = /^[:\\[\\(\\{]/,\n    atom = [\"true\", \"false\"],\n    number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\n\nkeywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\");\natom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\");\n\nfunction tokenBase (stream, state) {\n  var ch = stream.peek();\n\n  //Comment\n  if (state.incomment) {\n    if(!stream.skipTo(\"#}\")) {\n      stream.skipToEnd();\n    } else {\n      stream.eatWhile(/\\#|}/);\n      state.incomment = false;\n    }\n    return \"comment\";\n    //Tag\n  } else if (state.intag) {\n    //After operator\n    if(state.operator) {\n      state.operator = false;\n      if(stream.match(atom)) {\n        return \"atom\";\n      }\n      if(stream.match(number)) {\n        return \"number\";\n      }\n    }\n    //After sign\n    if(state.sign) {\n      state.sign = false;\n      if(stream.match(atom)) {\n        return \"atom\";\n      }\n      if(stream.match(number)) {\n        return \"number\";\n      }\n    }\n\n    if(state.instring) {\n      if(ch == state.instring) {\n        state.instring = false;\n      }\n      stream.next();\n      return \"string\";\n    } else if(ch == \"'\" || ch == '\"') {\n      state.instring = ch;\n      stream.next();\n      return \"string\";\n    } else if (state.inbraces > 0 && ch ==\")\") {\n      stream.next()\n      state.inbraces--;\n    }\n    else if (ch == \"(\") {\n      stream.next()\n      state.inbraces++;\n    }\n    else if (state.inbrackets > 0 && ch ==\"]\") {\n      stream.next()\n      state.inbrackets--;\n    }\n    else if (ch == \"[\") {\n      stream.next()\n      state.inbrackets++;\n    } else if (!state.lineTag && (stream.match(state.intag + \"}\") || stream.eat(\"-\") && stream.match(state.intag + \"}\"))) {\n      state.intag = false;\n      return \"tag\";\n    } else if(stream.match(operator)) {\n      state.operator = true;\n      return \"operator\";\n    } else if(stream.match(sign)) {\n      state.sign = true;\n    } else {\n      if (stream.column() == 1 && state.lineTag && stream.match(keywords)) {\n        //allow nospace after tag before the keyword\n        return \"keyword\";\n      }\n      if(stream.eat(\" \") || stream.sol()) {\n        if(stream.match(keywords)) {\n          return \"keyword\";\n        }\n        if(stream.match(atom)) {\n          return \"atom\";\n        }\n        if(stream.match(number)) {\n          return \"number\";\n        }\n        if(stream.sol()) {\n          stream.next();\n        }\n      } else {\n        stream.next();\n      }\n\n    }\n    return \"variable\";\n  } else if (stream.eat(\"{\")) {\n    if (stream.eat(\"#\")) {\n      state.incomment = true;\n      if(!stream.skipTo(\"#}\")) {\n        stream.skipToEnd();\n      } else {\n        stream.eatWhile(/\\#|}/);\n        state.incomment = false;\n      }\n      return \"comment\";\n      //Open tag\n    } else if (ch = stream.eat(/\\{|%/)) {\n      //Cache close tag\n      state.intag = ch;\n      state.inbraces = 0;\n      state.inbrackets = 0;\n      if(ch == \"{\") {\n        state.intag = \"}\";\n      }\n      stream.eat(\"-\");\n      return \"tag\";\n    }\n    //Line statements\n  } else if (stream.eat('#')) {\n    if (stream.peek() == '#') {\n      stream.skipToEnd();\n      return \"comment\"\n    }\n    else if (!stream.eol()) {\n      state.intag = true;\n      state.lineTag = true;\n      state.inbraces = 0;\n      state.inbrackets = 0;\n      return \"tag\";\n    }\n  }\n  stream.next();\n};\n\nexport const jinja2 = {\n  name: \"jinja2\",\n  startState: function () {\n    return {tokenize: tokenBase, inbrackets: 0, inbraces: 0};\n  },\n  token: function(stream, state) {\n    var style = state.tokenize(stream, state);\n    if (stream.eol() && state.lineTag && !state.instring && state.inbraces == 0 && state.inbrackets == 0) {\n      //Close line statement at the EOL\n      state.intag = false\n      state.lineTag = false\n    }\n    return style;\n  },\n  languageData: {\n    commentTokens: {block: {open: \"{#\", close: \"#}\", line: \"##\"}}\n  }\n};\n"],"names":["keywords","operator","sign","atom","number","RegExp","join","tokenBase","stream","state","ch","peek","incomment","skipTo","skipToEnd","eatWhile","intag","match","instring","next","inbraces","inbrackets","lineTag","eat","column","sol","eol","jinja2","name","startState","tokenize","token","style","languageData","commentTokens","block","open","close","line"],"sourceRoot":""}