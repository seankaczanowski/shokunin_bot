{"version":3,"file":"2211.9ab53a73ce0af0c8cb08.js?v=9ab53a73ce0af0c8cb08","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/lodash-es/uniqueId.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseRange.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_createRange.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/range.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/data/list.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/greedy-fas.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/acyclic.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_basePick.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_flatRest.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/pick.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseGt.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/max.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/mapValues.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/now.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/util.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/add-border-segments.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/coordinate-system.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/normalize.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/minBy.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/rank/util.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/rank/feasible-tree.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/graphlib/alg/dijkstra.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/graphlib/alg/dijkstra-all.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/graphlib/alg/floyd-warshall.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_asciiSize.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_hasUnicode.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_unicodeSize.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_stringSize.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/size.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/graphlib/alg/topsort.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/graphlib/alg/is-acyclic.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/graphlib/alg/dfs.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/graphlib/alg/postorder.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/graphlib/alg/preorder.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/graphlib/alg/prim.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/rank/network-simplex.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/rank/index.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/nesting-graph.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/cloneDeep.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/order/add-subgraph-constraints.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/order/build-layer-graph.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseZipObject.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/zipObject.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseSortBy.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_compareAscending.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_compareMultiple.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseOrderBy.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/sortBy.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/order/cross-count.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/order/init-order.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/order/barycenter.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/order/resolve-conflicts.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/order/sort.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/order/sort-subgraph.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/order/index.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/parent-dummy-chains.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/forOwn.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/forIn.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/position/bk.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/position/index.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/dagre/layout.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/union.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/graphlib/graph.js","webpack://@jupyterlab/application-top/./node_modules/dagre-d3-es/src/graphlib/index.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseExtremum.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseLt.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseMap.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseSet.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_basePickBy.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/defaults.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_createFind.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/findIndex.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/find.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/flatten.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseHas.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/has.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/isString.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/last.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/map.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/min.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_trimmedEndIndex.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseTrim.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/toNumber.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/toFinite.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/toInteger.js"],"sourcesContent":["import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nexport default baseRange;\n","import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;\n","import createRange from './_createRange.js';\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nexport default range;\n","/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nexport { List };\n\nclass List {\n  constructor() {\n    var sentinel = {};\n    sentinel._next = sentinel._prev = sentinel;\n    this._sentinel = sentinel;\n  }\n  dequeue() {\n    var sentinel = this._sentinel;\n    var entry = sentinel._prev;\n    if (entry !== sentinel) {\n      unlink(entry);\n      return entry;\n    }\n  }\n  enqueue(entry) {\n    var sentinel = this._sentinel;\n    if (entry._prev && entry._next) {\n      unlink(entry);\n    }\n    entry._next = sentinel._next;\n    sentinel._next._prev = entry;\n    sentinel._next = entry;\n    entry._prev = sentinel;\n  }\n  toString() {\n    var strs = [];\n    var sentinel = this._sentinel;\n    var curr = sentinel._prev;\n    while (curr !== sentinel) {\n      strs.push(JSON.stringify(curr, filterOutLinks));\n      curr = curr._prev;\n    }\n    return '[' + strs.join(', ') + ']';\n  }\n}\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { List } from './data/list.js';\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nexport { greedyFAS };\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(\n    _.map(results, function (e) {\n      return g.outEdges(e.v, e.w);\n    }),\n  );\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while ((entry = sources.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, in: 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, (fasGraph.node(e.v).out += weight));\n    maxIn = Math.max(maxIn, (fasGraph.node(e.w)['in'] += weight));\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function () {\n    return new List();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n","import * as _ from 'lodash-es';\nimport { greedyFAS } from './greedy-fas.js';\n\nexport { run, undo };\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? greedyFAS(g, weightFn(g)) : dfsFAS(g);\n  _.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (Object.prototype.hasOwnProperty.call(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function (e) {\n      if (Object.prototype.hasOwnProperty.call(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n","import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nexport default baseGt;\n","import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nexport default max;\n","import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nexport default mapValues;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\n\nexport {\n  addDummyNode,\n  simplify,\n  asNonCompoundGraph,\n  successorWeights,\n  predecessorWeights,\n  intersectRect,\n  buildLayerMatrix,\n  normalizeRanks,\n  removeEmptyRanks,\n  addBorderNode,\n  maxRank,\n  partition,\n  time,\n  notime,\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen),\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    }),\n  );\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    }),\n  );\n\n  var layers = [];\n  _.forEach(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function (vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0,\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(\n    _.map(g.nodes(), function (v) {\n      var rank = g.node(v).rank;\n      if (!_.isUndefined(rank)) {\n        return rank;\n      }\n    }),\n  );\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { addBorderSegments };\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (Object.prototype.hasOwnProperty.call(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n","import * as _ from 'lodash-es';\n\nexport { adjust, undo };\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (Object.prototype.hasOwnProperty.call(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n","/**\n * TypeScript type imports:\n *\n * @import { Graph } from '../graphlib/graph.js';\n */\nimport * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, undo };\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\n/**\n * @param {Graph} g\n */\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  /**\n   * @typedef {Object} Attrs\n   * @property {number} width\n   * @property {number} height\n   * @property {ReturnType<Graph[\"node\"]>} edgeLabel\n   * @property {any} edgeObj\n   * @property {ReturnType<Graph[\"node\"]>[\"rank\"]} rank\n   * @property {string} [dummy]\n   * @property {ReturnType<Graph[\"node\"]>[\"labelpos\"]} [labelpos]\n   */\n\n  /** @type {Attrs | undefined} */\n  var attrs = undefined;\n  var dummy, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank,\n    };\n    dummy = util.addDummyNode(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = 'edge-label';\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n","import baseExtremum from './_baseExtremum.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseLt from './_baseLt.js';\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nexport default minBy;\n","import * as _ from 'lodash-es';\n\nexport { longestPath, slack };\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (Object.prototype.hasOwnProperty.call(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(\n      _.map(g.outEdges(v), function (e) {\n        return dfs(e.w) - g.edge(e).minlen;\n      }),\n    );\n\n    if (\n      rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n      rank === undefined || // return value of _.map([]) for Lodash 4\n      rank === null\n    ) {\n      // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport { slack } from './util.js';\n\nexport { feasibleTree };\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function (e) {\n      var edgeV = e.v,\n        w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n","import * as _ from 'lodash-es';\nimport { PriorityQueue } from '../data/priority-queue.js';\n\nexport { dijkstra };\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(\n    g,\n    String(source),\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn ||\n      function (v) {\n        return g.outEdges(v);\n      },\n  );\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {};\n  var pq = new PriorityQueue();\n  var v, vEntry;\n\n  var updateNeighbors = function (edge) {\n    var w = edge.v !== v ? edge.v : edge.w;\n    var wEntry = results[w];\n    var weight = weightFn(edge);\n    var distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\n        'dijkstra does not allow negative edge weights. ' +\n          'Bad edge: ' +\n          edge +\n          ' Weight: ' +\n          weight,\n      );\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function (v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n","import * as _ from 'lodash-es';\nimport { dijkstra } from './dijkstra.js';\n\nexport { dijkstraAll };\n\nfunction dijkstraAll(g, weightFunc, edgeFunc) {\n  return _.transform(\n    g.nodes(),\n    function (acc, v) {\n      acc[v] = dijkstra(g, v, weightFunc, edgeFunc);\n    },\n    {},\n  );\n}\n","import * as _ from 'lodash-es';\n\nexport { floydWarshall };\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(\n    g,\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn ||\n      function (v) {\n        return g.outEdges(v);\n      },\n  );\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {};\n  var nodes = g.nodes();\n\n  nodes.forEach(function (v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function (w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function (edge) {\n      var w = edge.v === v ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function (k) {\n    var rowK = results[k];\n    nodes.forEach(function (i) {\n      var rowI = results[i];\n      nodes.forEach(function (j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n","import baseProperty from './_baseProperty.js';\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nexport default asciiSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nexport default hasUnicode;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nexport default unicodeSize;\n","import asciiSize from './_asciiSize.js';\nimport hasUnicode from './_hasUnicode.js';\nimport unicodeSize from './_unicodeSize.js';\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nexport default stringSize;\n","import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport stringSize from './_stringSize.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n  var tag = getTag(collection);\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n  return baseKeys(collection).length;\n}\n\nexport default size;\n","import * as _ from 'lodash-es';\n\nexport { topsort, CycleException };\n\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (Object.prototype.hasOwnProperty.call(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing\n","import { topsort, CycleException } from './topsort.js';\n\nexport { isAcyclic };\n\nfunction isAcyclic(g) {\n  try {\n    topsort(g);\n  } catch (e) {\n    if (e instanceof CycleException) {\n      return false;\n    }\n    throw e;\n  }\n  return true;\n}\n","import * as _ from 'lodash-es';\n\nexport { dfs };\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!Object.prototype.hasOwnProperty.call(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n    _.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}\n","import { dfs } from './dfs.js';\n\nexport { postorder };\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, 'post');\n}\n","import { dfs } from './dfs.js';\n\nexport { preorder };\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, 'pre');\n}\n","import * as _ from 'lodash-es';\nimport { PriorityQueue } from '../data/priority-queue.js';\nimport { Graph } from '../graph.js';\n\nexport { prim };\n\nfunction prim(g, weightFunc) {\n  var result = new Graph();\n  var parents = {};\n  var pq = new PriorityQueue();\n  var v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v;\n    var pri = pq.priority(w);\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _.each(g.nodes(), function (v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  });\n\n  // Start from an arbitrary node\n  pq.decrease(g.nodes()[0], 0);\n\n  var init = false;\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    if (Object.prototype.hasOwnProperty.call(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error('Input graph is not connected: ' + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n}\n","import * as _ from 'lodash-es';\nimport * as alg from '../../graphlib/alg/index.js';\nimport { simplify } from '../util.js';\nimport { feasibleTree } from './feasible-tree.js';\nimport { longestPath, slack } from './util.js';\n\nexport { networkSimplex };\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  longestPath(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = alg.postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child,\n      other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n        otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function (w) {\n    if (!Object.prototype.hasOwnProperty.call(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function (edge) {\n    return (\n      flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n      flip !== isDescendant(t, t.node(edge.w), tailLabel)\n    );\n  });\n\n  return _.minBy(candidates, function (edge) {\n    return slack(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = alg.preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function (v) {\n    var parent = t.node(v).parent,\n      edge = g.edge(v, parent),\n      flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n","import { feasibleTree } from './feasible-tree.js';\nimport { networkSimplex } from './network-simplex.js';\nimport { longestPath } from './util.js';\n\nexport { rank };\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);\n      break;\n    case 'tight-tree':\n      tightTreeRanker(g);\n      break;\n    case 'longest-path':\n      longestPathRanker(g);\n      break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, cleanup };\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, '_bt');\n  var bottom = util.addBorderNode(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(\n    g.edges(),\n    function (acc, e) {\n      return acc + g.edge(e).weight;\n    },\n    0,\n  );\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import * as _ from 'lodash-es';\n\nexport { addSubgraphConstraints };\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n    rootPrev;\n\n  _.forEach(vs, function (v) {\n    var child = g.parent(v),\n      parent,\n      prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\n\nexport { buildLayerGraph };\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n    result = new Graph({ compound: true })\n      .setGraph({ root: root })\n      .setDefaultNodeLabel(function (v) {\n        return g.node(v);\n      });\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v),\n      parent = g.parent(v);\n\n    if (node.rank === rank || (node.minRank <= rank && rank <= node.maxRank)) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v,\n          edge = result.edge(u, v),\n          weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (Object.prototype.hasOwnProperty.call(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank],\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId('_root'))));\n  return v;\n}\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexport default baseZipObject;\n","import assignValue from './_assignValue.js';\nimport baseZipObject from './_baseZipObject.js';\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nexport default zipObject;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n","import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n","import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n","import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n","import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n","import * as _ from 'lodash-es';\n\nexport { crossCount };\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(\n    southLayer,\n    _.map(southLayer, function (v, i) {\n      return i;\n    }),\n  );\n  var southEntries = _.flatten(\n    _.map(northLayer, function (v) {\n      return _.sortBy(\n        _.map(g.outEdges(v), function (e) {\n          return { pos: southPos[e.w], weight: g.edge(e).weight };\n        }),\n        'pos',\n      );\n    }),\n  );\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(\n    // @ts-expect-error\n    southEntries.forEach(function (entry) {\n      var index = entry.pos + firstIndex;\n      tree[index] += entry.weight;\n      var weightSum = 0;\n      // @ts-expect-error\n      while (index > 0) {\n        // @ts-expect-error\n        if (index % 2) {\n          weightSum += tree[index + 1];\n        }\n        // @ts-expect-error\n        index = (index - 1) >> 1;\n        tree[index] += entry.weight;\n      }\n      cc += entry.weight * weightSum;\n    }),\n  );\n\n  return cc;\n}\n","import * as _ from 'lodash-es';\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nexport function initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(\n    _.map(simpleNodes, function (v) {\n      return g.node(v).rank;\n    }),\n  );\n  var layers = _.map(_.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n","import * as _ from 'lodash-es';\n\nexport { barycenter };\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(\n        inV,\n        function (acc, e) {\n          var edge = g.edge(e),\n            nodeU = g.node(e.v);\n          return {\n            sum: acc.sum + edge.weight * nodeU.order,\n            weight: acc.weight + edge.weight,\n          };\n        },\n        { sum: 0, weight: 0 },\n      );\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight,\n      };\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { resolveConflicts };\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function (entry, i) {\n    var tmp = (mappedEntries[entry.v] = {\n      indegree: 0,\n      in: [],\n      out: [],\n      vs: [entry.v],\n      i: i,\n    });\n    if (!_.isUndefined(entry.barycenter)) {\n      // @ts-expect-error\n      tmp.barycenter = entry.barycenter;\n      // @ts-expect-error\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function (entry) {\n    // @ts-expect-error\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (\n        _.isUndefined(uEntry.barycenter) ||\n        _.isUndefined(vEntry.barycenter) ||\n        uEntry.barycenter >= vEntry.barycenter\n      ) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry['in'].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(\n    _.filter(entries, function (entry) {\n      return !entry.merged;\n    }),\n    function (entry) {\n      return _.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n    },\n  );\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\n\nexport { sort };\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function (entry) {\n    return Object.prototype.hasOwnProperty.call(entry, 'barycenter');\n  });\n  var sortable = parts.lhs,\n    unsortable = _.sortBy(parts.rhs, function (entry) {\n      return -entry.i;\n    }),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n","import * as _ from 'lodash-es';\nimport { barycenter } from './barycenter.js';\nimport { resolveConflicts } from './resolve-conflicts.js';\nimport { sort } from './sort.js';\n\nexport { sortSubgraph };\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (Object.prototype.hasOwnProperty.call(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br]);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!Object.prototype.hasOwnProperty.call(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter =\n        (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function (entry) {\n    entry.vs = _.flatten(\n      entry.vs.map(function (v) {\n        if (subgraphs[v]) {\n          return subgraphs[v].vs;\n        }\n        return v;\n      }),\n    );\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter =\n      (target.barycenter * target.weight + other.barycenter * other.weight) /\n      (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\nimport { addSubgraphConstraints } from './add-subgraph-constraints.js';\nimport { buildLayerGraph } from './build-layer-graph.js';\nimport { crossCount } from './cross-count.js';\nimport { initOrder } from './init-order.js';\nimport { sortSubgraph } from './sort-subgraph.js';\n\nexport { order };\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n    downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), 'inEdges'),\n    upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), 'outEdges');\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n    best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function (rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { parentDummyChains };\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (\n          pathIdx < path.length - 1 &&\n          g.node((pathV = path[pathIdx + 1])).minRank <= node.rank\n        ) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n","import baseForOwn from './_baseForOwn.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nexport default forOwn;\n","import baseFor from './_baseFor.js';\nimport castFunction from './_castFunction.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nexport default forIn;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nexport {\n  positionX,\n  findType1Conflicts,\n  findType2Conflicts,\n  addConflict,\n  hasConflict,\n  verticalAlignment,\n  horizontalCompaction,\n  alignCoordinates,\n  findSmallestWidthAlignment,\n  balance,\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n        k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _.forEach(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u),\n              uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        // @ts-expect-error\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n      nextNorthPos,\n      southPos = 0;\n\n    _.forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          // @ts-expect-error\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return !!conflicts[v] && Object.prototype.hasOwnProperty.call(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n    align = {},\n    pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function (layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n    blockG = buildBlockGraph(g, layering, root, reverseSep),\n    borderType = reverseSep ? 'borderLeft' : 'borderRight';\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function (acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function (acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n    graphLabel = g.graph(),\n    sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function (layer) {\n    var u;\n    _.forEach(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n          prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n    alignToMin = _.min(alignToVals),\n    alignToMax = _.max(alignToVals);\n\n  _.forEach(['u', 'd'], function (vert) {\n    _.forEach(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz,\n        xs = xss[alignment],\n        delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === 'l' ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g);\n  var conflicts = _.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _.forEach(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _.values(layering).reverse();\n    _.forEach(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _.map(adjustedLayering, function (inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === 'u' ? g.predecessors : g.successors).bind(g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (Object.prototype.hasOwnProperty.call(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;\n          break;\n        case 'r':\n          delta = vLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (Object.prototype.hasOwnProperty.call(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;\n          break;\n        case 'r':\n          delta = -wLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\nimport { positionX } from './bk.js';\n\nexport { position };\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forOwn(positionX(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _.forEach(layering, function (layer) {\n    var maxHeight = _.max(\n      _.map(layer, function (v) {\n        return g.node(v).height;\n      }),\n    );\n    _.forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\n\nexport { layout };\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', () => {\n    var layoutGraph = time('  buildLayoutGraph', () => buildLayoutGraph(g));\n    time('  runLayout', () => runLayout(layoutGraph, time));\n    time('  updateInputGraph', () => updateInputGraph(g, layoutGraph));\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', () => makeSpaceForEdgeLabels(g));\n  time('    removeSelfEdges', () => removeSelfEdges(g));\n  time('    acyclic', () => acyclic.run(g));\n  time('    nestingGraph.run', () => nestingGraph.run(g));\n  time('    rank', () => rank(util.asNonCompoundGraph(g)));\n  time('    injectEdgeLabelProxies', () => injectEdgeLabelProxies(g));\n  time('    removeEmptyRanks', () => util.removeEmptyRanks(g));\n  time('    nestingGraph.cleanup', () => nestingGraph.cleanup(g));\n  time('    normalizeRanks', () => util.normalizeRanks(g));\n  time('    assignRankMinMax', () => assignRankMinMax(g));\n  time('    removeEdgeLabelProxies', () => removeEdgeLabelProxies(g));\n  time('    normalize.run', () => normalize.run(g));\n  time('    parentDummyChains', () => parentDummyChains(g));\n  time('    addBorderSegments', () => addBorderSegments(g));\n  time('    order', () => order(g));\n  time('    insertSelfEdges', () => insertSelfEdges(g));\n  time('    adjustCoordinateSystem', () => coordinateSystem.adjust(g));\n  time('    position', () => position(g));\n  time('    positionSelfEdges', () => positionSelfEdges(g));\n  time('    removeBorderNodes', () => removeBorderNodes(g));\n  time('    normalize.undo', () => normalize.undo(g));\n  time('    fixupEdgeLabelCoords', () => fixupEdgeLabelCoords(g));\n  time('    undoCoordinateSystem', () => coordinateSystem.undo(g));\n  time('    translateGraph', () => translateGraph(g));\n  time('    assignNodeIntersects', () => assignNodeIntersects(g));\n  time('    reversePoints', () => reversePointsForReversedEdges(g));\n  time('    acyclic.undo', () => acyclic.undo(g));\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (Object.prototype.hasOwnProperty.call(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r',\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(\n    _.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs)),\n  );\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(\n      e,\n      _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs)),\n    );\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      // @ts-expect-error\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (Object.prototype.hasOwnProperty.call(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(\n          g,\n          'selfedge',\n          {\n            width: selfEdge.label.width,\n            height: selfEdge.label.height,\n            rank: node.rank,\n            order: i + ++orderShift,\n            e: selfEdge.e,\n            label: selfEdge.label,\n          },\n          '_se',\n        );\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + (2 * dx) / 3, y: y - dy },\n        { x: x + (5 * dx) / 6, y: y - dy },\n        { x: x + dx, y: y },\n        { x: x + (5 * dx) / 6, y: y + dy },\n        { x: x + (2 * dx) / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n","import baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nexport default union;\n","import * as _ from 'lodash-es';\n\nvar DEFAULT_EDGE_NAME = '\\x00';\nvar GRAPH_NODE = '\\x00';\nvar EDGE_KEY_DELIM = '\\x01';\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\nexport class Graph {\n  constructor(opts = {}) {\n    this._isDirected = Object.prototype.hasOwnProperty.call(opts, 'directed')\n      ? opts.directed\n      : true;\n    this._isMultigraph = Object.prototype.hasOwnProperty.call(opts, 'multigraph')\n      ? opts.multigraph\n      : false;\n    this._isCompound = Object.prototype.hasOwnProperty.call(opts, 'compound')\n      ? opts.compound\n      : false;\n\n    // Label for the graph itself\n    this._label = undefined;\n\n    // Defaults to be set when creating a new node\n    this._defaultNodeLabelFn = _.constant(undefined);\n\n    // Defaults to be set when creating a new edge\n    this._defaultEdgeLabelFn = _.constant(undefined);\n\n    // v -> label\n    this._nodes = {};\n\n    if (this._isCompound) {\n      // v -> parent\n      this._parent = {};\n\n      // v -> children\n      this._children = {};\n      this._children[GRAPH_NODE] = {};\n    }\n\n    // v -> edgeObj\n    this._in = {};\n\n    // u -> v -> Number\n    this._preds = {};\n\n    // v -> edgeObj\n    this._out = {};\n\n    // v -> w -> Number\n    this._sucs = {};\n\n    // e -> edgeObj\n    this._edgeObjs = {};\n\n    // e -> label\n    this._edgeLabels = {};\n  }\n  /* === Graph functions ========= */\n  isDirected() {\n    return this._isDirected;\n  }\n  isMultigraph() {\n    return this._isMultigraph;\n  }\n  isCompound() {\n    return this._isCompound;\n  }\n  setGraph(label) {\n    this._label = label;\n    return this;\n  }\n  graph() {\n    return this._label;\n  }\n  /* === Node functions ========== */\n  setDefaultNodeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultNodeLabelFn = newDefault;\n    return this;\n  }\n  nodeCount() {\n    return this._nodeCount;\n  }\n  nodes() {\n    return _.keys(this._nodes);\n  }\n  sources() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._in[v]);\n    });\n  }\n  sinks() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._out[v]);\n    });\n  }\n  setNodes(vs, value) {\n    var args = arguments;\n    var self = this;\n    _.each(vs, function (v) {\n      if (args.length > 1) {\n        self.setNode(v, value);\n      } else {\n        self.setNode(v);\n      }\n    });\n    return this;\n  }\n  setNode(v, value) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      if (arguments.length > 1) {\n        this._nodes[v] = value;\n      }\n      return this;\n    }\n\n    // @ts-expect-error\n    this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n    if (this._isCompound) {\n      this._parent[v] = GRAPH_NODE;\n      this._children[v] = {};\n      this._children[GRAPH_NODE][v] = true;\n    }\n    this._in[v] = {};\n    this._preds[v] = {};\n    this._out[v] = {};\n    this._sucs[v] = {};\n    ++this._nodeCount;\n    return this;\n  }\n  node(v) {\n    return this._nodes[v];\n  }\n  hasNode(v) {\n    return Object.prototype.hasOwnProperty.call(this._nodes, v);\n  }\n  removeNode(v) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      var removeEdge = (e) => this.removeEdge(this._edgeObjs[e]);\n      delete this._nodes[v];\n      if (this._isCompound) {\n        this._removeFromParentsChildList(v);\n        delete this._parent[v];\n        _.each(this.children(v), (child) => {\n          this.setParent(child);\n        });\n        delete this._children[v];\n      }\n      _.each(_.keys(this._in[v]), removeEdge);\n      delete this._in[v];\n      delete this._preds[v];\n      _.each(_.keys(this._out[v]), removeEdge);\n      delete this._out[v];\n      delete this._sucs[v];\n      --this._nodeCount;\n    }\n    return this;\n  }\n  setParent(v, parent) {\n    if (!this._isCompound) {\n      throw new Error('Cannot set parent in a non-compound graph');\n    }\n\n    if (_.isUndefined(parent)) {\n      parent = GRAPH_NODE;\n    } else {\n      // Coerce parent to string\n      parent += '';\n      for (var ancestor = parent; !_.isUndefined(ancestor); ancestor = this.parent(ancestor)) {\n        if (ancestor === v) {\n          throw new Error('Setting ' + parent + ' as parent of ' + v + ' would create a cycle');\n        }\n      }\n\n      this.setNode(parent);\n    }\n\n    this.setNode(v);\n    this._removeFromParentsChildList(v);\n    this._parent[v] = parent;\n    this._children[parent][v] = true;\n    return this;\n  }\n  _removeFromParentsChildList(v) {\n    delete this._children[this._parent[v]][v];\n  }\n  parent(v) {\n    if (this._isCompound) {\n      var parent = this._parent[v];\n      if (parent !== GRAPH_NODE) {\n        return parent;\n      }\n    }\n  }\n  children(v) {\n    if (_.isUndefined(v)) {\n      v = GRAPH_NODE;\n    }\n\n    if (this._isCompound) {\n      var children = this._children[v];\n      if (children) {\n        return _.keys(children);\n      }\n    } else if (v === GRAPH_NODE) {\n      return this.nodes();\n    } else if (this.hasNode(v)) {\n      return [];\n    }\n  }\n  predecessors(v) {\n    var predsV = this._preds[v];\n    if (predsV) {\n      return _.keys(predsV);\n    }\n  }\n  successors(v) {\n    var sucsV = this._sucs[v];\n    if (sucsV) {\n      return _.keys(sucsV);\n    }\n  }\n  neighbors(v) {\n    var preds = this.predecessors(v);\n    if (preds) {\n      return _.union(preds, this.successors(v));\n    }\n  }\n  isLeaf(v) {\n    var neighbors;\n    if (this.isDirected()) {\n      neighbors = this.successors(v);\n    } else {\n      neighbors = this.neighbors(v);\n    }\n    return neighbors.length === 0;\n  }\n  filterNodes(filter) {\n    // @ts-expect-error\n    var copy = new this.constructor({\n      directed: this._isDirected,\n      multigraph: this._isMultigraph,\n      compound: this._isCompound,\n    });\n\n    copy.setGraph(this.graph());\n\n    var self = this;\n    _.each(this._nodes, function (value, v) {\n      if (filter(v)) {\n        copy.setNode(v, value);\n      }\n    });\n\n    _.each(this._edgeObjs, function (e) {\n      // @ts-expect-error\n      if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n        copy.setEdge(e, self.edge(e));\n      }\n    });\n\n    var parents = {};\n    function findParent(v) {\n      var parent = self.parent(v);\n      if (parent === undefined || copy.hasNode(parent)) {\n        parents[v] = parent;\n        return parent;\n      } else if (parent in parents) {\n        return parents[parent];\n      } else {\n        return findParent(parent);\n      }\n    }\n\n    if (this._isCompound) {\n      _.each(copy.nodes(), function (v) {\n        copy.setParent(v, findParent(v));\n      });\n    }\n\n    return copy;\n  }\n  /* === Edge functions ========== */\n  setDefaultEdgeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultEdgeLabelFn = newDefault;\n    return this;\n  }\n  edgeCount() {\n    return this._edgeCount;\n  }\n  edges() {\n    return _.values(this._edgeObjs);\n  }\n  setPath(vs, value) {\n    var self = this;\n    var args = arguments;\n    _.reduce(vs, function (v, w) {\n      if (args.length > 1) {\n        self.setEdge(v, w, value);\n      } else {\n        self.setEdge(v, w);\n      }\n      return w;\n    });\n    return this;\n  }\n  /*\n   * setEdge(v, w, [value, [name]])\n   * setEdge({ v, w, [name] }, [value])\n   */\n  setEdge() {\n    var v, w, name, value;\n    var valueSpecified = false;\n    var arg0 = arguments[0];\n\n    if (typeof arg0 === 'object' && arg0 !== null && 'v' in arg0) {\n      v = arg0.v;\n      w = arg0.w;\n      name = arg0.name;\n      if (arguments.length === 2) {\n        value = arguments[1];\n        valueSpecified = true;\n      }\n    } else {\n      v = arg0;\n      w = arguments[1];\n      name = arguments[3];\n      if (arguments.length > 2) {\n        value = arguments[2];\n        valueSpecified = true;\n      }\n    }\n\n    v = '' + v;\n    w = '' + w;\n    if (!_.isUndefined(name)) {\n      name = '' + name;\n    }\n\n    var e = edgeArgsToId(this._isDirected, v, w, name);\n    if (Object.prototype.hasOwnProperty.call(this._edgeLabels, e)) {\n      if (valueSpecified) {\n        this._edgeLabels[e] = value;\n      }\n      return this;\n    }\n\n    if (!_.isUndefined(name) && !this._isMultigraph) {\n      throw new Error('Cannot set a named edge when isMultigraph = false');\n    }\n\n    // It didn't exist, so we need to create it.\n    // First ensure the nodes exist.\n    this.setNode(v);\n    this.setNode(w);\n\n    // @ts-expect-error\n    this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n    var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n    // Ensure we add undirected edges in a consistent way.\n    v = edgeObj.v;\n    w = edgeObj.w;\n\n    Object.freeze(edgeObj);\n    this._edgeObjs[e] = edgeObj;\n    incrementOrInitEntry(this._preds[w], v);\n    incrementOrInitEntry(this._sucs[v], w);\n    this._in[w][e] = edgeObj;\n    this._out[v][e] = edgeObj;\n    this._edgeCount++;\n    return this;\n  }\n  edge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return this._edgeLabels[e];\n  }\n  hasEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return Object.prototype.hasOwnProperty.call(this._edgeLabels, e);\n  }\n  removeEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    var edge = this._edgeObjs[e];\n    if (edge) {\n      v = edge.v;\n      w = edge.w;\n      delete this._edgeLabels[e];\n      delete this._edgeObjs[e];\n      decrementOrRemoveEntry(this._preds[w], v);\n      decrementOrRemoveEntry(this._sucs[v], w);\n      delete this._in[w][e];\n      delete this._out[v][e];\n      this._edgeCount--;\n    }\n    return this;\n  }\n  inEdges(v, u) {\n    var inV = this._in[v];\n    if (inV) {\n      var edges = _.values(inV);\n      if (!u) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.v === u;\n      });\n    }\n  }\n  outEdges(v, w) {\n    var outV = this._out[v];\n    if (outV) {\n      var edges = _.values(outV);\n      if (!w) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.w === w;\n      });\n    }\n  }\n  nodeEdges(v, w) {\n    var inEdges = this.inEdges(v, w);\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(v, w));\n    }\n  }\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) {\n    delete map[k];\n  }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj = { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n","// Includes only the \"core\" of graphlib\n\nimport { Graph } from './graph.js';\n\nconst version = '2.1.9-pre';\n\nexport { Graph, version };\n","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n"],"names":["idCounter","uniqueId","prefix","id","nativeCeil","Math","ceil","nativeMax","max","baseRange","start","end","step","fromRight","index","length","result","Array","createRange","undefined","toFinite","range","List","constructor","sentinel","_next","_prev","this","_sentinel","dequeue","entry","unlink","enqueue","toString","strs","curr","push","JSON","stringify","filterOutLinks","join","k","v","DEFAULT_WEIGHT_FN","greedyFAS","g","weightFn","nodeCount","state","buildState","results","doGreedyFAS","graph","buckets","zeroIdx","e","outEdges","w","sources","sinks","removeNode","i","concat","collectPredecessors","inEdges","edge","weight","uEntry","node","out","assignBucket","wEntry","fasGraph","maxIn","maxOut","nodes","setNode","in","edges","prevWeight","edgeWeight","setEdge","map","run","fas","acyclicer","dfsFAS","label","removeEdge","forwardName","name","reversed","stack","visited","dfs","Object","prototype","hasOwnProperty","call","undo","basePick","object","paths","value","path","hasIn","flatRest","func","flatten","pick","baseGt","other","array","identity","mapValues","iteratee","key","now","Date","addDummyNode","type","attrs","hasNode","dummy","simplify","simplified","setGraph","simpleLabel","minlen","asNonCompoundGraph","multigraph","isMultigraph","children","successorWeights","weightMap","_","sucs","forEach","zipObject","predecessorWeights","preds","intersectRect","rect","point","x","y","dx","dy","width","h","height","Error","sx","sy","abs","buildLayerMatrix","layering","rank","order","normalizeRanks","min","removeEmptyRanks","offset","layers","delta","nodeRankFactor","vs","addBorderNode","arguments","partition","collection","fn","lhs","rhs","console","log","notime","addBorderSegments","borderLeft","borderRight","minRank","maxRank","prop","sg","sgNode","borderType","prev","setParent","adjust","rankDir","rankdir","toLowerCase","swapWidthHeight","reverseY","swapXY","swapWidthHeightOne","reverseYOne","points","swapXYOne","dummyChains","normalizeEdge","vRank","wRank","edgeLabel","labelRank","edgeObj","labelpos","origLabel","successors","minBy","longestPath","Number","POSITIVE_INFINITY","slack","feasibleTree","t","directed","size","tightTree","findMinSlackEdge","shiftRanks","nodeEdges","edgeV","DEFAULT_WEIGHT_FUNC","source","edgeFn","runDijkstra","String","pq","PriorityQueue","vEntry","updateNeighbors","distance","predecessor","decrease","add","removeMin","dijkstraAll","weightFunc","edgeFunc","transform","acc","dijkstra","floydWarshall","runFloydWarshall","d","rowK","rowI","j","ik","kj","ij","altDistance","asciiSize","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsVarRange","rsZWJ","reHasUnicode","RegExp","hasUnicode","string","test","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsSymbol","reUnicode","unicodeSize","lastIndex","stringSize","mapTag","setTag","isArrayLike","isString","tag","CycleException","visit","predecessors","isAcyclic","topsort","navigation","isDirected","neighbors","bind","doDfs","postorder","preorder","prim","Graph","parents","pri","priority","each","init","networkSimplex","initLowLimValues","initCutValues","calcCutValue","leaveEdge","enterEdge","exchangeEdges","f","slice","assignCutValue","child","childLab","parent","cutvalue","childIsTail","graphEdge","cutValue","isOutEdge","pointsToHead","otherWeight","isTreeEdge","otherCutValue","tree","root","dfsAssignLowLim","nextLim","low","lim","hasEdge","vLabel","wLabel","tailLabel","flip","candidates","isDescendant","updateRanks","flipped","u","rootLabel","ranker","networkSimplexRanker","tightTreeRanker","longestPathRanker","depths","treeDepths","nodeSep","nestingRoot","sumWeights","top","bottom","borderTop","borderBottom","childNode","childTop","childBottom","thisWeight","nestingEdge","depth","cleanup","graphLabel","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","cloneDeep","addSubgraphConstraints","cg","rootPrev","prevChild","buildLayerGraph","relationship","createRootNode","compound","setDefaultNodeLabel","baseZipObject","props","values","assignFunc","valsLength","baseSortBy","comparer","sort","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","isSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","compareMultiple","orders","objCriteria","criteria","othCriteria","ordersLength","baseOrderBy","iteratees","isArray","sortBy","crossCount","cc","twoLayerCrossCount","northLayer","southLayer","southPos","southEntries","pos","firstIndex","treeSize","weightSum","initOrder","simpleNodes","orderedVs","barycenter","movable","inV","nodeU","sum","resolveConflicts","entries","mappedEntries","tmp","indegree","entryV","entryW","sourceSet","doResolveConflicts","handleIn","merged","mergeEntries","handleOut","pop","reverse","target","biasRight","parts","sortable","unsortable","vsIndex","compareWithBias","consumeUnsortable","last","bias","sortSubgraph","bl","br","subgraphs","barycenters","subgraphResult","mergeBarycenters","expandSubgraphs","blPred","brPred","downLayerGraphs","buildLayerGraphs","upLayerGraphs","assignOrder","bestCC","best","lastBest","sweepLayerGraphs","ranks","layerGraphs","lg","sorted","layer","parentDummyChains","postorderNums","pathData","findPath","lca","pathIdx","pathV","ascending","vPath","wPath","forOwn","forIn","keysIn","findType1Conflicts","conflicts","visitLayer","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","addConflict","findType2Conflicts","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","prevNorthPos","nextNorthPos","southLookahead","conflictsV","hasConflict","verticalAlignment","neighborFn","align","prevIdx","ws","mp","floor","il","horizontalCompaction","reverseSep","xs","blockG","buildBlockGraph","iterate","setXsFunc","nextNodesFunc","elem","pass1","reduce","pass2","blockGraph","sepFn","sep","nodesep","edgesep","vRoot","uRoot","prevMax","findSmallestWidthAlignment","xss","NEGATIVE_INFINITY","halfWidth","alignCoordinates","alignTo","alignToVals","alignToMin","alignToMax","vert","horiz","alignment","xsVals","balance","ul","ignore","positionX","adjustedLayering","inner","smallestWidth","edgeSep","position","positionY","rankSep","ranksep","prevY","maxHeight","layout","opts","time","debugTiming","layoutGraph","buildLayoutGraph","runLayout","updateInputGraph","makeSpaceForEdgeLabels","removeSelfEdges","injectEdgeLabelProxies","assignRankMinMax","removeEdgeLabelProxies","insertSelfEdges","positionSelfEdges","removeBorderNodes","fixupEdgeLabelCoords","translateGraph","assignNodeIntersects","reversePointsForReversedEdges","inputGraph","inputLabel","layoutLabel","graphNumAttrs","graphDefaults","graphAttrs","nodeNumAttrs","nodeDefaults","edgeNumAttrs","edgeDefaults","labeloffset","edgeAttrs","canonicalize","selectNumberAttrs","minX","maxX","minY","maxY","marginX","marginx","marginY","marginy","getExtremes","p","nodeV","nodeW","p1","p2","unshift","b","l","r","selfEdges","orderShift","selfEdge","selfNode","obj","newAttrs","union","arrays","isArrayLikeObject","DEFAULT_EDGE_NAME","GRAPH_NODE","EDGE_KEY_DELIM","_isDirected","_isMultigraph","_isCompound","_label","_defaultNodeLabelFn","_defaultEdgeLabelFn","_nodes","_parent","_children","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","isCompound","newDefault","_nodeCount","self","setNodes","args","_removeFromParentsChildList","ancestor","predsV","sucsV","isLeaf","filterNodes","filter","copy","findParent","setDefaultEdgeLabel","edgeCount","_edgeCount","setPath","valueSpecified","arg0","edgeArgsToId","edgeArgsToObj","freeze","incrementOrInitEntry","edgeObjToId","decrementOrRemoveEntry","outV","v_","w_","version","baseExtremum","comparator","current","computed","baseLt","baseMap","baseSet","customizer","isObject","nested","newValue","objValue","basePickBy","predicate","objectProto","defaults","guard","propsIndex","propsLength","createFind","findIndexFunc","fromIndex","iterable","keys","findIndex","toInteger","find","baseHas","has","stringTag","reWhitespace","trimmedEndIndex","charAt","reTrimStart","baseTrim","replace","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","valueOf","isBinary","INFINITY","MAX_INTEGER","sign","remainder"],"sourceRoot":""}