{"version":3,"file":"4528.33adff4947b12364b30f.js?v=33adff4947b12364b30f","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/@codemirror/legacy-modes/mode/clike.js"],"sourcesContent":["function Context(indented, column, type, info, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.info = info;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type, info) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\" && type != \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, info, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\nfunction typeBefore(stream, state, pos) {\n  if (state.prevToken == \"variable\" || state.prevToken == \"type\") return true;\n  if (/\\S(?:[^- ]>|[*\\]])\\s*$|\\*$/.test(stream.string.slice(0, pos))) return true;\n  if (state.typeAtEndOfLine && stream.column() == stream.indentation()) return true;\n}\n\nfunction isTopScope(context) {\n  for (;;) {\n    if (!context || context.type == \"top\") return true;\n    if (context.type == \"}\" && context.prev.info != \"namespace\") return false;\n    context = context.prev;\n  }\n}\n\nexport function clike(parserConfig) {\n  var statementIndentUnit = parserConfig.statementIndentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      types = parserConfig.types || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      defKeywords = parserConfig.defKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false,\n      indentSwitch = parserConfig.indentSwitch !== false,\n      namespaceSeparator = parserConfig.namespaceSeparator,\n      isPunctuationChar = parserConfig.isPunctuationChar || /[\\[\\]{}\\(\\),;\\:\\.]/,\n      numberStart = parserConfig.numberStart || /[\\d\\.]/,\n      number = parserConfig.number || /^(?:0x[a-f\\d]+|0b[01]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:e[-+]?\\d+)?)(u|ll?|l|f)?/i,\n      isOperatorChar = parserConfig.isOperatorChar || /[+\\-*&%=<>!?|\\/]/,\n      isIdentifierChar = parserConfig.isIdentifierChar || /[\\w\\$_\\xa1-\\uffff]/,\n      // An optional function that takes a {string} token and returns true if it\n      // should be treated as a builtin.\n      isReservedIdentifier = parserConfig.isReservedIdentifier || false;\n\n  var curPunc, isDefKeyword;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (numberStart.test(ch)) {\n      stream.backUp(1)\n      if (stream.match(number)) return \"number\"\n      stream.next()\n    }\n    if (isPunctuationChar.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      while (!stream.match(/^\\/[\\/*]/, false) && stream.eat(isOperatorChar)) {}\n      return \"operator\";\n    }\n    stream.eatWhile(isIdentifierChar);\n    if (namespaceSeparator) while (stream.match(namespaceSeparator))\n      stream.eatWhile(isIdentifierChar);\n\n    var cur = stream.current();\n    if (contains(keywords, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      if (contains(defKeywords, cur)) isDefKeyword = true;\n      return \"keyword\";\n    }\n    if (contains(types, cur)) return \"type\";\n    if (contains(builtin, cur)\n        || (isReservedIdentifier && isReservedIdentifier(cur))) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (contains(atoms, cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function maybeEOL(stream, state) {\n    if (parserConfig.typeFirstDefinitions && stream.eol() && isTopScope(state.context))\n      state.typeAtEndOfLine = typeBefore(stream, state, stream.pos)\n  }\n\n  // Interface\n\n  return {\n    name: parserConfig.name,\n    startState: function(indentUnit) {\n      return {\n        tokenize: null,\n        context: new Context(-indentUnit, 0, \"top\", null, false),\n        indented: 0,\n        startOfLine: true,\n        prevToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) { maybeEOL(stream, state); return null; }\n      curPunc = isDefKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \";\" || curPunc == \":\" || (curPunc == \",\" && stream.match(/^\\s*(?:\\/\\/.*)?$/, false)))\n        while (state.context.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (indentStatements &&\n               (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != \";\") ||\n                (ctx.type == \"statement\" && curPunc == \"newstatement\"))) {\n        pushContext(state, stream.column(), \"statement\", stream.current());\n      }\n\n      if (style == \"variable\" &&\n          ((state.prevToken == \"def\" ||\n            (parserConfig.typeFirstDefinitions && typeBefore(stream, state, stream.start) &&\n             isTopScope(state.context) && stream.match(/^\\s*\\(/, false)))))\n        style = \"def\";\n\n      if (hooks.token) {\n        var result = hooks.token(stream, state, style);\n        if (result !== undefined) style = result;\n      }\n\n      if (style == \"def\" && parserConfig.styleDefs === false) style = \"variable\";\n\n      state.startOfLine = false;\n      state.prevToken = isDefKeyword ? \"def\" : style || curPunc;\n      maybeEOL(stream, state);\n      return style;\n    },\n\n    indent: function(state, textAfter, context) {\n      if (state.tokenize != tokenBase && state.tokenize != null || state.typeAtEndOfLine && isTopScope(state.context))\n        return null;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      if (parserConfig.dontIndentStatements)\n        while (ctx.type == \"statement\" && parserConfig.dontIndentStatements.test(ctx.info))\n          ctx = ctx.prev\n      if (hooks.indent) {\n        var hook = hooks.indent(state, ctx, textAfter, context.unit);\n        if (typeof hook == \"number\") return hook\n      }\n      var switchBlock = ctx.prev && ctx.prev.info == \"switch\";\n      if (parserConfig.allmanIndentation && /[{(]/.test(firstChar)) {\n        while (ctx.type != \"top\" && ctx.type != \"}\") ctx = ctx.prev\n        return ctx.indented\n      }\n      if (ctx.type == \"statement\")\n        return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit || context.unit);\n      if (ctx.align && (!dontAlignCalls || ctx.type != \")\"))\n        return ctx.column + (closing ? 0 : 1);\n      if (ctx.type == \")\" && !closing)\n        return ctx.indented + (statementIndentUnit || context.unit);\n\n      return ctx.indented + (closing ? 0 : context.unit) +\n        (!closing && switchBlock && !/^(?:case|default)\\b/.test(textAfter) ? context.unit : 0);\n    },\n\n    languageData: {\n      indentOnInput: indentSwitch ? /^\\s*(?:case .*?:|default:|\\{\\}?|\\})$/ : /^\\s*[{}]$/,\n      commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n      autocomplete: Object.keys(keywords).concat(Object.keys(types)).concat(Object.keys(builtin)).concat(Object.keys(atoms)),\n      ...parserConfig.languageData\n    }\n  };\n};\n\nfunction words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nfunction contains(words, word) {\n  if (typeof words === \"function\") {\n    return words(word);\n  } else {\n    return words.propertyIsEnumerable(word);\n  }\n}\nvar cKeywords = \"auto if break case register continue return default do sizeof \" +\n    \"static else struct switch extern typedef union for goto while enum const \" +\n    \"volatile inline restrict asm fortran\";\n\n// Keywords from https://en.cppreference.com/w/cpp/keyword includes C++20.\nvar cppKeywords = \"alignas alignof and and_eq audit axiom bitand bitor catch \" +\n    \"class compl concept constexpr const_cast decltype delete dynamic_cast \" +\n    \"explicit export final friend import module mutable namespace new noexcept \" +\n    \"not not_eq operator or or_eq override private protected public \" +\n    \"reinterpret_cast requires static_assert static_cast template this \" +\n    \"thread_local throw try typeid typename using virtual xor xor_eq\";\n\nvar objCKeywords = \"bycopy byref in inout oneway out self super atomic nonatomic retain copy \" +\n    \"readwrite readonly strong weak assign typeof nullable nonnull null_resettable _cmd \" +\n    \"@interface @implementation @end @protocol @encode @property @synthesize @dynamic @class \" +\n    \"@public @package @private @protected @required @optional @try @catch @finally @import \" +\n    \"@selector @encode @defs @synchronized @autoreleasepool @compatibility_alias @available\";\n\nvar objCBuiltins = \"FOUNDATION_EXPORT FOUNDATION_EXTERN NS_INLINE NS_FORMAT_FUNCTION \" +\n    \" NS_RETURNS_RETAINEDNS_ERROR_ENUM NS_RETURNS_NOT_RETAINED NS_RETURNS_INNER_POINTER \" +\n    \"NS_DESIGNATED_INITIALIZER NS_ENUM NS_OPTIONS NS_REQUIRES_NIL_TERMINATION \" +\n    \"NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_SWIFT_NAME NS_REFINED_FOR_SWIFT\"\n\n// Do not use this. Use the cTypes function below. This is global just to avoid\n// excessive calls when cTypes is being called multiple times during a parse.\nvar basicCTypes = words(\"int long char short double float unsigned signed \" +\n                        \"void bool\");\n\n// Do not use this. Use the objCTypes function below. This is global just to avoid\n// excessive calls when objCTypes is being called multiple times during a parse.\nvar basicObjCTypes = words(\"SEL instancetype id Class Protocol BOOL\");\n\n// Returns true if identifier is a \"C\" type.\n// C type is defined as those that are reserved by the compiler (basicTypes),\n// and those that end in _t (Reserved by POSIX for types)\n// http://www.gnu.org/software/libc/manual/html_node/Reserved-Names.html\nfunction cTypes(identifier) {\n  return contains(basicCTypes, identifier) || /.+_t$/.test(identifier);\n}\n\n// Returns true if identifier is a \"Objective C\" type.\nfunction objCTypes(identifier) {\n  return cTypes(identifier) || contains(basicObjCTypes, identifier);\n}\n\nvar cBlockKeywords = \"case do else for if switch while struct enum union\";\nvar cDefKeywords = \"struct enum union\";\n\nfunction cppHook(stream, state) {\n  if (!state.startOfLine) return false\n  for (var ch, next = null; ch = stream.peek();) {\n    if (ch == \"\\\\\" && stream.match(/^.$/)) {\n      next = cppHook\n      break\n    } else if (ch == \"/\" && stream.match(/^\\/[\\/\\*]/, false)) {\n      break\n    }\n    stream.next()\n  }\n  state.tokenize = next\n  return \"meta\"\n}\n\nfunction pointerHook(_stream, state) {\n  if (state.prevToken == \"type\") return \"type\";\n  return false;\n}\n\n// For C and C++ (and ObjC): identifiers starting with __\n// or _ followed by a capital letter are reserved for the compiler.\nfunction cIsReservedIdentifier(token) {\n  if (!token || token.length < 2) return false;\n  if (token[0] != '_') return false;\n  return (token[1] == '_') || (token[1] !== token[1].toLowerCase());\n}\n\nfunction cpp14Literal(stream) {\n  stream.eatWhile(/[\\w\\.']/);\n  return \"number\";\n}\n\nfunction cpp11StringHook(stream, state) {\n  stream.backUp(1);\n  // Raw strings.\n  if (stream.match(/^(?:R|u8R|uR|UR|LR)/)) {\n    var match = stream.match(/^\"([^\\s\\\\()]{0,16})\\(/);\n    if (!match) {\n      return false;\n    }\n    state.cpp11RawStringDelim = match[1];\n    state.tokenize = tokenRawString;\n    return tokenRawString(stream, state);\n  }\n  // Unicode strings/chars.\n  if (stream.match(/^(?:u8|u|U|L)/)) {\n    if (stream.match(/^[\"']/, /* eat */ false)) {\n      return \"string\";\n    }\n    return false;\n  }\n  // Ignore this hook.\n  stream.next();\n  return false;\n}\n\nfunction cppLooksLikeConstructor(word) {\n  var lastTwo = /(\\w+)::~?(\\w+)$/.exec(word);\n  return lastTwo && lastTwo[1] == lastTwo[2];\n}\n\n// C#-style strings where \"\" escapes a quote.\nfunction tokenAtString(stream, state) {\n  var next;\n  while ((next = stream.next()) != null) {\n    if (next == '\"' && !stream.eat('\"')) {\n      state.tokenize = null;\n      break;\n    }\n  }\n  return \"string\";\n}\n\n// C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n// <delim> can be a string up to 16 characters long.\nfunction tokenRawString(stream, state) {\n  // Escape characters that have special regex meanings.\n  var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n  var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n  if (match)\n    state.tokenize = null;\n  else\n    stream.skipToEnd();\n  return \"string\";\n}\n\nexport const c = clike({\n  name: \"c\",\n  keywords: words(cKeywords),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords),\n  defKeywords: words(cDefKeywords),\n  typeFirstDefinitions: true,\n  atoms: words(\"NULL true false\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n  }\n})\n\nexport const cpp = clike({\n  name: \"cpp\",\n  keywords: words(cKeywords + \" \" + cppKeywords),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords + \" class try catch\"),\n  defKeywords: words(cDefKeywords + \" class namespace\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false NULL nullptr\"),\n  dontIndentStatements: /^template$/,\n  isIdentifierChar: /[\\w\\$_~\\xa1-\\uffff]/,\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n    \"u\": cpp11StringHook,\n    \"U\": cpp11StringHook,\n    \"L\": cpp11StringHook,\n    \"R\": cpp11StringHook,\n    \"0\": cpp14Literal,\n    \"1\": cpp14Literal,\n    \"2\": cpp14Literal,\n    \"3\": cpp14Literal,\n    \"4\": cpp14Literal,\n    \"5\": cpp14Literal,\n    \"6\": cpp14Literal,\n    \"7\": cpp14Literal,\n    \"8\": cpp14Literal,\n    \"9\": cpp14Literal,\n    token: function(stream, state, style) {\n      if (style == \"variable\" && stream.peek() == \"(\" &&\n          (state.prevToken == \";\" || state.prevToken == null ||\n           state.prevToken == \"}\") &&\n          cppLooksLikeConstructor(stream.current()))\n        return \"def\";\n    }\n  },\n  namespaceSeparator: \"::\"\n});\n\nexport const java = clike({\n  name: \"java\",\n  keywords: words(\"abstract assert break case catch class const continue default \" +\n                  \"do else enum extends final finally for goto if implements import \" +\n                  \"instanceof interface native new package private protected public \" +\n                  \"return static strictfp super switch synchronized this throw throws transient \" +\n                  \"try volatile while @interface\"),\n  types: words(\"var byte short int long float double boolean char void Boolean Byte Character Double Float \" +\n               \"Integer Long Number Object Short String StringBuffer StringBuilder Void\"),\n  blockKeywords: words(\"catch class do else finally for if switch try while\"),\n  defKeywords: words(\"class interface enum @interface\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n  hooks: {\n    \"@\": function(stream) {\n      // Don't match the @interface keyword.\n      if (stream.match('interface', false)) return false;\n\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function(stream, state) {\n      if (!stream.match(/\"\"$/)) return false;\n      state.tokenize = tokenTripleString;\n      return state.tokenize(stream, state);\n    }\n  }\n})\n\nexport const csharp = clike({\n  name: \"csharp\",\n  keywords: words(\"abstract as async await base break case catch checked class const continue\" +\n                  \" default delegate do else enum event explicit extern finally fixed for\" +\n                  \" foreach goto if implicit in init interface internal is lock namespace new\" +\n                  \" operator out override params private protected public readonly record ref required return sealed\" +\n                  \" sizeof stackalloc static struct switch this throw try typeof unchecked\" +\n                  \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" +\n                  \" global group into join let orderby partial remove select set value var yield\"),\n  types: words(\"Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func\" +\n               \" Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32\" +\n               \" UInt64 bool byte char decimal double short int long object\"  +\n               \" sbyte float string ushort uint ulong\"),\n  blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n  defKeywords: words(\"class interface namespace record struct var\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  hooks: {\n    \"@\": function(stream, state) {\n      if (stream.eat('\"')) {\n        state.tokenize = tokenAtString;\n        return tokenAtString(stream, state);\n      }\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    }\n  }\n});\n\nfunction tokenTripleString(stream, state) {\n  var escaped = false;\n  while (!stream.eol()) {\n    if (!escaped && stream.match('\"\"\"')) {\n      state.tokenize = null;\n      break;\n    }\n    escaped = stream.next() == \"\\\\\" && !escaped;\n  }\n  return \"string\";\n}\n\nfunction tokenNestedComment(depth) {\n  return function (stream, state) {\n    var ch\n    while (ch = stream.next()) {\n      if (ch == \"*\" && stream.eat(\"/\")) {\n        if (depth == 1) {\n          state.tokenize = null\n          break\n        } else {\n          state.tokenize = tokenNestedComment(depth - 1)\n          return state.tokenize(stream, state)\n        }\n      } else if (ch == \"/\" && stream.eat(\"*\")) {\n        state.tokenize = tokenNestedComment(depth + 1)\n        return state.tokenize(stream, state)\n      }\n    }\n    return \"comment\"\n  }\n}\n\nexport const scala = clike({\n  name: \"scala\",\n  keywords: words(\n    /* scala */\n    \"abstract case catch class def do else extends final finally for forSome if \" +\n      \"implicit import lazy match new null object override package private protected return \" +\n      \"sealed super this throw trait try type val var while with yield _ \" +\n\n    /* package scala */\n    \"assert assume require print println printf readLine readBoolean readByte readShort \" +\n      \"readChar readInt readLong readFloat readDouble\"\n  ),\n  types: words(\n    \"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" +\n      \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable \" +\n      \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" +\n      \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" +\n      \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector \" +\n\n    /* package java.lang */\n    \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n  ),\n  multiLineStrings: true,\n  blockKeywords: words(\"catch class enum do else finally for forSome if match switch try while\"),\n  defKeywords: words(\"class enum def object package trait type val var\"),\n  atoms: words(\"true false null\"),\n  indentStatements: false,\n  indentSwitch: false,\n  isOperatorChar: /[+\\-*&%=<>!?|\\/#:@]/,\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function(stream, state) {\n      if (!stream.match('\"\"')) return false;\n      state.tokenize = tokenTripleString;\n      return state.tokenize(stream, state);\n    },\n    \"'\": function(stream) {\n      if (stream.match(/^(\\\\[^'\\s]+|[^\\\\'])'/)) return \"character\"\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      return \"atom\";\n    },\n    \"=\": function(stream, state) {\n      var cx = state.context\n      if (cx.type == \"}\" && cx.align && stream.eat(\">\")) {\n        state.context = new Context(cx.indented, cx.column, cx.type, cx.info, null, cx.prev)\n        return \"operator\"\n      } else {\n        return false\n      }\n    },\n\n    \"/\": function(stream, state) {\n      if (!stream.eat(\"*\")) return false\n      state.tokenize = tokenNestedComment(1)\n      return state.tokenize(stream, state)\n    }\n  },\n  languageData: {\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']}\n  }\n});\n\nfunction tokenKotlinString(tripleString){\n  return function (stream, state) {\n    var escaped = false, next, end = false;\n    while (!stream.eol()) {\n      if (!tripleString && !escaped && stream.match('\"') ) {end = true; break;}\n      if (tripleString && stream.match('\"\"\"')) {end = true; break;}\n      next = stream.next();\n      if(!escaped && next == \"$\" && stream.match('{'))\n        stream.skipTo(\"}\");\n      escaped = !escaped && next == \"\\\\\" && !tripleString;\n    }\n    if (end || !tripleString)\n      state.tokenize = null;\n    return \"string\";\n  }\n}\n\nexport const kotlin = clike({\n  name: \"kotlin\",\n  keywords: words(\n    /*keywords*/\n    \"package as typealias class interface this super val operator \" +\n      \"var fun for is in This throw return annotation \" +\n      \"break continue object if else while do try when !in !is as? \" +\n\n    /*soft keywords*/\n    \"file import where by get set abstract enum open inner override private public internal \" +\n      \"protected catch finally out final vararg reified dynamic companion constructor init \" +\n      \"sealed field property receiver param sparam lateinit data inline noinline tailrec \" +\n      \"external annotation crossinline const operator infix suspend actual expect setparam\"\n  ),\n  types: words(\n    /* package java.lang */\n    \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void Annotation Any BooleanArray \" +\n      \"ByteArray Char CharArray DeprecationLevel DoubleArray Enum FloatArray Function Int IntArray Lazy \" +\n      \"LazyThreadSafetyMode LongArray Nothing ShortArray Unit\"\n  ),\n  intendSwitch: false,\n  indentStatements: false,\n  multiLineStrings: true,\n  number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+(\\.\\d+)?|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n  blockKeywords: words(\"catch class do else finally for if where try while enum\"),\n  defKeywords: words(\"class val var object interface fun\"),\n  atoms: words(\"true false null this\"),\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '*': function(_stream, state) {\n      return state.prevToken == '.' ? 'variable' : 'operator';\n    },\n    '\"': function(stream, state) {\n      state.tokenize = tokenKotlinString(stream.match('\"\"'));\n      return state.tokenize(stream, state);\n    },\n    \"/\": function(stream, state) {\n      if (!stream.eat(\"*\")) return false;\n      state.tokenize = tokenNestedComment(1);\n      return state.tokenize(stream, state)\n    },\n    indent: function(state, ctx, textAfter, indentUnit) {\n      var firstChar = textAfter && textAfter.charAt(0);\n      if ((state.prevToken == \"}\" || state.prevToken == \")\") && textAfter == \"\")\n        return state.indented;\n      if ((state.prevToken == \"operator\" && textAfter != \"}\" && state.context.type != \"}\") ||\n          state.prevToken == \"variable\" && firstChar == \".\" ||\n          (state.prevToken == \"}\" || state.prevToken == \")\") && firstChar == \".\")\n        return indentUnit * 2 + ctx.indented;\n      if (ctx.align && ctx.type == \"}\")\n        return ctx.indented + (state.context.type == (textAfter || \"\").charAt(0) ? 0 : indentUnit);\n    }\n  },\n  languageData: {\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']}\n  }\n});\n\nexport const shader = clike({\n  name: \"shader\",\n  keywords: words(\"sampler1D sampler2D sampler3D samplerCube \" +\n                  \"sampler1DShadow sampler2DShadow \" +\n                  \"const attribute uniform varying \" +\n                  \"break continue discard return \" +\n                  \"for while do if else struct \" +\n                  \"in out inout\"),\n  types: words(\"float int bool void \" +\n               \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" +\n               \"mat2 mat3 mat4\"),\n  blockKeywords: words(\"for while do if else struct\"),\n  builtin: words(\"radians degrees sin cos tan asin acos atan \" +\n                 \"pow exp log exp2 sqrt inversesqrt \" +\n                 \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" +\n                 \"length distance dot cross normalize ftransform faceforward \" +\n                 \"reflect refract matrixCompMult \" +\n                 \"lessThan lessThanEqual greaterThan greaterThanEqual \" +\n                 \"equal notEqual any all not \" +\n                 \"texture1D texture1DProj texture1DLod texture1DProjLod \" +\n                 \"texture2D texture2DProj texture2DLod texture2DProjLod \" +\n                 \"texture3D texture3DProj texture3DLod texture3DProjLod \" +\n                 \"textureCube textureCubeLod \" +\n                 \"shadow1D shadow2D shadow1DProj shadow2DProj \" +\n                 \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" +\n                 \"dFdx dFdy fwidth \" +\n                 \"noise1 noise2 noise3 noise4\"),\n  atoms: words(\"true false \" +\n               \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" +\n               \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" +\n               \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" +\n               \"gl_FogCoord gl_PointCoord \" +\n               \"gl_Position gl_PointSize gl_ClipVertex \" +\n               \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" +\n               \"gl_TexCoord gl_FogFragCoord \" +\n               \"gl_FragCoord gl_FrontFacing \" +\n               \"gl_FragData gl_FragDepth \" +\n               \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" +\n               \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" +\n               \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" +\n               \"gl_TextureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" +\n               \"gl_ProjectionMatrixInverseTranspose \" +\n               \"gl_ModelViewProjectionMatrixInverseTranspose \" +\n               \"gl_TextureMatrixInverseTranspose \" +\n               \"gl_NormalScale gl_DepthRange gl_ClipPlane \" +\n               \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" +\n               \"gl_FrontLightModelProduct gl_BackLightModelProduct \" +\n               \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" +\n               \"gl_FogParameters \" +\n               \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" +\n               \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" +\n               \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" +\n               \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" +\n               \"gl_MaxDrawBuffers\"),\n  indentSwitch: false,\n  hooks: {\"#\": cppHook}\n})\n\nexport const nesC = clike({\n  name: \"nesc\",\n  keywords: words(cKeywords + \" as atomic async call command component components configuration event generic \" +\n                  \"implementation includes interface module new norace nx_struct nx_union post provides \" +\n                  \"signal task uses abstract extends\"),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords),\n  atoms: words(\"null true false\"),\n  hooks: {\"#\": cppHook}\n})\n\nexport const objectiveC = clike({\n  name: \"objectivec\",\n  keywords: words(cKeywords + \" \" + objCKeywords),\n  types: objCTypes,\n  builtin: words(objCBuiltins),\n  blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized\"),\n  defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class\"),\n  dontIndentStatements: /^@.*$/,\n  typeFirstDefinitions: true,\n  atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n  }\n})\n\nexport const objectiveCpp = clike({\n  name: \"objectivecpp\",\n  keywords: words(cKeywords + \" \" + objCKeywords + \" \" + cppKeywords),\n  types: objCTypes,\n  builtin: words(objCBuiltins),\n  blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized class try catch\"),\n  defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class class namespace\"),\n  dontIndentStatements: /^@.*$|^template$/,\n  typeFirstDefinitions: true,\n  atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n    \"u\": cpp11StringHook,\n    \"U\": cpp11StringHook,\n    \"L\": cpp11StringHook,\n    \"R\": cpp11StringHook,\n    \"0\": cpp14Literal,\n    \"1\": cpp14Literal,\n    \"2\": cpp14Literal,\n    \"3\": cpp14Literal,\n    \"4\": cpp14Literal,\n    \"5\": cpp14Literal,\n    \"6\": cpp14Literal,\n    \"7\": cpp14Literal,\n    \"8\": cpp14Literal,\n    \"9\": cpp14Literal,\n    token: function(stream, state, style) {\n      if (style == \"variable\" && stream.peek() == \"(\" &&\n          (state.prevToken == \";\" || state.prevToken == null ||\n           state.prevToken == \"}\") &&\n          cppLooksLikeConstructor(stream.current()))\n        return \"def\";\n    }\n  },\n  namespaceSeparator: \"::\"\n})\n\nexport const squirrel = clike({\n  name: \"squirrel\",\n  keywords: words(\"base break clone continue const default delete enum extends function in class\" +\n                  \" foreach local resume return this throw typeof yield constructor instanceof static\"),\n  types: cTypes,\n  blockKeywords: words(\"case catch class else for foreach if switch try while\"),\n  defKeywords: words(\"function local class\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  hooks: {\"#\": cppHook}\n})\n\n// Ceylon Strings need to deal with interpolation\nvar stringTokenizer = null;\nfunction tokenCeylonString(type) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"') &&\n          (type == \"single\" || stream.match('\"\"'))) {\n        end = true;\n        break;\n      }\n      if (!escaped && stream.match('``')) {\n        stringTokenizer = tokenCeylonString(type);\n        end = true;\n        break;\n      }\n      next = stream.next();\n      escaped = type == \"single\" && !escaped && next == \"\\\\\";\n    }\n    if (end)\n      state.tokenize = null;\n    return \"string\";\n  }\n}\n\nexport const ceylon = clike({\n  name: \"ceylon\",\n  keywords: words(\"abstracts alias assembly assert assign break case catch class continue dynamic else\" +\n                  \" exists extends finally for function given if import in interface is let module new\" +\n                  \" nonempty object of out outer package return satisfies super switch then this throw\" +\n                  \" try value void while\"),\n  types: function(word) {\n    // In Ceylon all identifiers that start with an uppercase are types\n    var first = word.charAt(0);\n    return (first === first.toUpperCase() && first !== first.toLowerCase());\n  },\n  blockKeywords: words(\"case catch class dynamic else finally for function if interface module new object switch try while\"),\n  defKeywords: words(\"class dynamic function interface module object package value\"),\n  builtin: words(\"abstract actual aliased annotation by default deprecated doc final formal late license\" +\n                 \" native optional sealed see serializable shared suppressWarnings tagged throws variable\"),\n  isPunctuationChar: /[\\[\\]{}\\(\\),;\\:\\.`]/,\n  isOperatorChar: /[+\\-*&%=<>!?|^~:\\/]/,\n  numberStart: /[\\d#$]/,\n  number: /^(?:#[\\da-fA-F_]+|\\$[01_]+|[\\d_]+[kMGTPmunpf]?|[\\d_]+\\.[\\d_]+(?:[eE][-+]?\\d+|[kMGTPmunpf]|)|)/i,\n  multiLineStrings: true,\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null larger smaller equal empty finished\"),\n  indentSwitch: false,\n  styleDefs: false,\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function(stream, state) {\n      state.tokenize = tokenCeylonString(stream.match('\"\"') ? \"triple\" : \"single\");\n      return state.tokenize(stream, state);\n    },\n    '`': function(stream, state) {\n      if (!stringTokenizer || !stream.match('`')) return false;\n      state.tokenize = stringTokenizer;\n      stringTokenizer = null;\n      return state.tokenize(stream, state);\n    },\n    \"'\": function(stream) {\n      if (stream.match(/^(\\\\[^'\\s]+|[^\\\\'])'/)) return \"string.special\"\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      return \"atom\";\n    },\n    token: function(_stream, state, style) {\n      if ((style == \"variable\" || style == \"type\") &&\n          state.prevToken == \".\") {\n        return \"variableName.special\";\n      }\n    }\n  },\n  languageData: {\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']}\n  }\n})\n\nfunction pushInterpolationStack(state) {\n  (state.interpolationStack || (state.interpolationStack = [])).push(state.tokenize);\n}\n\nfunction popInterpolationStack(state) {\n  return (state.interpolationStack || (state.interpolationStack = [])).pop();\n}\n\nfunction sizeInterpolationStack(state) {\n  return state.interpolationStack ? state.interpolationStack.length : 0;\n}\n\nfunction tokenDartString(quote, stream, state, raw) {\n  var tripleQuoted = false;\n  if (stream.eat(quote)) {\n    if (stream.eat(quote)) tripleQuoted = true;\n    else return \"string\"; //empty string\n  }\n  function tokenStringHelper(stream, state) {\n    var escaped = false;\n    while (!stream.eol()) {\n      if (!raw && !escaped && stream.peek() == \"$\") {\n        pushInterpolationStack(state);\n        state.tokenize = tokenInterpolation;\n        return \"string\";\n      }\n      var next = stream.next();\n      if (next == quote && !escaped && (!tripleQuoted || stream.match(quote + quote))) {\n        state.tokenize = null;\n        break;\n      }\n      escaped = !raw && !escaped && next == \"\\\\\";\n    }\n    return \"string\";\n  }\n  state.tokenize = tokenStringHelper;\n  return tokenStringHelper(stream, state);\n}\n\nfunction tokenInterpolation(stream, state) {\n  stream.eat(\"$\");\n  if (stream.eat(\"{\")) {\n    // let clike handle the content of ${...},\n    // we take over again when \"}\" appears (see hooks).\n    state.tokenize = null;\n  } else {\n    state.tokenize = tokenInterpolationIdentifier;\n  }\n  return null;\n}\n\nfunction tokenInterpolationIdentifier(stream, state) {\n  stream.eatWhile(/[\\w_]/);\n  state.tokenize = popInterpolationStack(state);\n  return \"variable\";\n}\n\nexport const dart = clike({\n  name: \"dart\",\n  keywords: words(\"this super static final const abstract class extends external factory \" +\n                  \"implements mixin get native set typedef with enum throw rethrow assert break case \" +\n                  \"continue default in return new deferred async await covariant try catch finally \" +\n                  \"do else for if switch while import library export part of show hide is as extension \" +\n                  \"on yield late required sealed base interface when inline\"),\n  blockKeywords: words(\"try catch finally do else for if switch while\"),\n  builtin: words(\"void bool num int double dynamic var String Null Never\"),\n  atoms: words(\"true false null\"),\n  // clike numbers without the suffixes, and with '_' separators.\n  number: /^(?:0x[a-f\\d_]+|(?:[\\d_]+\\.?[\\d_]*|\\.[\\d_]+)(?:e[-+]?[\\d_]+)?)/i,\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_\\.]/);\n      return \"meta\";\n    },\n\n    // custom string handling to deal with triple-quoted strings and string interpolation\n    \"'\": function(stream, state) {\n      return tokenDartString(\"'\", stream, state, false);\n    },\n    \"\\\"\": function(stream, state) {\n      return tokenDartString(\"\\\"\", stream, state, false);\n    },\n    \"r\": function(stream, state) {\n      var peek = stream.peek();\n      if (peek == \"'\" || peek == \"\\\"\") {\n        return tokenDartString(stream.next(), stream, state, true);\n      }\n      return false;\n    },\n\n    \"}\": function(_stream, state) {\n      // \"}\" is end of interpolation, if interpolation stack is non-empty\n      if (sizeInterpolationStack(state) > 0) {\n        state.tokenize = popInterpolationStack(state);\n        return null;\n      }\n      return false;\n    },\n\n    \"/\": function(stream, state) {\n      if (!stream.eat(\"*\")) return false\n      state.tokenize = tokenNestedComment(1)\n      return state.tokenize(stream, state)\n    },\n    token: function(stream, _, style) {\n      if (style == \"variable\") {\n        // Assume uppercase symbols are classes\n        var isUpper = RegExp('^[_$]*[A-Z][a-zA-Z0-9_$]*$','g');\n        if (isUpper.test(stream.current())) {\n          return 'type';\n        }\n      }\n    }\n  }\n})\n"],"names":["Context","indented","column","type","info","align","prev","this","pushContext","state","col","indent","context","popContext","t","typeBefore","stream","pos","prevToken","test","string","slice","typeAtEndOfLine","indentation","isTopScope","clike","parserConfig","statementIndentUnit","dontAlignCalls","keywords","types","builtin","blockKeywords","defKeywords","atoms","hooks","multiLineStrings","indentStatements","indentSwitch","namespaceSeparator","isPunctuationChar","numberStart","number","isOperatorChar","isIdentifierChar","isReservedIdentifier","curPunc","isDefKeyword","tokenBase","ch","next","result","tokenize","tokenString","backUp","match","eat","tokenComment","skipToEnd","eatWhile","cur","current","contains","quote","escaped","end","maybeEnd","maybeEOL","typeFirstDefinitions","eol","name","startState","indentUnit","startOfLine","token","ctx","sol","eatSpace","style","start","undefined","styleDefs","textAfter","firstChar","charAt","closing","dontIndentStatements","hook","unit","switchBlock","allmanIndentation","languageData","indentOnInput","commentTokens","line","block","open","close","autocomplete","Object","keys","concat","words","str","obj","split","i","length","word","propertyIsEnumerable","cKeywords","cppKeywords","objCKeywords","objCBuiltins","basicCTypes","basicObjCTypes","cTypes","identifier","objCTypes","cBlockKeywords","cDefKeywords","cppHook","peek","pointerHook","_stream","cIsReservedIdentifier","toLowerCase","cpp14Literal","cpp11StringHook","cpp11RawStringDelim","tokenRawString","cppLooksLikeConstructor","lastTwo","exec","tokenAtString","delim","replace","RegExp","c","cpp","java","tokenTripleString","csharp","tokenNestedComment","depth","scala","cx","closeBrackets","brackets","tokenKotlinString","tripleString","skipTo","kotlin","intendSwitch","shader","nesC","objectiveC","objectiveCpp","squirrel","stringTokenizer","tokenCeylonString","ceylon","first","toUpperCase","pushInterpolationStack","interpolationStack","push","popInterpolationStack","pop","sizeInterpolationStack","tokenDartString","raw","tripleQuoted","tokenStringHelper","tokenInterpolation","tokenInterpolationIdentifier","dart","_","isUpper"],"sourceRoot":""}