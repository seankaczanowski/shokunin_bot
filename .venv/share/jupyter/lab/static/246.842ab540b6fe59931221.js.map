{"version":3,"file":"246.842ab540b6fe59931221.js?v=842ab540b6fe59931221","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/@codemirror/legacy-modes/mode/dtd.js"],"sourcesContent":["var type;\nfunction ret(style, tp) {type = tp; return style;}\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (ch == \"<\" && stream.eat(\"!\") ) {\n    if (stream.eatWhile(/[\\-]/)) {\n      state.tokenize = tokenSGMLComment;\n      return tokenSGMLComment(stream, state);\n    } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\n  } else if (ch == \"<\" && stream.eat(\"?\")) { //xml declaration\n    state.tokenize = inBlock(\"meta\", \"?>\");\n    return ret(\"meta\", ch);\n  } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");\n  else if (ch == \"|\") return ret(\"keyword\", \"separator\");\n  else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch);//if(ch === \">\") return ret(null, \"endtag\"); else\n  else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);\n  else if (ch == \"\\\"\" || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\n    var sc = stream.current();\n    if( sc.substr(sc.length-1,sc.length).match(/\\?|\\+/) !== null )stream.backUp(1);\n    return ret(\"tag\", \"tag\");\n  } else if (ch == \"%\" || ch == \"*\" ) return ret(\"number\", \"number\");\n  else {\n    stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\n    return ret(null, null);\n  }\n}\n\nfunction tokenSGMLComment(stream, state) {\n  var dashes = 0, ch;\n  while ((ch = stream.next()) != null) {\n    if (dashes >= 2 && ch == \">\") {\n      state.tokenize = tokenBase;\n      break;\n    }\n    dashes = (ch == \"-\") ? dashes + 1 : 0;\n  }\n  return ret(\"comment\", \"comment\");\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    return ret(\"string\", \"tag\");\n  };\n}\n\nfunction inBlock(style, terminator) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      if (stream.match(terminator)) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      stream.next();\n    }\n    return style;\n  };\n}\n\nexport const dtd = {\n  name: \"dtd\",\n  startState: function() {\n    return {tokenize: tokenBase,\n            baseIndent: 0,\n            stack: []};\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n\n    var context = state.stack[state.stack.length-1];\n    if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");\n    else if (type === \"endtag\") state.stack[state.stack.length-1] = \"endtag\";\n    else if (stream.current() == \"]\" || type == \"]\" || (type == \">\" && context == \"rule\")) state.stack.pop();\n    else if (type == \"[\") state.stack.push(\"[\");\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var n = state.stack.length;\n\n    if( textAfter.charAt(0) === ']' )n--;\n    else if(textAfter.substr(textAfter.length-1, textAfter.length) === \">\"){\n      if(textAfter.substr(0,1) === \"<\") {}\n      else if( type == \"doindent\" && textAfter.length > 1 ) {}\n      else if( type == \"doindent\")n--;\n      else if( type == \">\" && textAfter.length > 1) {}\n      else if( type == \"tag\" && textAfter !== \">\") {}\n      else if( type == \"tag\" && state.stack[state.stack.length-1] == \"rule\")n--;\n      else if( type == \"tag\")n++;\n      else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\" && type === \">\")n--;\n      else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\") {}\n      else if( textAfter.substr(0,1) !== \"<\" && textAfter.substr(0,1) === \">\" )n=n-1;\n      else if( textAfter === \">\") {}\n      else n=n-1;\n      //over rule them all\n      if(type == null || type == \"]\")n--;\n    }\n\n    return state.baseIndent + n * cx.unit;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[\\]>]$/\n  }\n};\n\n"],"names":["type","ret","style","tp","tokenBase","stream","state","ch","next","eat","eatWhile","tokenize","tokenSGMLComment","inBlock","match","tokenString","sc","current","substr","length","backUp","dashes","quote","escaped","terminator","eol","dtd","name","startState","baseIndent","stack","token","eatSpace","context","push","pop","indent","textAfter","cx","n","charAt","unit","languageData","indentOnInput"],"sourceRoot":""}