import { EditorView, PluginValue, ViewPlugin, ViewUpdate } from '@codemirror/view';
import { Facet } from '@codemirror/state';
import type { UndoManager } from 'yjs';
interface IStackItem {
    meta: Map<any, any>;
}
export declare class YUndoManagerConfig {
    constructor(undoManager: UndoManager);
    undoManager: UndoManager;
}
export declare const yUndoManagerFacet: Facet<YUndoManagerConfig, YUndoManagerConfig>;
declare class YUndoManagerPluginValue implements PluginValue {
    constructor(view: EditorView);
    _onStackItemAdded: ({ stackItem, changedParentTypes }: {
        stackItem: IStackItem;
        changedParentTypes: Map<any, any>;
    }) => void;
    _onStackItemPopped: ({ stackItem }: {
        stackItem: IStackItem;
    }) => void;
    _storeSelection: () => void;
    update(update: ViewUpdate): void;
    destroy(): void;
    private _undoManager;
    private _view;
    private _beforeChangeSelection;
    private _conf;
    private _syncConf;
}
export declare const yUndoManager: ViewPlugin<YUndoManagerPluginValue>;
export {};
