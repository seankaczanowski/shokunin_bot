import { ServerConnection } from '@jupyterlab/services';
import { ITranslator, ITranslatorConnector, TranslationBundle } from './tokens';
/**
 * Translation Manager.
 */
export declare class TranslationManager implements ITranslator {
    /**
     * Construct a new TranslationManager.
     *
     * @param translationsUrl The URL of the translation server.
     * @param stringsPrefix (optional) The prefix for translation strings.
     * @param serverSettings (optional) The server settings.
     * @param connector (optional) The translation connector. If provided, the `translationsUrl` and `serverSettings` parameters will be ignored.
     */
    constructor(translationsUrl?: string, stringsPrefix?: string, serverSettings?: ServerConnection.ISettings, connector?: ITranslatorConnector);
    /**
     * Get the language code (tag) of the current locale.
     *
     * It respects BCP47 (RFC5646): https://datatracker.ietf.org/doc/html/rfc5646
     */
    get languageCode(): string;
    /**
     * Fetch the localization data from the server.
     *
     * @param locale The language locale to use for translations.
     */
    fetch(locale: string): Promise<void>;
    /**
     * Load translation bundles for a given domain.
     *
     * @param domain The translation domain to use for translations.
     */
    load(domain: string): TranslationBundle;
    private _connector;
    private _currentLocale;
    private _domainData;
    private _englishBundle;
    private _languageData;
    private _stringsPrefix;
    private _translationBundles;
}
