"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTarballDetails = getTarballDetails;
var _gunzipMaybe = _interopRequireDefault(require("gunzip-maybe"));
var _stream = require("stream");
var tarStream = _interopRequireWildcard(require("tar-stream"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
async function getTarballDetails(buffer) {
  let fileCount = 0;
  let unpackedSize = 0;
  const readable = _stream.Readable.from(buffer);
  const unpack = tarStream.extract();
  return new Promise((resolve, reject) => {
    readable.pipe((0, _gunzipMaybe.default)()).pipe(unpack).on('entry', (header, stream, next) => {
      fileCount++;
      unpackedSize += Number(header.size);
      stream.resume(); // important to ensure that "entry" events keep firing
      next();
    }).on('finish', () => {
      resolve({
        fileCount,
        unpackedSize
      });
    }).on('error', reject);
  });
}
//# sourceMappingURL=getTarballDetails.js.map