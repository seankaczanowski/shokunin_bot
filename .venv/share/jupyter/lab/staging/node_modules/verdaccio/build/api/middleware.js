"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.serveFavicon = serveFavicon;
var _debug = _interopRequireDefault(require("debug"));
var _fs = _interopRequireDefault(require("fs"));
var _lodash = _interopRequireDefault(require("lodash"));
var _path = _interopRequireDefault(require("path"));
var _validator = _interopRequireDefault(require("validator"));
var _constants = require("../lib/constants");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const debug = (0, _debug.default)('verdaccio:middleware:favicon');
function serveFavicon(config) {
  return function (req, res, next) {
    try {
      var _config$web;
      // @ts-ignore
      const logoConf = config === null || config === void 0 ? void 0 : (_config$web = config.web) === null || _config$web === void 0 ? void 0 : _config$web.favicon;
      if (logoConf === '') {
        debug('favicon disabled');
        res.status(404);
      } else if (!_lodash.default.isEmpty(logoConf)) {
        debug('custom favicon');
        if (_validator.default.isURL(logoConf, {
          require_host: true,
          require_valid_protocol: true
        })) {
          debug('redirect to %o', logoConf);
          res.redirect(logoConf);
          return;
        } else {
          const faviconPath = _path.default.normalize(logoConf);
          debug('serving favicon from %o', faviconPath);
          _fs.default.access(faviconPath, _fs.default.constants.R_OK, err => {
            if (err) {
              debug('no read permissions to read: %o, reason:', logoConf, err === null || err === void 0 ? void 0 : err.message);
              return res.status(_constants.HTTP_STATUS.NOT_FOUND).end();
            } else {
              res.setHeader('content-type', 'image/x-icon');
              _fs.default.createReadStream(faviconPath).pipe(res);
              debug('rendered custom ico');
            }
          });
        }
      } else {
        res.setHeader('content-type', 'image/x-icon');
        _fs.default.createReadStream(_path.default.posix.join(__dirname, './web/html/favicon.ico')).pipe(res);
        debug('rendered ico');
      }
    } catch (err) {
      debug('error triggered, favicon not found');
      res.status(_constants.HTTP_STATUS.NOT_FOUND).end();
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVidWciLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9mcyIsIl9sb2Rhc2giLCJfcGF0aCIsIl92YWxpZGF0b3IiLCJfY29uc3RhbnRzIiwiZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZGVidWciLCJidWlsZERlYnVnIiwic2VydmVGYXZpY29uIiwiY29uZmlnIiwicmVxIiwicmVzIiwibmV4dCIsIl9jb25maWckd2ViIiwibG9nb0NvbmYiLCJ3ZWIiLCJmYXZpY29uIiwic3RhdHVzIiwiXyIsImlzRW1wdHkiLCJ2YWxpZGF0b3IiLCJpc1VSTCIsInJlcXVpcmVfaG9zdCIsInJlcXVpcmVfdmFsaWRfcHJvdG9jb2wiLCJyZWRpcmVjdCIsImZhdmljb25QYXRoIiwicGF0aCIsIm5vcm1hbGl6ZSIsImZzIiwiYWNjZXNzIiwiY29uc3RhbnRzIiwiUl9PSyIsImVyciIsIm1lc3NhZ2UiLCJIVFRQX1NUQVRVUyIsIk5PVF9GT1VORCIsImVuZCIsInNldEhlYWRlciIsImNyZWF0ZVJlYWRTdHJlYW0iLCJwaXBlIiwicG9zaXgiLCJqb2luIiwiX19kaXJuYW1lIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2FwaS9taWRkbGV3YXJlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBidWlsZERlYnVnIGZyb20gJ2RlYnVnJztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgdmFsaWRhdG9yIGZyb20gJ3ZhbGlkYXRvcic7XG5cbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJ0B2ZXJkYWNjaW8vdHlwZXMnO1xuXG5pbXBvcnQgeyBIVFRQX1NUQVRVUyB9IGZyb20gJy4uL2xpYi9jb25zdGFudHMnO1xuaW1wb3J0IHsgJE5leHRGdW5jdGlvblZlciwgJFJlcXVlc3RFeHRlbmQsICRSZXNwb25zZUV4dGVuZCB9IGZyb20gJy4uL3R5cGVzJztcblxuY29uc3QgZGVidWcgPSBidWlsZERlYnVnKCd2ZXJkYWNjaW86bWlkZGxld2FyZTpmYXZpY29uJyk7XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXJ2ZUZhdmljb24oY29uZmlnOiBDb25maWcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChyZXE6ICRSZXF1ZXN0RXh0ZW5kLCByZXM6ICRSZXNwb25zZUV4dGVuZCwgbmV4dDogJE5leHRGdW5jdGlvblZlcikge1xuICAgIHRyeSB7XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBjb25zdCBsb2dvQ29uZjogc3RyaW5nID0gY29uZmlnPy53ZWI/LmZhdmljb24gYXMgc3RyaW5nO1xuICAgICAgaWYgKGxvZ29Db25mID09PSAnJykge1xuICAgICAgICBkZWJ1ZygnZmF2aWNvbiBkaXNhYmxlZCcpO1xuICAgICAgICByZXMuc3RhdHVzKDQwNCk7XG4gICAgICB9IGVsc2UgaWYgKCFfLmlzRW1wdHkobG9nb0NvbmYpKSB7XG4gICAgICAgIGRlYnVnKCdjdXN0b20gZmF2aWNvbicpO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgdmFsaWRhdG9yLmlzVVJMKGxvZ29Db25mLCB7XG4gICAgICAgICAgICByZXF1aXJlX2hvc3Q6IHRydWUsXG4gICAgICAgICAgICByZXF1aXJlX3ZhbGlkX3Byb3RvY29sOiB0cnVlLFxuICAgICAgICAgIH0pXG4gICAgICAgICkge1xuICAgICAgICAgIGRlYnVnKCdyZWRpcmVjdCB0byAlbycsIGxvZ29Db25mKTtcbiAgICAgICAgICByZXMucmVkaXJlY3QobG9nb0NvbmYpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zdCBmYXZpY29uUGF0aCA9IHBhdGgubm9ybWFsaXplKGxvZ29Db25mKTtcbiAgICAgICAgICBkZWJ1Zygnc2VydmluZyBmYXZpY29uIGZyb20gJW8nLCBmYXZpY29uUGF0aCk7XG4gICAgICAgICAgZnMuYWNjZXNzKGZhdmljb25QYXRoLCBmcy5jb25zdGFudHMuUl9PSywgKGVycikgPT4ge1xuICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICBkZWJ1Zygnbm8gcmVhZCBwZXJtaXNzaW9ucyB0byByZWFkOiAlbywgcmVhc29uOicsIGxvZ29Db25mLCBlcnI/Lm1lc3NhZ2UpO1xuICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyhIVFRQX1NUQVRVUy5OT1RfRk9VTkQpLmVuZCgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmVzLnNldEhlYWRlcignY29udGVudC10eXBlJywgJ2ltYWdlL3gtaWNvbicpO1xuICAgICAgICAgICAgICBmcy5jcmVhdGVSZWFkU3RyZWFtKGZhdmljb25QYXRoKS5waXBlKHJlcyk7XG4gICAgICAgICAgICAgIGRlYnVnKCdyZW5kZXJlZCBjdXN0b20gaWNvJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcy5zZXRIZWFkZXIoJ2NvbnRlbnQtdHlwZScsICdpbWFnZS94LWljb24nKTtcbiAgICAgICAgZnMuY3JlYXRlUmVhZFN0cmVhbShwYXRoLnBvc2l4LmpvaW4oX19kaXJuYW1lLCAnLi93ZWIvaHRtbC9mYXZpY29uLmljbycpKS5waXBlKHJlcyk7XG4gICAgICAgIGRlYnVnKCdyZW5kZXJlZCBpY28nKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGRlYnVnKCdlcnJvciB0cmlnZ2VyZWQsIGZhdmljb24gbm90IGZvdW5kJyk7XG4gICAgICByZXMuc3RhdHVzKEhUVFBfU1RBVFVTLk5PVF9GT1VORCkuZW5kKCk7XG4gICAgfVxuICB9O1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxHQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxPQUFBLEdBQUFILHNCQUFBLENBQUFD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