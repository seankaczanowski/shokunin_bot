"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InfoCommand = void 0;
var _clipanion = require("clipanion");
var _envinfo = _interopRequireDefault(require("envinfo"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
class InfoCommand extends _clipanion.Command {
  async execute() {
    this.context.stdout.write('\nEnvironment Info:');
    const data = await _envinfo.default.run({
      System: ['OS', 'CPU'],
      Binaries: ['node', 'yarn', 'npm', 'pnpm'],
      Virtualization: ['Docker'],
      Browsers: ['Chrome', 'Edge', 'Firefox', 'Safari'],
      npmGlobalPackages: ['verdaccio']
    });
    this.context.stdout.write(data);
    process.exit(0);
  }
}
exports.InfoCommand = InfoCommand;
_defineProperty(InfoCommand, "paths", [[`--info`], [`-i`]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY2xpcGFuaW9uIiwicmVxdWlyZSIsIl9lbnZpbmZvIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsImUiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9kZWZpbmVQcm9wZXJ0eSIsInIiLCJ0IiwiX3RvUHJvcGVydHlLZXkiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiaSIsIl90b1ByaW1pdGl2ZSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIk51bWJlciIsIkluZm9Db21tYW5kIiwiQ29tbWFuZCIsImV4ZWN1dGUiLCJjb250ZXh0Iiwic3Rkb3V0Iiwid3JpdGUiLCJkYXRhIiwiZW52aW5mbyIsInJ1biIsIlN5c3RlbSIsIkJpbmFyaWVzIiwiVmlydHVhbGl6YXRpb24iLCJCcm93c2VycyIsIm5wbUdsb2JhbFBhY2thZ2VzIiwicHJvY2VzcyIsImV4aXQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jbGkvY29tbWFuZHMvaW5mby50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tYW5kIH0gZnJvbSAnY2xpcGFuaW9uJztcbmltcG9ydCBlbnZpbmZvIGZyb20gJ2VudmluZm8nO1xuXG5leHBvcnQgY2xhc3MgSW5mb0NvbW1hbmQgZXh0ZW5kcyBDb21tYW5kIHtcbiAgc3RhdGljIHBhdGhzID0gW1tgLS1pbmZvYF0sIFtgLWlgXV07XG5cbiAgYXN5bmMgZXhlY3V0ZSgpIHtcbiAgICB0aGlzLmNvbnRleHQuc3Rkb3V0LndyaXRlKCdcXG5FbnZpcm9ubWVudCBJbmZvOicpO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBlbnZpbmZvLnJ1bih7XG4gICAgICBTeXN0ZW06IFsnT1MnLCAnQ1BVJ10sXG4gICAgICBCaW5hcmllczogWydub2RlJywgJ3lhcm4nLCAnbnBtJywgJ3BucG0nXSxcbiAgICAgIFZpcnR1YWxpemF0aW9uOiBbJ0RvY2tlciddLFxuICAgICAgQnJvd3NlcnM6IFsnQ2hyb21lJywgJ0VkZ2UnLCAnRmlyZWZveCcsICdTYWZhcmknXSxcbiAgICAgIG5wbUdsb2JhbFBhY2thZ2VzOiBbJ3ZlcmRhY2NpbyddLFxuICAgIH0pO1xuXG4gICAgdGhpcy5jb250ZXh0LnN0ZG91dC53cml0ZShkYXRhKTtcbiAgICBwcm9jZXNzLmV4aXQoMCk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsVUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsUUFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQThCLFNBQUFFLHVCQUFBQyxDQUFBLFdBQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBQyxVQUFBLEdBQUFELENBQUEsS0FBQUUsT0FBQSxFQUFBRixDQUFBO0FBQUEsU0FBQUcsZ0JBQUFILENBQUEsRUFBQUksQ0FBQSxFQUFBQyxDQUFBLFlBQUFELENBQUEsR0FBQUUsY0FBQSxDQUFBRixDQUFBLE1BQUFKLENBQUEsR0FBQU8sTUFBQSxDQUFBQyxjQUFBLENBQUFSLENBQUEsRUFBQUksQ0FBQSxJQUFBSyxLQUFBLEVBQUFKLENBQUEsRUFBQUssVUFBQSxNQUFBQyxZQUFBLE1BQUFDLFFBQUEsVUFBQVosQ0FBQSxDQUFBSSxDQUFBLElBQUFDLENBQUEsRUFBQUwsQ0FBQTtBQUFBLFNBQUFNLGVBQUFELENBQUEsUUFBQVEsQ0FBQSxHQUFBQyxZQUFBLENBQUFULENBQUEsdUNBQUFRLENBQUEsR0FBQUEsQ0FBQSxHQUFBQSxDQUFBO0FBQUEsU0FBQUMsYUFBQVQsQ0FBQSxFQUFBRCxDQUFBLDJCQUFBQyxDQUFBLEtBQUFBLENBQUEsU0FBQUEsQ0FBQSxNQUFBTCxDQUFBLEdBQUFLLENBQUEsQ0FBQVUsTUFBQSxDQUFBQyxXQUFBLGtCQUFBaEIsQ0FBQSxRQUFBYSxDQUFBLEdBQUFiLENBQUEsQ0FBQWlCLElBQUEsQ0FBQVosQ0FBQSxFQUFBRCxDQUFBLHVDQUFBUyxDQUFBLFNBQUFBLENBQUEsWUFBQUssU0FBQSx5RUFBQWQsQ0FBQSxHQUFBZSxNQUFBLEdBQUFDLE1BQUEsRUFBQWYsQ0FBQTtBQUV2QixNQUFNZ0IsV0FBVyxTQUFTQyxrQkFBTyxDQUFDO0VBR3ZDLE1BQU1DLE9BQU9BLENBQUEsRUFBRztJQUNkLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxNQUFNLENBQUNDLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQztJQUNoRCxNQUFNQyxJQUFJLEdBQUcsTUFBTUMsZ0JBQU8sQ0FBQ0MsR0FBRyxDQUFDO01BQzdCQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDO01BQ3JCQyxRQUFRLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUM7TUFDekNDLGNBQWMsRUFBRSxDQUFDLFFBQVEsQ0FBQztNQUMxQkMsUUFBUSxFQUFFLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsUUFBUSxDQUFDO01BQ2pEQyxpQkFBaUIsRUFBRSxDQUFDLFdBQVc7SUFDakMsQ0FBQyxDQUFDO0lBRUYsSUFBSSxDQUFDVixPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDQyxJQUFJLENBQUM7SUFDL0JRLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLENBQUMsQ0FBQztFQUNqQjtBQUNGO0FBQUNDLE9BQUEsQ0FBQWhCLFdBQUEsR0FBQUEsV0FBQTtBQUFBbEIsZUFBQSxDQWhCWWtCLFdBQVcsV0FDUCxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==