{"version":3,"file":"8418.214e352cb60fd30178d4.js?v=214e352cb60fd30178d4","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/@codemirror/legacy-modes/mode/go.js"],"sourcesContent":["var keywords = {\n  \"break\":true, \"case\":true, \"chan\":true, \"const\":true, \"continue\":true,\n  \"default\":true, \"defer\":true, \"else\":true, \"fallthrough\":true, \"for\":true,\n  \"func\":true, \"go\":true, \"goto\":true, \"if\":true, \"import\":true,\n  \"interface\":true, \"map\":true, \"package\":true, \"range\":true, \"return\":true,\n  \"select\":true, \"struct\":true, \"switch\":true, \"type\":true, \"var\":true,\n  \"bool\":true, \"byte\":true, \"complex64\":true, \"complex128\":true,\n  \"float32\":true, \"float64\":true, \"int8\":true, \"int16\":true, \"int32\":true,\n  \"int64\":true, \"string\":true, \"uint8\":true, \"uint16\":true, \"uint32\":true,\n  \"uint64\":true, \"int\":true, \"uint\":true, \"uintptr\":true, \"error\": true,\n  \"rune\":true, \"any\":true, \"comparable\":true\n};\n\nvar atoms = {\n  \"true\":true, \"false\":true, \"iota\":true, \"nil\":true, \"append\":true,\n  \"cap\":true, \"close\":true, \"complex\":true, \"copy\":true, \"delete\":true, \"imag\":true,\n  \"len\":true, \"make\":true, \"new\":true, \"panic\":true, \"print\":true,\n  \"println\":true, \"real\":true, \"recover\":true\n};\n\nvar isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\d\\.]/.test(ch)) {\n    if (ch == \".\") {\n      stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n    } else if (ch == \"0\") {\n      stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n    } else {\n      stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n    }\n    return \"number\";\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur)) {\n    if (cur == \"case\" || cur == \"default\") curPunc = \"case\";\n    return \"keyword\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && quote != \"`\" && next == \"\\\\\";\n    }\n    if (end || !(escaped || quote == \"`\"))\n      state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\nfunction popContext(state) {\n  if (!state.context.prev) return;\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\n\nexport const go = {\n  name: \"go\",\n  startState: function(indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n      if (ctx.type == \"case\") ctx.type = \"}\";\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"case\") ctx.type = \"case\";\n    else if (curPunc == \"}\" && ctx.type == \"}\") popContext(state);\n    else if (curPunc == ctx.type) popContext(state);\n    state.startOfLine = false;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return null;\n    var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n    if (ctx.type == \"case\" && /^(?:case|default)\\b/.test(textAfter)) return ctx.indented;\n    var closing = firstChar == ctx.type;\n    if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s([{}]|case |default\\s*:)$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n\n"],"names":["keywords","atoms","isOperatorChar","curPunc","tokenBase","stream","state","ch","next","tokenize","tokenString","test","match","eat","tokenComment","skipToEnd","eatWhile","cur","current","propertyIsEnumerable","quote","escaped","end","maybeEnd","Context","indented","column","type","align","prev","this","pushContext","col","context","popContext","t","go","name","startState","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","cx","firstChar","charAt","closing","unit","languageData","indentOnInput","commentTokens","line","block","open","close"],"sourceRoot":""}