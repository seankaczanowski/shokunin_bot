{"version":3,"file":"5877.9aab0c0fdfbddbd2f6ab.js?v=9aab0c0fdfbddbd2f6ab","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/@codemirror/legacy-modes/mode/mscgen.js"],"sourcesContent":["function mkParser(lang) {\n  return {\n    name: \"mscgen\",\n    startState: startStateFn,\n    copyState: copyStateFn,\n    token: produceTokenFunction(lang),\n    languageData: {\n      commentTokens: {line: \"#\", block: {open: \"/*\", close: \"*/\"}}\n    }\n  }\n}\n\nexport const mscgen = mkParser({\n  \"keywords\" : [\"msc\"],\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\"],\n  \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\"],\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"], // [ and  ] are brackets too, but these get handled in with lists\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nexport const msgenny = mkParser({\n  \"keywords\" : null,\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n  \"attributes\" : null,\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"],\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nexport const xu = mkParser({\n  \"keywords\" : [\"msc\", \"xu\"],\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n  \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\", \"title\", \"deactivate\", \"activate\", \"activation\"],\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"],  // [ and  ] are brackets too, but these get handled in with lists\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nfunction wordRegexpBoundary(pWords) {\n  return new RegExp(\"^\\\\b(\" + pWords.join(\"|\") + \")\\\\b\", \"i\");\n}\n\nfunction wordRegexp(pWords) {\n  return new RegExp(\"^(?:\" + pWords.join(\"|\") + \")\", \"i\");\n}\n\nfunction startStateFn() {\n  return {\n    inComment : false,\n    inString : false,\n    inAttributeList : false,\n    inScript : false\n  };\n}\n\nfunction copyStateFn(pState) {\n  return {\n    inComment : pState.inComment,\n    inString : pState.inString,\n    inAttributeList : pState.inAttributeList,\n    inScript : pState.inScript\n  };\n}\n\nfunction produceTokenFunction(pConfig) {\n  return function(pStream, pState) {\n    if (pStream.match(wordRegexp(pConfig.brackets), true, true)) {\n      return \"bracket\";\n    }\n    /* comments */\n    if (!pState.inComment) {\n      if (pStream.match(/\\/\\*[^\\*\\/]*/, true, true)) {\n        pState.inComment = true;\n        return \"comment\";\n      }\n      if (pStream.match(wordRegexp(pConfig.singlecomment), true, true)) {\n        pStream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (pState.inComment) {\n      if (pStream.match(/[^\\*\\/]*\\*\\//, true, true))\n        pState.inComment = false;\n      else\n        pStream.skipToEnd();\n      return \"comment\";\n    }\n    /* strings */\n    if (!pState.inString && pStream.match(/\\\"(\\\\\\\"|[^\\\"])*/, true, true)) {\n      pState.inString = true;\n      return \"string\";\n    }\n    if (pState.inString) {\n      if (pStream.match(/[^\\\"]*\\\"/, true, true))\n        pState.inString = false;\n      else\n        pStream.skipToEnd();\n      return \"string\";\n    }\n    /* keywords & operators */\n    if (!!pConfig.keywords && pStream.match(wordRegexpBoundary(pConfig.keywords), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexpBoundary(pConfig.options), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexpBoundary(pConfig.arcsWords), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexp(pConfig.arcsOthers), true, true))\n      return \"keyword\";\n\n    if (!!pConfig.operators && pStream.match(wordRegexp(pConfig.operators), true, true))\n      return \"operator\";\n\n    if (!!pConfig.constants && pStream.match(wordRegexp(pConfig.constants), true, true))\n      return \"variable\";\n\n    /* attribute lists */\n    if (!pConfig.inAttributeList && !!pConfig.attributes && pStream.match('[', true, true)) {\n      pConfig.inAttributeList = true;\n      return \"bracket\";\n    }\n    if (pConfig.inAttributeList) {\n      if (pConfig.attributes !== null && pStream.match(wordRegexpBoundary(pConfig.attributes), true, true)) {\n        return \"attribute\";\n      }\n      if (pStream.match(']', true, true)) {\n        pConfig.inAttributeList = false;\n        return \"bracket\";\n      }\n    }\n\n    pStream.next();\n    return null\n  };\n}\n"],"names":["mkParser","lang","name","startState","startStateFn","copyState","copyStateFn","token","produceTokenFunction","languageData","commentTokens","line","block","open","close","mscgen","msgenny","xu","wordRegexpBoundary","pWords","RegExp","join","wordRegexp","inComment","inString","inAttributeList","inScript","pState","pConfig","pStream","match","brackets","singlecomment","skipToEnd","keywords","options","arcsWords","arcsOthers","operators","constants","attributes","next"],"sourceRoot":""}