{"version":3,"file":"4053.6eaedab067101f4476fa.js?v=6eaedab067101f4476fa","mappings":"6KAAA,IAAIA,EAAQ,CAAC,EAEb,SAASC,EAAUC,GACjB,GAAIA,EAAOC,WAAY,OAAO,KAE9B,IAAIC,EAAMF,EAAOE,MACjB,IAAIC,EAAKH,EAAOI,OAEhB,GAAID,IAAO,KAAM,CACf,GAAIH,EAAOK,MAAM,OAASL,EAAOK,MAAM,OAASL,EAAOK,MAAM,OACzDL,EAAOK,MAAM,MAASL,EAAOK,MAAM,MACnCL,EAAOK,MAAM,MAASL,EAAOK,MAAM,KAAM,CAC3C,MAAO,QACT,CACA,GAAIL,EAAOK,MAAM,MAAO,CACtBL,EAAOM,OAAO,KACdN,EAAOI,OACP,MAAO,QACT,CACA,GAAIJ,EAAOK,MAAM,OAASL,EAAOK,MAAM,MAAO,CAC5CL,EAAOO,SAAS,SAChB,MAAO,QACT,CACA,GAAIP,EAAOK,MAAM,MAASL,EAAOK,MAAM,MAAQ,CAC7CL,EAAOO,SAAS,SAChB,MAAO,QACT,CACA,MAAO,QACT,CACA,GAAIL,IAAQC,IAAO,KAAOA,IAAO,KAAO,CACtC,GAAIH,EAAOQ,IAAI,OAASR,EAAOQ,IAAI,KAAO,CACxCR,EAAOS,YACP,MAAO,SACT,CACF,CACA,GAAIP,GAAOC,IAAO,IAAK,CACrB,GAAIH,EAAOK,MAAM,OAASL,EAAOK,MAAM,OAASL,EAAOK,MAAM,MAAO,CAClE,MAAO,WACT,CACA,GAAIL,EAAOK,MAAM,QAAUL,EAAOK,MAAM,QAAUL,EAAOK,MAAM,QAAUL,EAAOK,MAAM,OAAQ,CAC5FL,EAAOS,YACP,MAAO,OACT,CACA,GAAKT,EAAOK,MAAM,UAAYL,EAAOK,MAAM,UAAcL,EAAOK,MAAM,UAAYL,EAAOK,MAAM,SAAW,CACxG,MAAO,WACT,CACF,CACAL,EAAOO,SAAS,SAChB,IAAIG,EAAMV,EAAOW,UACjB,OAAOb,EAAMc,eAAeF,GAAOZ,EAAMY,GAAO,IAClD,CAEA,SAASG,EAASb,EAAQc,GACxB,OAAQA,EAAMC,OAAO,IAAMhB,GAAYC,EAAQc,EACjD,CAEO,MAAME,EAAQ,CACnBC,KAAM,QACNC,WAAY,WAAY,MAAO,CAACH,OAAO,GAAI,EAC3CI,MAAO,SAASnB,EAAQc,GACtB,OAAOD,EAASb,EAAQc,EAC1B,E","sources":["webpack://@jupyterlab/application-top/./node_modules/@codemirror/legacy-modes/mode/troff.js"],"sourcesContent":["var words = {};\n\nfunction tokenBase(stream) {\n  if (stream.eatSpace()) return null;\n\n  var sol = stream.sol();\n  var ch = stream.next();\n\n  if (ch === '\\\\') {\n    if (stream.match('fB') || stream.match('fR') || stream.match('fI') ||\n        stream.match('u')  || stream.match('d')  ||\n        stream.match('%')  || stream.match('&')) {\n      return 'string';\n    }\n    if (stream.match('m[')) {\n      stream.skipTo(']');\n      stream.next();\n      return 'string';\n    }\n    if (stream.match('s+') || stream.match('s-')) {\n      stream.eatWhile(/[\\d-]/);\n      return 'string';\n    }\n    if (stream.match('\\(') || stream.match('*\\(')) {\n      stream.eatWhile(/[\\w-]/);\n      return 'string';\n    }\n    return 'string';\n  }\n  if (sol && (ch === '.' || ch === '\\'')) {\n    if (stream.eat('\\\\') && stream.eat('\\\"')) {\n      stream.skipToEnd();\n      return 'comment';\n    }\n  }\n  if (sol && ch === '.') {\n    if (stream.match('B ') || stream.match('I ') || stream.match('R ')) {\n      return 'attribute';\n    }\n    if (stream.match('TH ') || stream.match('SH ') || stream.match('SS ') || stream.match('HP ')) {\n      stream.skipToEnd();\n      return 'quote';\n    }\n    if ((stream.match(/[A-Z]/) && stream.match(/[A-Z]/)) || (stream.match(/[a-z]/) && stream.match(/[a-z]/))) {\n      return 'attribute';\n    }\n  }\n  stream.eatWhile(/[\\w-]/);\n  var cur = stream.current();\n  return words.hasOwnProperty(cur) ? words[cur] : null;\n}\n\nfunction tokenize(stream, state) {\n  return (state.tokens[0] || tokenBase) (stream, state);\n};\n\nexport const troff = {\n  name: \"troff\",\n  startState: function() {return {tokens:[]};},\n  token: function(stream, state) {\n    return tokenize(stream, state);\n  }\n};\n"],"names":["words","tokenBase","stream","eatSpace","sol","ch","next","match","skipTo","eatWhile","eat","skipToEnd","cur","current","hasOwnProperty","tokenize","state","tokens","troff","name","startState","token"],"sourceRoot":""}