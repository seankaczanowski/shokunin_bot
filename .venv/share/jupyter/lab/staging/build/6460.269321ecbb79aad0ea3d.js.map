{"version":3,"file":"6460.269321ecbb79aad0ea3d.js?v=269321ecbb79aad0ea3d","mappings":"4KAAO,MAAMA,EAAO,CAClBC,KAAM,OACNC,WAAY,WACV,MAAO,CACLC,SAAU,MACVC,WAAY,GACZC,IAAK,KACLC,QAAS,EAEb,EACAC,MAAO,SAAUC,EAAQC,GAEvB,IAAKA,EAAMN,WAAcK,EAAOE,QAAU,KAASF,EAAOE,QAAU,KAAO,CACzED,EAAML,WAAaI,EAAOE,OAC1BF,EAAOG,OACPF,EAAMN,SAAW,IACnB,CACA,GAAIK,EAAOI,OAASH,EAAMH,UAAY,EAAG,CACvCG,EAAMJ,IAAM,IACd,CAEA,GAAII,EAAMN,SAAU,CAClB,MAAOM,EAAMN,WAAaK,EAAOK,MAAO,CACtC,GAAIL,EAAOE,SAAWD,EAAML,WAAY,CACtCI,EAAOG,OACPF,EAAMN,SAAW,KACnB,MAAO,GAAIK,EAAOE,SAAW,KAAM,CACjCF,EAAOG,OACPH,EAAOG,MACT,KAAO,CACLH,EAAOM,MAAM,eACf,CACF,CACA,OAAOL,EAAMJ,IAAM,WAAa,QAClC,MAAO,GAAII,EAAMH,SAAWE,EAAOE,SAAW,IAAK,CACjDF,EAAOG,OACPF,EAAMH,UACN,MAAO,SACT,MAAO,GAAIG,EAAMJ,KAAOG,EAAOE,SAAW,KAAOF,EAAOO,OAAO,KAAM,CACnEP,EAAOG,OAEP,GAAIH,EAAOE,SAAW,IAAKF,EAAOG,OAClC,MAAO,MACT,MAAO,GAAIH,EAAOE,SAAW,IAAK,CAChCF,EAAOQ,YACP,MAAO,SACT,MAAO,GAAIR,EAAOS,WAAY,CAC5B,OAAO,IACT,MAAO,GAAIR,EAAMJ,KAAOG,EAAOU,UAAS,SAAUC,GAAK,OAAOA,GAAK,KAAOA,GAAK,GAAK,IAAI,CACtF,MAAO,UACT,MAAO,GAAIV,EAAMJ,KAAOG,EAAOE,SAAW,IAAK,CAC7CF,EAAOG,OACPF,EAAMJ,IAAM,MACZ,OAAO,IACT,MAAO,IAAKI,EAAMJ,KAAOG,EAAOM,MAAM,0BAA2B,CAC/D,MAAO,MACT,MAAO,IAAKL,EAAMJ,MAAQG,EAAOM,MAAM,SAAWN,EAAOM,MAAM,UAAW,CACxE,MAAO,MACT,MAAO,IAAKL,EAAMJ,KAAOG,EAAOE,SAAW,IAAK,CAC9CD,EAAMH,UACNE,EAAOG,OACP,MAAO,SACT,MAAO,IAAKF,EAAMJ,KAAOG,EAAOM,MAAM,qBAAsB,CAC1D,MAAO,QACT,MAAO,IAAKN,EAAOS,WAAY,CAC7BT,EAAOG,MACT,CACA,OAAO,IACT,EACAS,aAAc,CACZC,cAAe,CAAEC,KAAM,M","sources":["webpack://@jupyterlab/application-top/./node_modules/@codemirror/legacy-modes/mode/toml.js"],"sourcesContent":["export const toml = {\n  name: \"toml\",\n  startState: function () {\n    return {\n      inString: false,\n      stringType: \"\",\n      lhs: true,\n      inArray: 0\n    };\n  },\n  token: function (stream, state) {\n    //check for state changes\n    if (!state.inString && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n      state.stringType = stream.peek();\n      stream.next(); // Skip quote\n      state.inString = true; // Update state\n    }\n    if (stream.sol() && state.inArray === 0) {\n      state.lhs = true;\n    }\n    //return state\n    if (state.inString) {\n      while (state.inString && !stream.eol()) {\n        if (stream.peek() === state.stringType) {\n          stream.next(); // Skip quote\n          state.inString = false; // Clear flag\n        } else if (stream.peek() === '\\\\') {\n          stream.next();\n          stream.next();\n        } else {\n          stream.match(/^.[^\\\\\\\"\\']*/);\n        }\n      }\n      return state.lhs ? \"property\" : \"string\"; // Token style\n    } else if (state.inArray && stream.peek() === ']') {\n      stream.next();\n      state.inArray--;\n      return 'bracket';\n    } else if (state.lhs && stream.peek() === '[' && stream.skipTo(']')) {\n      stream.next();//skip closing ]\n      // array of objects has an extra open & close []\n      if (stream.peek() === ']') stream.next();\n      return \"atom\";\n    } else if (stream.peek() === \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (state.lhs && stream.eatWhile(function (c) { return c != '=' && c != ' '; })) {\n      return \"property\";\n    } else if (state.lhs && stream.peek() === \"=\") {\n      stream.next();\n      state.lhs = false;\n      return null;\n    } else if (!state.lhs && stream.match(/^\\d\\d\\d\\d[\\d\\-\\:\\.T]*Z/)) {\n      return 'atom'; //date\n    } else if (!state.lhs && (stream.match('true') || stream.match('false'))) {\n      return 'atom';\n    } else if (!state.lhs && stream.peek() === '[') {\n      state.inArray++;\n      stream.next();\n      return 'bracket';\n    } else if (!state.lhs && stream.match(/^\\-?\\d+(?:\\.\\d+)?/)) {\n      return 'number';\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n    return null;\n  },\n  languageData: {\n    commentTokens: { line: '#' },\n  },\n};\n"],"names":["toml","name","startState","inString","stringType","lhs","inArray","token","stream","state","peek","next","sol","eol","match","skipTo","skipToEnd","eatSpace","eatWhile","c","languageData","commentTokens","line"],"sourceRoot":""}