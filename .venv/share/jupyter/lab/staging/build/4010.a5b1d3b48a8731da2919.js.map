{"version":3,"file":"4010.a5b1d3b48a8731da2919.js?v=a5b1d3b48a8731da2919","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","webpack://@jupyterlab/application-top/./node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","webpack://@jupyterlab/application-top/./node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","webpack://@jupyterlab/application-top/./node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","webpack://@jupyterlab/application-top/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-2NYFTIL2.mjs","webpack://@jupyterlab/application-top/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-2O5ZK7RR.mjs","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/grammar-loader.js","webpack://@jupyterlab/application-top/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-7PKI6E2E.mjs","webpack://@jupyterlab/application-top/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-C4OEIS7N.mjs","webpack://@jupyterlab/application-top/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-EXZZNE6F.mjs","webpack://@jupyterlab/application-top/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-ROXG7S4E.mjs","webpack://@jupyterlab/application-top/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-V4Q32G6S.mjs","webpack://@jupyterlab/application-top/./node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs","webpack://@jupyterlab/application-top/./node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseSlice.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/drop.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/assign.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/pickBy.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseIsRegExp.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/isRegExp.js","webpack://@jupyterlab/application-top/./node_modules/@chevrotain/gast/lib/src/model.js","webpack://@jupyterlab/application-top/./node_modules/@chevrotain/gast/lib/src/visitor.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseSome.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/some.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/includes.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_arrayEvery.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseEvery.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/every.js","webpack://@jupyterlab/application-top/./node_modules/@chevrotain/gast/lib/src/helpers.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/grammar/rest.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/uniq.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/grammar/first.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/constants.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/grammar/follow.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/negate.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/reject.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/indexOf.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseDifference.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/difference.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/compact.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/head.js","webpack://@jupyterlab/application-top/./node_modules/@chevrotain/utils/lib/src/print.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/scan/reg_exp.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/scan/lexer.js","webpack://@jupyterlab/application-top/./node_modules/@chevrotain/utils/lib/src/timer.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/scan/tokens.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/scan/lexer_public.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/scan/tokens_public.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/errors_public.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/grammar/resolver.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_arrayAggregator.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseAggregator.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_createAggregator.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/groupBy.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/dropRight.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/grammar/checks.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/exceptions_public.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/grammar/keys.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/cst/cst.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/lang/lang_extensions.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/parse/parser/parser.js","webpack://@jupyterlab/application-top/./node_modules/@chevrotain/cst-dts-gen/lib/src/model.js","webpack://@jupyterlab/application-top/./node_modules/@chevrotain/cst-dts-gen/lib/src/api.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain/lib/src/api.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/languages/grammar-config.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain-allstar/lib/atn.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain-allstar/lib/dfa.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/uniqBy.js","webpack://@jupyterlab/application-top/./node_modules/chevrotain-allstar/lib/all-star-lookahead.js","webpack://@jupyterlab/application-top/./node_modules/vscode-languageserver-types/lib/esm/main.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/parser/cst-node-builder.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/parser/langium-parser.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/parser/parser-builder-base.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/parser/completion-parser-builder.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/parser/langium-parser-builder.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/promise-utils.js","webpack://@jupyterlab/application-top/./node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/workspace/documents.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/references/linker.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/references/name-provider.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/uri-utils.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/references/references.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/collections.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/references/scope-computation.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/references/scope.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/caching.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/references/scope-provider.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/serializer/json-serializer.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/service-registry.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/validation/validation-registry.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/validation/document-validator.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/workspace/ast-descriptions.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/workspace/ast-node-locator.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/workspace/configuration.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/disposable.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/workspace/document-builder.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/workspace/index-manager.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/workspace/workspace-manager.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/parser/lexer.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/documentation/jsdoc.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/documentation/documentation-provider.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/documentation/comment-provider.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/parser/async-parser.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/workspace/workspace-lock.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/serializer/hydrator.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/default-module.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/dependency-injection.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/languages/generated/ast.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/parser/token-builder.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/parser/value-converter.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/syntax-tree.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/ast-utils.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/cst-utils.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/errors.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/grammar-utils.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/regexp-utils.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/utils/stream.js","webpack://@jupyterlab/application-top/./node_modules/langium/lib/workspace/file-system-provider.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseExtremum.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseLt.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseMap.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseSet.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_basePickBy.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/clone.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/defaults.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_createFind.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/findIndex.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/find.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/flatMap.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/flatten.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseHas.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/has.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/isString.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/last.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/map.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/min.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_trimmedEndIndex.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/_baseTrim.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/toNumber.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/toFinite.js","webpack://@jupyterlab/application-top/./node_modules/lodash-es/toInteger.js","webpack://@jupyterlab/application-top/./node_modules/process/browser.js","webpack://@jupyterlab/application-top/./node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack://@jupyterlab/application-top/./node_modules/vscode-jsonrpc/lib/common/events.js","webpack://@jupyterlab/application-top/./node_modules/vscode-jsonrpc/lib/common/is.js","webpack://@jupyterlab/application-top/./node_modules/vscode-jsonrpc/lib/common/ral.js","webpack://@jupyterlab/application-top/./node_modules/vscode-uri/lib/esm/index.mjs"],"sourcesContent":["export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  RadarGeneratedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/radar/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/radar/tokenBuilder.ts\nvar RadarTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"RadarTokenBuilder\");\n  }\n  constructor() {\n    super([\"radar-beta\"]);\n  }\n};\n\n// src/language/radar/module.ts\nvar RadarModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new RadarTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createRadarServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Radar = inject(\n    createDefaultCoreModule({ shared }),\n    RadarGeneratedModule,\n    RadarModule\n  );\n  shared.ServiceRegistry.register(Radar);\n  return { shared, Radar };\n}\n__name(createRadarServices, \"createRadarServices\");\n\nexport {\n  RadarModule,\n  createRadarServices\n};\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Axis = \"Axis\";\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Common = \"Common\";\nfunction isCommon(item) {\n  return reflection.isInstance(item, Common);\n}\n__name(isCommon, \"isCommon\");\nvar Curve = \"Curve\";\nvar Edge = \"Edge\";\nvar Entry = \"Entry\";\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Group = \"Group\";\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Junction = \"Junction\";\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Option = \"Option\";\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Radar = \"Radar\";\nvar Service = \"Service\";\nvar Direction = \"Direction\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [Architecture, Axis, Branch, Checkout, CherryPicking, Commit, Common, Curve, Direction, Edge, Entry, GitGraph, Group, Info, Junction, Merge, Option, Packet, PacketBlock, Pie, PieSection, Radar, Service, Statement];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      case \"Entry:axis\": {\n        return Axis;\n      }\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case Architecture: {\n        return {\n          name: Architecture,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Axis: {\n        return {\n          name: Axis,\n          properties: [\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Branch: {\n        return {\n          name: Branch,\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case Checkout: {\n        return {\n          name: Checkout,\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case CherryPicking: {\n        return {\n          name: CherryPicking,\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case Commit: {\n        return {\n          name: Commit,\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Common: {\n        return {\n          name: Common,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Curve: {\n        return {\n          name: Curve,\n          properties: [\n            { name: \"entries\", defaultValue: [] },\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Edge: {\n        return {\n          name: Edge,\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Entry: {\n        return {\n          name: Entry,\n          properties: [\n            { name: \"axis\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case GitGraph: {\n        return {\n          name: GitGraph,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Group: {\n        return {\n          name: Group,\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Info: {\n        return {\n          name: Info,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Junction: {\n        return {\n          name: Junction,\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case Merge: {\n        return {\n          name: Merge,\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Option: {\n        return {\n          name: Option,\n          properties: [\n            { name: \"name\" },\n            { name: \"value\", defaultValue: false }\n          ]\n        };\n      }\n      case Packet: {\n        return {\n          name: Packet,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PacketBlock: {\n        return {\n          name: PacketBlock,\n          properties: [\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case Pie: {\n        return {\n          name: Pie,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PieSection: {\n        return {\n          name: PieSection,\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Radar: {\n        return {\n          name: Radar,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"axes\", defaultValue: [] },\n            { name: \"curves\", defaultValue: [] },\n            { name: \"options\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Service: {\n        return {\n          name: Service,\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Direction: {\n        return {\n          name: Direction,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Info\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Packet\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Pie\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_LABEL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]+\\\\\"/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_VALUE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/(0|[1-9][0-9]*)(\\\\\\\\.[0-9]+)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Architecture\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"LeftPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"RightPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Arrow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ID\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TEXT_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\(\\\\\"[^\\\\\"]+\\\\\"\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"GitGraph\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+(?=\\\\\\\\s)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\nvar loadedRadarGrammar;\nvar RadarGrammar = /* @__PURE__ */ __name(() => loadedRadarGrammar ?? (loadedRadarGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Radar\",\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Entry\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"axis\",\"isOptional\":true,\"type\":{\"$type\":\"ReferenceType\",\"referenceType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@12\"}}}},{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}],\"superTypes\":[]}],\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Radar\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\"radar-beta:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"axis\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"curve\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Label\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"[\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"]\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Axis\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Curve\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\"{\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\"}\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Entries\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"DetailedEntry\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"axis\",\"operator\":\"=\",\"terminal\":{\"$type\":\"CrossReference\",\"type\":{\"$ref\":\"#/rules@12\"},\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]},\"deprecatedSyntax\":false}},{\"$type\":\"Keyword\",\"value\":\":\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"NumberEntry\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Option\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showLegend\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"ticks\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"max\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"min\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"graticule\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/(0|[1-9][0-9]*)(\\\\\\\\.[0-9]+)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"GRATICULE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"circle\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"polygon\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[a-zA-Z_][a-zA-Z0-9\\\\\\\\-_]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[]}`)), \"RadarGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar RadarLanguageMetaData = {\n  languageId: \"radar\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar RadarGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => RadarGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => RadarLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  isCommon,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  Radar,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  RadarGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet-beta\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-2NYFTIL2.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-EXZZNE6F.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-V4Q32G6S.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-ROXG7S4E.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-C4OEIS7N.mjs\";\nimport {\n  RadarModule,\n  createRadarServices\n} from \"./chunks/mermaid-parser.core/chunk-2O5ZK7RR.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  Statement,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection\n} from \"./chunks/mermaid-parser.core/chunk-7PKI6E2E.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-4N47QTOZ.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-KVYON367.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-R6RNRRYF.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-4AB2E3PP.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-O2Q2CXLX.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\"),\n  radar: /* @__PURE__ */ __name(async () => {\n    const { createRadarServices: createRadarServices2 } = await import(\"./chunks/mermaid-parser.core/radar-MK3ICKWK.mjs\");\n    const parser = createRadarServices2().Radar.parser.LangiumParser;\n    parsers.radar = parser;\n  }, \"radar\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  RadarModule,\n  Statement,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  createRadarServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  parse\n};\n","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","import { GAstVisitor, NonTerminal } from \"@chevrotain/gast\";\nimport { assign, flatten, groupBy, map, some, values } from \"lodash-es\";\nexport function buildModel(productions) {\n    const generator = new CstNodeDefinitionGenerator();\n    const allRules = values(productions);\n    return map(allRules, (rule) => generator.visitRule(rule));\n}\nclass CstNodeDefinitionGenerator extends GAstVisitor {\n    visitRule(node) {\n        const rawElements = this.visitEach(node.definition);\n        const grouped = groupBy(rawElements, (el) => el.propertyName);\n        const properties = map(grouped, (group, propertyName) => {\n            const allNullable = !some(group, (el) => !el.canBeNull);\n            // In an alternation with a label a property name can have\n            // multiple types.\n            let propertyType = group[0].type;\n            if (group.length > 1) {\n                propertyType = map(group, (g) => g.type);\n            }\n            return {\n                name: propertyName,\n                type: propertyType,\n                optional: allNullable,\n            };\n        });\n        return {\n            name: node.name,\n            properties: properties,\n        };\n    }\n    visitAlternative(node) {\n        return this.visitEachAndOverrideWith(node.definition, { canBeNull: true });\n    }\n    visitOption(node) {\n        return this.visitEachAndOverrideWith(node.definition, { canBeNull: true });\n    }\n    visitRepetition(node) {\n        return this.visitEachAndOverrideWith(node.definition, { canBeNull: true });\n    }\n    visitRepetitionMandatory(node) {\n        return this.visitEach(node.definition);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        return this.visitEach(node.definition).concat({\n            propertyName: node.separator.name,\n            canBeNull: true,\n            type: getType(node.separator),\n        });\n    }\n    visitRepetitionWithSeparator(node) {\n        return this.visitEachAndOverrideWith(node.definition, {\n            canBeNull: true,\n        }).concat({\n            propertyName: node.separator.name,\n            canBeNull: true,\n            type: getType(node.separator),\n        });\n    }\n    visitAlternation(node) {\n        return this.visitEachAndOverrideWith(node.definition, { canBeNull: true });\n    }\n    visitTerminal(node) {\n        return [\n            {\n                propertyName: node.label || node.terminalType.name,\n                canBeNull: false,\n                type: getType(node),\n            },\n        ];\n    }\n    visitNonTerminal(node) {\n        return [\n            {\n                propertyName: node.label || node.nonTerminalName,\n                canBeNull: false,\n                type: getType(node),\n            },\n        ];\n    }\n    visitEachAndOverrideWith(definition, override) {\n        return map(this.visitEach(definition), (definition) => assign({}, definition, override));\n    }\n    visitEach(definition) {\n        return flatten(map(definition, (definition) => this.visit(definition)));\n    }\n}\nfunction getType(production) {\n    if (production instanceof NonTerminal) {\n        return {\n            kind: \"rule\",\n            name: production.referencedRule.name,\n        };\n    }\n    return { kind: \"token\" };\n}\n//# sourceMappingURL=model.js.map","import { buildModel } from \"./model.js\";\nimport { genDts } from \"./generate.js\";\nconst defaultOptions = {\n    includeVisitorInterface: true,\n    visitorInterfaceName: \"ICstNodeVisitor\",\n};\nexport function generateCstDts(productions, options) {\n    const effectiveOptions = Object.assign(Object.assign({}, defaultOptions), options);\n    const model = buildModel(productions);\n    return genDts(model, effectiveOptions);\n}\n//# sourceMappingURL=api.js.map","/* istanbul ignore file - tricky to import some things from this module during testing */\n// semantic version\nexport { VERSION } from \"./version.js\";\nexport { CstParser, EmbeddedActionsParser, ParserDefinitionErrorType, EMPTY_ALT, } from \"./parse/parser/parser.js\";\nexport { Lexer, LexerDefinitionErrorType } from \"./scan/lexer_public.js\";\n// Tokens utilities\nexport { createToken, createTokenInstance, EOF, tokenLabel, tokenMatcher, tokenName, } from \"./scan/tokens_public.js\";\n// Lookahead\nexport { getLookaheadPaths } from \"./parse/grammar/lookahead.js\";\nexport { LLkLookaheadStrategy } from \"./parse/grammar/llk_lookahead.js\";\n// Other Utilities\nexport { defaultParserErrorProvider } from \"./parse/errors_public.js\";\nexport { EarlyExitException, isRecognitionException, MismatchedTokenException, NotAllInputParsedException, NoViableAltException, } from \"./parse/exceptions_public.js\";\nexport { defaultLexerErrorProvider } from \"./scan/lexer_errors_public.js\";\n// grammar reflection API\nexport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\n// GAST Utilities\nexport { serializeGrammar, serializeProduction, GAstVisitor, } from \"@chevrotain/gast\";\nexport { generateCstDts } from \"@chevrotain/cst-dts-gen\";\n/* istanbul ignore next */\nexport function clearCache() {\n    console.warn(\"The clearCache function was 'soft' removed from the Chevrotain API.\" +\n        \"\\n\\t It performs no action other than printing this message.\" +\n        \"\\n\\t Please avoid using it as it will be completely removed in the future\");\n}\nexport { createSyntaxDiagramsCode } from \"./diagrams/render_public.js\";\nexport class Parser {\n    constructor() {\n        throw new Error(\"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" +\n            \"See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0\");\n    }\n}\n//# sourceMappingURL=api.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        var _a;\n        return (_a = this.nodeStack[this.nodeStack.length - 1]) !== null && _a !== void 0 ? _a : this.rootNode;\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, !feature);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    addHiddenNodes(tokens) {\n        const nodes = [];\n        for (const token of tokens) {\n            const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            leafNode.root = this.rootNode;\n            nodes.push(leafNode);\n        }\n        let current = this.current;\n        let added = false;\n        // If we are within a composite node, we add the hidden nodes to the content\n        if (current.content.length > 0) {\n            current.content.push(...nodes);\n            return;\n        }\n        // Otherwise we are at a newly created node\n        // Instead of adding the hidden nodes here, we search for the first parent node with content\n        while (current.container) {\n            const index = current.container.content.indexOf(current);\n            if (index > 0) {\n                // Add the hidden nodes before the current node\n                current.container.content.splice(index, 0, ...nodes);\n                added = true;\n                break;\n            }\n            current = current.container;\n        }\n        // If we arrive at the root node, we add the hidden nodes at the beginning\n        // This is the case if the hidden nodes are the first nodes in the tree\n        if (!added) {\n            this.rootNode.content.unshift(...nodes);\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getExplicitRuleType, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.allRules = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { skipValidations: production, errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    getRule(name) {\n        return this.allRules.get(name);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = this.computeRuleType(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    computeRuleType(rule) {\n        if (rule.fragment) {\n            return undefined;\n        }\n        else if (isDataTypeRule(rule)) {\n            return DatatypeSymbol;\n        }\n        else {\n            const explicit = getExplicitRuleType(rule);\n            return explicit !== null && explicit !== void 0 ? explicit : rule.name;\n        }\n    }\n    parse(input, options = {}) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const ruleMethod = options.rule ? this.allRules.get(options.rule) : this.mainRule;\n        if (!ruleMethod) {\n            throw new Error(options.rule ? `No rule found with name '${options.rule}'` : 'No main rule available.');\n        }\n        const result = ruleMethod.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenNodes(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        this.lexerResult = undefined;\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            lexerReport: lexerResult.report,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            // Only create a new AST node in case the calling rule is not a fragment rule\n            const createNode = !this.isRecording() && $type !== undefined;\n            if (createNode) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (result === undefined && createNode) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    extractHiddenTokens(token) {\n        const hiddenTokens = this.lexerResult.hidden;\n        if (!hiddenTokens.length) {\n            return [];\n        }\n        const offset = token.startOffset;\n        for (let i = 0; i < hiddenTokens.length; i++) {\n            const token = hiddenTokens[i];\n            if (token.startOffset > offset) {\n                return hiddenTokens.splice(0, i);\n            }\n        }\n        return hiddenTokens.splice(0, hiddenTokens.length);\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const hiddenTokens = this.extractHiddenTokens(token);\n            this.nodeBuilder.addHiddenNodes(hiddenTokens);\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        let cstNode;\n        if (!this.isRecording() && !fragment) {\n            // We only want to create a new CST node if the subrule actually creates a new AST node.\n            // In other cases like calls of fragment rules the current CST/AST is populated further.\n            // Note that skipping this initialization and leaving cstNode unassigned also skips the subrule assignment later on.\n            // This is intended, as fragment rules only enrich the current AST node\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const object = this.assignWithoutOverride(result, current);\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            if (action.feature && action.operator) {\n                last = this.construct();\n                this.nodeBuilder.removeNode(last.$cstNode);\n                const node = this.nodeBuilder.buildCompositeNode(action);\n                node.content.push(last.$cstNode);\n                const newItem = { $type };\n                this.stack.push(newItem);\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n            else {\n                last.$type = $type;\n            }\n        }\n    }\n    construct() {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        this.stack.pop();\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        // The target was parsed from a unassigned subrule\n        // After the subrule construction, it received a cst node\n        // This CST node will later be overriden by the cst node builder\n        // To prevent references to stale AST nodes in the CST,\n        // we need to remove the reference here\n        const targetCstNode = target.$cstNode;\n        if (targetCstNode) {\n            targetCstNode.astNode = undefined;\n            target.$cstNode = undefined;\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input, { mode: 'partial' });\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy({\n                    // If validations are skipped, don't log the lookahead warnings\n                    logging: config.skipValidations ? () => { } : undefined\n                }) }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const parserContext = {\n        parser,\n        tokens,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        parserContext.parser.rule(rule, buildElement(ctx, rule.definition));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const fragment = rule.fragment;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), fragment, ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule: ${ruleCall.rule.$refText}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        // The terminal is a data type rule here. Everything else will result in a validation error.\n        const rule = terminal.rule.ref;\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), false, crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.parser.getRule(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = performance.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = performance.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n        // prevent calling delayNextTick every iteration of loop\n        // where delayNextTick takes up the majority or all of the\n        // globalInterruptionPeriod itself\n        lastTick = performance.now();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, token) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, textDocument, token);\n        }\n        else {\n            return this.create(uri, textDocument, token);\n        }\n    }\n    fromString(text, uri, token) {\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, text, token);\n        }\n        else {\n            return this.create(uri, text, token);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content, options) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content, options);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText(), options);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text, options) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text, options);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            const linker = this.serviceRegistry.getServices(uri).references.Linker;\n            linker.unlink(langiumDoc);\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { findRootNode, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nconst ref_resolving = Symbol('ref_resolving');\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        var _a;\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            ref._ref = ref_resolving;\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                    else {\n                        // Try to load the target AST node later using the already provided description\n                        ref._ref = undefined;\n                    }\n                }\n            }\n            catch (err) {\n                console.error(`An error occurred while resolving reference to '${ref.$refText}':`, err);\n                const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${errorMessage}` });\n            }\n            // Add the reference to the document's array of references\n            // Only add if the reference has been not been resolved earlier\n            // Otherwise we end up with duplicates\n            // See also implementation of `buildReference`\n            document.references.push(ref);\n        }\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    this._ref = ref_resolving;\n                    const document = findRootNode(node).$document;\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && document && document.state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return this._ref = undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                    document === null || document === void 0 ? void 0 : document.references.push(this);\n                }\n                else if (this._ref === ref_resolving) {\n                    throw new Error(`Cyclic reference resolution detected: ${linker.astNodeLocator.getAstNodePath(node)}/${property} (symbol '${refText}')`);\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        var _a;\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            console.error(`An error occurred while resolving reference to '${refInfo.reference.$refText}':`, err);\n            const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${errorMessage}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = findRootNode(refInfo.container).$document;\n        if (document && document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n    function normalize(uri) {\n        return URI.parse(uri.toString()).toString();\n    }\n    UriUtils.normalize = normalize;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCancelled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    /**\n     * Creates a new document cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     *\n     * Providing a state here will use `DocumentBuilder#onDocumentPhase` instead,\n     * which triggers on all documents that have been affected by this change, assuming that the\n     * state is `DocumentState.Linked` or a later state.\n     */\n    constructor(sharedServices, state) {\n        super(uri => uri.toString());\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onDocumentPhase(state, document => {\n                this.clear(document.uri.toString());\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                for (const uri of deleted) { // react only on deleted documents\n                    this.clear(uri);\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n                const allUris = changed.concat(deleted); // react on both changed and deleted documents\n                for (const uri of allUris) {\n                    this.clear(uri);\n                }\n            }));\n        }\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace is added, changed or deleted, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    /**\n     * Creates a new workspace cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     */\n    constructor(sharedServices, state) {\n        super();\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onBuildPhase(state, () => {\n                this.clear();\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                if (deleted.length > 0) { // react only on deleted documents\n                    this.clear();\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n                this.clear();\n            }));\n        }\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options) {\n        const serializeOptions = options !== null && options !== void 0 ? options : {};\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, serializeOptions);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options) {\n        const deserializeOptions = options !== null && options !== void 0 ? options : {};\n        const root = JSON.parse(content);\n        this.linkNode(root, root, deserializeOptions);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    /**\n     * @deprecated Use the new `fileExtensionMap` (or `languageIdMap`) property instead.\n     */\n    get map() {\n        return this.fileExtensionMap;\n    }\n    constructor(services) {\n        this.languageIdMap = new Map();\n        this.fileExtensionMap = new Map();\n        this.textDocuments = services === null || services === void 0 ? void 0 : services.workspace.TextDocuments;\n    }\n    register(language) {\n        const data = language.LanguageMetaData;\n        for (const ext of data.fileExtensions) {\n            if (this.fileExtensionMap.has(ext)) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${data.languageId}'.`);\n            }\n            this.fileExtensionMap.set(ext, language);\n        }\n        this.languageIdMap.set(data.languageId, language);\n        if (this.languageIdMap.size === 1) {\n            this.singleton = language;\n        }\n        else {\n            this.singleton = undefined;\n        }\n    }\n    getServices(uri) {\n        var _a, _b;\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.languageIdMap.size === 0) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const languageId = (_b = (_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(uri)) === null || _b === void 0 ? void 0 : _b.languageId;\n        if (languageId !== undefined) {\n            const services = this.languageIdMap.get(languageId);\n            if (services) {\n                return services;\n            }\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.fileExtensionMap.get(ext);\n        if (!services) {\n            if (languageId) {\n                throw new Error(`The service registry contains no services for the extension '${ext}' for language '${languageId}'.`);\n            }\n            else {\n                throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n            }\n        }\n        return services;\n    }\n    hasServices(uri) {\n        try {\n            this.getServices(uri);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    get all() {\n        return Array.from(this.languageIdMap.values());\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../index.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.entriesBefore = [];\n        this.entriesAfter = [];\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n            else {\n                assertUnreachable(callbacks);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, node, accept, cancelToken), 'An error occurred during validation', accept, node);\n        };\n    }\n    async handleException(functionality, messageContext, accept, node) {\n        try {\n            await functionality();\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error(`${messageContext}:`, err);\n            if (err instanceof Error && err.stack) {\n                console.error(err.stack);\n            }\n            const messageDetails = err instanceof Error ? err.message : String(err);\n            accept('error', `${messageContext}: ${messageDetails}`, { node });\n        }\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n    /**\n     * Register logic which will be executed once before validating all the nodes of an AST/Langium document.\n     * This helps to prepare or initialize some information which are required or reusable for the following checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map for mapping names to nodes could be established.\n     * During the usual checks on the nodes, they are put into this map with their name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerBeforeDocument(checkBefore, thisObj = this) {\n        this.entriesBefore.push(this.wrapPreparationException(checkBefore, 'An error occurred during set-up of the validation', thisObj));\n    }\n    /**\n     * Register logic which will be executed once after validating all the nodes of an AST/Langium document.\n     * This helps to finally evaluate information which are collected during the checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map with all the collected nodes and their names is checked\n     * and validation hints are created for all nodes with the same name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerAfterDocument(checkAfter, thisObj = this) {\n        this.entriesAfter.push(this.wrapPreparationException(checkAfter, 'An error occurred during tear-down of the validation', thisObj));\n    }\n    wrapPreparationException(check, messageContext, thisObj) {\n        return async (rootNode, accept, categories, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, rootNode, accept, categories, cancelToken), messageContext, accept, rootNode);\n        };\n    }\n    get checksBefore() {\n        return this.entriesBefore;\n    }\n    get checksAfter() {\n        return this.entriesAfter;\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        var _a, _b, _c;\n        const lexerDiagnostics = [...parseResult.lexerErrors, ...(_b = (_a = parseResult.lexerReport) === null || _a === void 0 ? void 0 : _a.diagnostics) !== null && _b !== void 0 ? _b : []];\n        for (const lexerDiagnostic of lexerDiagnostics) {\n            const severity = (_c = lexerDiagnostic.severity) !== null && _c !== void 0 ? _c : 'error';\n            const diagnostic = {\n                severity: toDiagnosticSeverity(severity),\n                range: {\n                    start: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column - 1\n                    },\n                    end: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column + lexerDiagnostic.length - 1\n                    }\n                },\n                message: lexerDiagnostic.message,\n                data: toDiagnosticData(severity),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await this.validateAstBefore(rootNode, options, acceptor, cancelToken);\n        await this.validateAstNodes(rootNode, options, acceptor, cancelToken);\n        await this.validateAstAfter(rootNode, options, acceptor, cancelToken);\n        return validationItems;\n    }\n    async validateAstBefore(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksBefore = this.validationRegistry.checksBefore;\n        for (const checkBefore of checksBefore) {\n            await interruptAndCheck(cancelToken);\n            await checkBefore(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    async validateAstNodes(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n    }\n    async validateAstAfter(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksAfter = this.validationRegistry.checksAfter;\n        for (const checkAfter of checksAfter) {\n            await interruptAndCheck(cancelToken);\n            await checkAfter(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\n/**\n * Transforms the diagnostic severity from the {@link LexingDiagnosticSeverity} format to LSP's `DiagnosticSeverity` format.\n *\n * @param severity The lexing diagnostic severity\n * @returns Diagnostic severity according to `vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity`\n */\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1;\n        case 'warning':\n            return 2;\n        case 'info':\n            return 3;\n        case 'hint':\n            return 4;\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport function toDiagnosticData(severity) {\n    switch (severity) {\n        case 'error':\n            return diagnosticData(DocumentValidator.LexingError);\n        case 'warning':\n            return diagnosticData(DocumentValidator.LexingWarning);\n        case 'info':\n            return diagnosticData(DocumentValidator.LexingInfo);\n        case 'hint':\n            return diagnosticData(DocumentValidator.LexingHint);\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.LexingWarning = 'lexing-warning';\n    DocumentValidator.LexingInfo = 'lexing-info';\n    DocumentValidator.LexingHint = 'lexing-hint';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document) {\n        const doc = document !== null && document !== void 0 ? document : getDocument(node);\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: doc.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Emitter } from '../utils/event.js';\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.onConfigurationSectionUpdateEmitter = new Emitter();\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            const configuration = change.settings[section];\n            this.updateSectionConfiguration(section, configuration);\n            this.onConfigurationSectionUpdateEmitter.fire({ section, configuration });\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n    get onConfigurationSectionUpdate() {\n        return this.onConfigurationSectionUpdateEmitter.event;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.documentPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect and sort all documents that we should rebuild\n        const rebuildDocuments = this.sortDocuments(this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray());\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Sort the given documents by priority. By default, documents with an open text document are prioritized.\n     * This is useful to ensure that visible documents show their diagnostics before all other documents.\n     *\n     * This improves the responsiveness in large workspaces as users usually don't care about diagnostics\n     * in files that are currently not opened in the editor.\n     */\n    sortDocuments(documents) {\n        let left = 0;\n        let right = documents.length - 1;\n        while (left < right) {\n            while (left < documents.length && this.hasTextDocument(documents[left])) {\n                left++;\n            }\n            while (right >= 0 && !this.hasTextDocument(documents[right])) {\n                right--;\n            }\n            if (left < right) {\n                [documents[left], documents[right]] = [documents[right], documents[left]];\n            }\n        }\n        return documents;\n    }\n    hasTextDocument(doc) {\n        var _a;\n        return Boolean((_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(doc.uri));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     *\n     * @param documents The documents to build.\n     * @param options the {@link BuildOptions} to use.\n     * @param cancelToken A cancellation token that can be used to cancel the build.\n     * @returns A promise that resolves when the build is done.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    /**\n     * Runs prior to beginning the build process to update the {@link DocumentBuildState} for each document\n     *\n     * @param documents collection of documents to be built\n     * @param options the {@link BuildOptions} to use\n     */\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    /**\n     * Runs a cancelable operation on a set of documents to bring them to a specified {@link DocumentState}.\n     *\n     * @param documents The array of documents to process.\n     * @param targetState The target {@link DocumentState} to bring the documents to.\n     * @param cancelToken A token that can be used to cancel the operation.\n     * @param callback A function to be called for each document.\n     * @returns A promise that resolves when all documents have been processed or the operation is canceled.\n     * @throws Will throw `OperationCancelled` if the operation is canceled via a `CancellationToken`.\n     */\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(doc => doc.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n            await this.notifyDocumentPhase(document, targetState, cancelToken);\n        }\n        // Do not use `filtered` here, as that will miss documents that have previously reached the current target state\n        // For example, this happens in case the cancellation triggers between the processing of two documents\n        // Or files that were picked up during the workspace initialization\n        const targetStateDocs = documents.filter(doc => doc.state === targetState);\n        await this.notifyBuildPhase(targetStateDocs, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    onDocumentPhase(targetState, callback) {\n        this.documentPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.documentPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyDocumentPhase(document, state, cancelToken) {\n        const listeners = this.documentPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            try {\n                await listener(document, cancelToken);\n            }\n            catch (err) {\n                // Ignore cancellation errors\n                // We want to finish the listeners before throwing\n                if (!isOperationCancelled(err)) {\n                    throw err;\n                }\n            }\n        }\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    get workspaceFolders() {\n        return this.folders;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer, defaultLexerErrorProvider } from 'chevrotain';\nexport class DefaultLexerErrorMessageProvider {\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return defaultLexerErrorProvider.buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column);\n    }\n    buildUnableToPopLexerModeMessage(token) {\n        return defaultLexerErrorProvider.buildUnableToPopLexerModeMessage(token);\n    }\n}\nexport const DEFAULT_TOKENIZE_OPTIONS = { mode: 'full' };\nexport class DefaultLexer {\n    constructor(services) {\n        this.errorMessageProvider = services.parser.LexerErrorMessageProvider;\n        this.tokenBuilder = services.parser.TokenBuilder;\n        const tokens = this.tokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full',\n            skipValidations: production,\n            errorMessageProvider: this.errorMessageProvider\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text, _options = DEFAULT_TOKENIZE_OPTIONS) {\n        var _a, _b, _c;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : [],\n            report: (_c = (_b = this.tokenBuilder).flushLexingReport) === null || _c === void 0 ? void 0 : _c.call(_b, text)\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser which simply wraps the sync parser in a promise.\n *\n * @remarks\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text, _cancelToken) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled, startCancelableOperation } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = startCancelableOperation();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken = CancellationToken.None) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport ? this.dehydrateLexerReport(result.lexerReport) : undefined,\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            parserErrors: result.parserErrors.map(e => (Object.assign(Object.assign({}, e), { message: e.message }))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    dehydrateLexerReport(lexerReport) {\n        // By default, lexer reports are serializable\n        return lexerReport;\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (!node) {\n            return undefined;\n        }\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        return element;\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer, DefaultLexerErrorMessageProvider } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider(),\n            LexerErrorMessageProvider: () => new DefaultLexerErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: (services) => new DefaultServiceRegistry(services),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        set: () => {\n            throw new Error('Cannot set property on injected service container');\n        },\n        get: (obj, prop) => {\n            if (prop === isProxy) {\n                return true;\n            }\n            else {\n                return _resolve(obj, prop, module, injector || proxy);\n            }\n        },\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)), // used by for..in\n        has: (_, prop) => prop in module, // used by ..in..\n        ownKeys: () => [...Object.getOwnPropertyNames(module)] // used by for..in\n    });\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. Visit https://langium.org/docs/reference/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.3.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return [AbstractElement, AbstractRule, AbstractType, Action, Alternatives, ArrayLiteral, ArrayType, Assignment, BooleanLiteral, CharacterRange, Condition, Conjunction, CrossReference, Disjunction, EndOfFile, Grammar, GrammarImport, Group, InferredType, Interface, Keyword, NamedArgument, NegatedToken, Negation, NumberLiteral, Parameter, ParameterReference, ParserRule, ReferenceType, RegexToken, ReturnType, RuleCall, SimpleType, StringLiteral, TerminalAlternatives, TerminalGroup, TerminalRule, TerminalRuleCall, Type, TypeAttribute, TypeDefinition, UnionType, UnorderedGroup, UntilToken, ValueLiteral, Wildcard];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case AbstractElement: {\n                return {\n                    name: AbstractElement,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case ArrayLiteral: {\n                return {\n                    name: ArrayLiteral,\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case ArrayType: {\n                return {\n                    name: ArrayType,\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case BooleanLiteral: {\n                return {\n                    name: BooleanLiteral,\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case Conjunction: {\n                return {\n                    name: Conjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Disjunction: {\n                return {\n                    name: Disjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Grammar: {\n                return {\n                    name: Grammar,\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case GrammarImport: {\n                return {\n                    name: GrammarImport,\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case InferredType: {\n                return {\n                    name: InferredType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case Interface: {\n                return {\n                    name: Interface,\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case NamedArgument: {\n                return {\n                    name: NamedArgument,\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Negation: {\n                return {\n                    name: Negation,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NumberLiteral: {\n                return {\n                    name: NumberLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Parameter: {\n                return {\n                    name: Parameter,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case ParameterReference: {\n                return {\n                    name: ParameterReference,\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case ParserRule: {\n                return {\n                    name: ParserRule,\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case ReferenceType: {\n                return {\n                    name: ReferenceType,\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case ReturnType: {\n                return {\n                    name: ReturnType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case SimpleType: {\n                return {\n                    name: SimpleType,\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case StringLiteral: {\n                return {\n                    name: StringLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case TerminalRule: {\n                return {\n                    name: TerminalRule,\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Type: {\n                return {\n                    name: Type,\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case TypeAttribute: {\n                return {\n                    name: TypeAttribute,\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case UnionType: {\n                return {\n                    name: UnionType,\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case Action: {\n                return {\n                    name: Action,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Alternatives: {\n                return {\n                    name: Alternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Assignment: {\n                return {\n                    name: Assignment,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case CharacterRange: {\n                return {\n                    name: CharacterRange,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case CrossReference: {\n                return {\n                    name: CrossReference,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case EndOfFile: {\n                return {\n                    name: EndOfFile,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Group: {\n                return {\n                    name: Group,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Keyword: {\n                return {\n                    name: Keyword,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NegatedToken: {\n                return {\n                    name: NegatedToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case RegexToken: {\n                return {\n                    name: RegexToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case RuleCall: {\n                return {\n                    name: RuleCall,\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case TerminalAlternatives: {\n                return {\n                    name: TerminalAlternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalGroup: {\n                return {\n                    name: TerminalGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalRuleCall: {\n                return {\n                    name: TerminalRuleCall,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case UnorderedGroup: {\n                return {\n                    name: UnorderedGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case UntilToken: {\n                return {\n                    name: UntilToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case Wildcard: {\n                return {\n                    name: Wildcard,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    constructor() {\n        /**\n         * The list of diagnostics stored during the lexing process of a single text.\n         */\n        this.diagnostics = [];\n    }\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flushLexingReport(text) {\n        return { diagnostics: this.popDiagnostics() };\n    }\n    popDiagnostics() {\n        const diagnostics = [...this.diagnostics];\n        this.diagnostics = [];\n        return diagnostics;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n        };\n        if (typeof pattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u') || regex.flags.includes('s')) {\n            // Unicode and dotall regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        const keywordPattern = this.buildKeywordPattern(keyword, caseInsensitive);\n        const tokenType = {\n            name: keyword.value,\n            PATTERN: keywordPattern,\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n        if (typeof keywordPattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        return tokenType;\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn, // endColumn uses the correct index\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n    RangeComparison[RangeComparison[\"Outside\"] = 5] = \"Outside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character <= to.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character >= to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else if (endInside) {\n        return RangeComparison.OverlapFront;\n    }\n    else {\n        return RangeComparison.Outside;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp, isWhitespace } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !isWhitespace(terminalRegex(terminalRule));\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\n/**\n * This function is used at development time (for code generation and the internal type system) to get the type of the AST node produced by the given rule.\n * For data type rules, the name of the rule is returned,\n * e.g. \"INT_value returns number: MY_INT;\" returns \"INT_value\".\n * @param rule the given rule\n * @returns the name of the AST node type of the rule\n */\nexport function getRuleTypeName(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\n/**\n * This function is used at runtime to get the actual type of the values produced by the given rule at runtime.\n * For data type rules, the name of the declared return type of the rule is returned (if any),\n * e.g. \"INT_value returns number: MY_INT;\" returns \"number\".\n * @param rule the given rule\n * @returns the name of the type of the produced values of the rule at runtime\n */\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * A set of all characters that are considered whitespace by the '\\s' RegExp character class.\n * Taken from [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions/Character_classes).\n */\nexport const whitespaceCharacters = ('\\f\\n\\r\\t\\v\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007' +\n    '\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff').split('');\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return whitespaceCharacters.some((ws) => regexp.test(ws));\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false, iterator: other[Symbol.iterator]() }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = state.iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        return new StreamImpl(() => ({ set: new Set(), internalState: this.startFn() }), state => {\n            let result;\n            do {\n                result = this.nextFn(state.internalState);\n                if (!result.done) {\n                    const value = by ? by(result.value) : result.value;\n                    if (!state.set.has(value)) {\n                        state.set.add(value);\n                        return result;\n                    }\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map"],"names":["cc","char","charCodeAt","insertToSet","item","set","Array","isArray","forEach","subItem","push","addFlag","flagObj","flagKey","x","ASSERT_EXISTS","obj","undefined","Error","ASSERT_NEVER_REACH_HERE","isCharacter","digitsCharCodes","i","wordCharCodes","concat","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","constructor","this","idx","input","groupIdx","saveState","restoreState","newState","pattern","consumeChar","value","disjunction","flags","type","loc","begin","end","length","global","ignoreCase","multiLine","unicode","sticky","isRegExpFlag","popChar","substring","alts","alternative","peekChar","terms","isTerm","term","isAssertion","assertion","atom","quantifier","isBacktracking","range","atLeast","atMost","Infinity","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","group","isPatternCharacter","patternCharacter","isQuantifier","complement","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","letter","test","letterCode","toUpperCase","parseHexDigits","escapedChar","classPatternCharacterAtom","nextChar","isClassAtom","from","classAtom","isFromSingleChar","isRangeDash","to","isToSingleChar","classEscape","capturing","groupAst","number","parseInt","howMuch","isAtom","prevState","e","howMany","hexString","hexChar","charCode","BaseRegExpVisitor","visitChildren","node","key","child","hasOwnProperty","visit","subChild","visitPattern","visitFlags","visitDisjunction","visitAlternative","visitStartAnchor","visitEndAnchor","visitWordBoundary","visitNonWordBoundary","visitLookahead","visitNegativeLookahead","visitCharacter","visitSet","visitGroup","visitGroupBackReference","visitQuantifier","GitGraphTokenBuilder","super","GitGraphModule","parser","TokenBuilder","ValueConverter","createGitGraphServices","context","shared","GitGraph","ServiceRegistry","register","RadarTokenBuilder","RadarModule","createRadarServices","Radar","minimalGrammarModule","Grammar","LanguageMetaData","caseInsensitive","fileExtensions","languageId","minimalSharedGrammarModule","AstReflection","ast","createMinimalGrammarServices","grammar","loadGrammarFromJson","json","_a","services","astNode","serializer","JsonSerializer","deserialize","workspace","LangiumDocumentFactory","fromModel","parse","name","__defProp","Object","defineProperty","__name","target","configurable","Statement","Architecture","isArchitecture","reflection","isInstance","Axis","Branch","isBranch","Checkout","CherryPicking","Commit","isCommit","Common","isCommon","Curve","Edge","Entry","isGitGraph","Group","Info","isInfo","Junction","Merge","isMerge","Option","Packet","isPacket","PacketBlock","isPacketBlock","Pie","isPie","PieSection","isPieSection","Service","Direction","MermaidAstReflection","getAllTypes","computeIsSubtype","subtype","supertype","isSubtype","getReferenceType","refInfo","referenceId","container","$type","property","getTypeMetaData","properties","defaultValue","loadedInfoGrammar","InfoGrammar","loadedPacketGrammar","PacketGrammar","loadedPieGrammar","PieGrammar","loadedArchitectureGrammar","ArchitectureGrammar","loadedGitGraphGrammar","GitGraphGrammar","loadedRadarGrammar","RadarGrammar","InfoLanguageMetaData","mode","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","RadarLanguageMetaData","MermaidGeneratedSharedModule","InfoGeneratedModule","PacketGeneratedModule","PieGeneratedModule","ArchitectureGeneratedModule","GitGraphGeneratedModule","RadarGeneratedModule","accessibilityDescrRegex","accessibilityTitleRegex","titleRegex","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","AbstractMermaidValueConverter","runConverter","rule","cstNode","runCommonConverter","runCustomConverter","_cstNode","regex","match","exec","trim","replace","CommonValueConverter","_rule","_input","AbstractMermaidTokenBuilder","keywords","Set","buildKeywordTokens","rules","terminalTokens","options","tokenTypes","tokenType","has","PATTERN","RegExp","toString","CommonTokenBuilder","ArchitectureTokenBuilder","ArchitectureValueConverter","ArchitectureModule","createArchitectureServices","InfoTokenBuilder","InfoModule","createInfoServices","PieTokenBuilder","PieValueConverter","PieModule","createPieServices","PacketTokenBuilder","PacketModule","createPacketServices","parsers","initializers","info","async","createInfoServices2","LangiumParser","packet","createPacketServices2","pie","createPieServices2","architecture","createArchitectureServices2","gitGraph","createGitGraphServices2","radar","createRadarServices2","diagramType","text","initializer","result","lexerErrors","parserErrors","MermaidParseError","map","err","message","join","toFastProperties","toBecomeFast","FakeConstructor","prototype","fakeInstance","fakeAccess","bar","eval","baseSlice","array","start","index","drop","n","guard","toInteger","objectProto","object","source","isArrayLike","keys","call","pickBy","predicate","props","prop","path","regexpTag","baseIsRegExp","isObjectLike","nodeIsRegExp","isRegExp","tokenLabel","tokType","hasTokenLabel","LABEL","isString","AbstractProduction","definition","_definition","accept","visitor","prod","v","referencedRule","Rule","orgText","Alternative","ignoreAmbiguities","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","hasPredicates","Terminal","serializeGrammar","topRules","serializeProduction","convertDefinition","serializedNonTerminal","nonTerminalName","label","separator","terminalType","serializedTerminal","terminalLabel","nodeAny","visitNonTerminal","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","baseSome","collection","func","nativeMax","Math","max","includes","fromIndex","indexOf","arrayEvery","baseEvery","every","isSequenceProd","isOptionalProd","alreadyVisited","isDirectlyOptional","subProd","isBranchingProd","getProductionDslName","RestWalker","walk","prevRest","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","terminal","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","repSepRest","fullRepSepRest","uniq","first","firstForTerminal","firstForSequence","firstForBranching","firstSet","seq","nextSubProdIdx","hasInnerProdsRemaining","currSubProd","isLastInnerProdOptional","allAlternativesFirsts","innerProd","ResyncFollowsWalker","topProd","follows","startWalking","followName","buildBetweenProdsFollowPrefix","fullRest","restProd","t_in_topProd_follows","computeAllProdsFollows","topProductions","reSyncFollows","currRefsFollow","inner","occurenceInParent","buildInProdFollowPrefix","terminalName","IN","FUNC_ERROR_TEXT","negate","TypeError","args","arguments","apply","reject","LARGE_ARRAY_SIZE","baseDifference","values","iteratee","comparator","valuesLength","outer","computed","valuesIndex","difference","isArrayLikeObject","compact","resIndex","head","PRINT_ERROR","msg","console","error","PRINT_WARNING","warn","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","regExpAst","clearRegExpParserCache","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","ensureOptimizations","firstChars","firstCharOptimizedIndices","msgSuffix","addOptimizedIdxToResult","code","rangeCode","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","isWholeOptional","optimizedCharIdx","handleIgnoreCase","String","fromCharCode","upperChar","lowerChar","toLowerCase","findCode","setNode","targetCharCodes","find","codeOrRange","targetCode","CharCodeFinder","found","canMatchCharCode","charCodes","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","disableSticky","enableSticky","analyzeTokenTypes","defaults","useSticky","debug","safeMode","positionTracking","lineTerminatorCharacters","tracer","action","initCharCodeToOptimizedIndexMap","onlyRelevantTypes","currType","Lexer","NA","hasCustom","allTransformedPatterns","currPattern","regExpSource","addStickyFlag","addStartOfInput","isFunction","escapedRegExpString","wrappedRegExp","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","tokenTypeIdx","clazz","groupName","GROUP","SKIPPED","isUndefined","longerAltType","LONGER_ALT","longerAltIdxArr","PUSH_MODE","patternIdxToCanLineTerminator","lineTerminatorCharCodes","getCharCodes","LINE_BREAKS","checkLineBreaksIssues","patternIdxToIsCustom","patternIdxToShort","emptyGroups","patternIdxToConfig","isCustomPattern","isShortPattern","reduce","acc","longerAlt","canLineTerminator","isCustom","short","pop","canBeOptimized","charCodeToPatternIdxToConfig","currTokType","optimizedIdx","addToMapOfArrays","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","optimizedCodes","isEmpty","validatePatterns","validModesNames","errors","missingResult","findMissingPatterns","invalidResult","findInvalidPatterns","valid","validTokenTypes","validateRegExpPattern","findInvalidGroupType","findModesThatDoNotExist","findUnreachablePatterns","withRegExpPatterns","filter","findEndOfInputAnchor","findStartOfInputAnchor","findUnsupportedFlags","findDuplicatePatterns","findEmptyMatchRegExps","tokenTypesWithMissingPattern","LexerDefinitionErrorType","MISSING_PATTERN","tokenTypesWithInvalidPattern","INVALID_PATTERN","end_of_input","EndAnchorFinder","invalidRegex","regexpAst","endAnchorVisitor","EOI_ANCHOR_FOUND","matchesEmptyString","EMPTY_MATCH_PATTERN","start_of_input","StartAnchorFinder","startAnchorVisitor","SOI_ANCHOR_FOUND","invalidFlags","multiline","UNSUPPORTED_FLAGS_FOUND","identicalPatterns","outerType","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","dupPatternSrc","DUPLICATE_PATTERNS_FOUND","invalidTypes","INVALID_GROUP_TYPE_FOUND","validModes","invalidModes","PUSH_MODE_DOES_NOT_EXIST","canBeTested","str","noMetaChar","testIdx","testTokenType","UNREACHABLE_PATTERN","regExpArray","metaChars","performRuntimeChecks","lexerDefinition","trackLines","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","modes","defaultMode","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","currModeValue","currModeName","currIdx","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","currLongerAlt","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","performWarningRuntimeChecks","warnings","hasAnyLineBreak","allTokenTypes","concreteTokenTypes","terminatorCharCodes","currIssue","buildLineBreakIssueMessage","warningDescriptor","issue","NO_LINE_BREAKS_FLAGS","cloneEmptyGroups","clonedResult","groupKeys","currKey","currGroupValue","LineTerminatorOptimizedTester","len","lastIndex","c","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","details","charsOrCodes","numOrString","charCodeToOptimizedIdxMap","timer","Date","getTime","val","total","time","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","token","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypesAndParents","expandCategories","assignTokenDefaultProps","assignCategoriesMapProp","assignCategoriesTokensProp","categoryMatches","clone","categories","searching","CATEGORIES","newCategories","hasShortKeyProperty","hasCategoriesProperty","hasExtendingTokensTypesProperty","hasExtendingTokensTypesMapProperty","singleAssignCategoriesToksMap","nextNode","pathNode","nextCategory","newPath","isTokenType","defaultLexerErrorProvider","buildUnableToPopLexerModeMessage","image","buildUnexpectedCharactersMessage","fullText","startOffset","line","column","charAt","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","lineTerminatorsPattern","errorMessageProvider","traceInitPerf","skipValidations","recoveryEnabled","freeze","config","lexerDefinitionErrors","lexerDefinitionWarning","trackStartLines","trackEndLines","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","indent","traceInitMaxIdent","log","traceMethod","traceInitVal","actualDefinition","hasOnlySingleMode","allModeNames","currModDef","currModName","currAnalyzeResult","allErrMessages","allErrMessagesString","chopInput","identity","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","tokenize","initialMode","tokenizeInternal","j","k","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","droppedChar","orgLength","offset","matchedTokensIndex","guessedNumberOfTokens","floor","matchedTokens","groups","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","startLine","startColumn","newMode","last","modeCanBeOptimized","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","numOfLTsInMatch","foundTerminator","lastLTEndOffset","errorStartOffset","errorLine","errorColumn","foundResyncPoint","tokens","pushMode","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","endLine","endColumn","oldColumn","endOffset","tokenVector","tokenToAdd","tokenName","PARENT","POP_MODE","createToken","createTokenInternal","EOF","tokenMatcher","defaultParserErrorProvider","buildMismatchTokenMessage","expected","actual","previous","ruleName","hasLabel","expectedMsg","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","actualText","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","nextValidSequenceItems","itemMsg","calculatedDescription","buildEarlyExitMessage","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","getExtraProductionArgument","topLevelName","duplicateProd","dslName","extraArgument","hasExplicitIndex","buildNamespaceConflictError","buildAlternationPrefixAmbiguityError","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","pathNames","leftRecursionPath","currRule","leftRecursivePath","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","resolveGrammar","topLevels","errMsgProvider","refResolver","GastRefResolverVisitor","resolveRefs","nameToTopRule","currTopLevel","ref","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","arrayAggregator","setter","accumulator","baseAggregator","createAggregator","dropRight","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","remainingPathWith","nextDef","getAlternativesForProd","alternatives","newDef","currAlt","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","actualToken","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","PROD_TYPE","getProdType","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPaths","prodType","maxLookahead","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildLookaheadFuncForOr","ruleGrammar","dynamicTokensEnabled","laFuncBuilder","lookAheadPaths","areTokenCategoriesNotUsed","buildLookaheadFuncForOptionalProd","lookaheadBuilder","buildAlternativesLookAheadFunc","numOfAlts","areAllOneTokenLookahead","orAlts","predicates","GATE","t","currNumOfPaths","currPredicate","currPathLength","nextToken","LA","singleTokenAlts","choiceToAlt","currExtendingType","buildSingleAlternativeLookaheadFunction","numOfPaths","singleTokensTypes","expectedTokenType","expectedTokenUniqueKey","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","size","pathToHashKeys","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","searchKey","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","finalResult","altsHashes","dict","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","isUnique","currAltResult","containsPath","newPartialPathsAndSuffixes","insideDefVisitor","insideDef","afterDefWalker","afterDef","insideFlat","afterFlat","searchPath","compareOtherPath","otherPath","searchTok","otherTok","matchingTokens","isStrictPrefixOfPath","prefix","other","otherTokType","singleAltPaths","singlePath","validateLookahead","lookaheadValidationErrorMessages","lookaheadStrategy","validate","errorMessage","assign","CUSTOM_LOOKAHEAD_VALIDATION","validateGrammar","duplicateErrors","flatMap","validateDuplicateProductions","termsNamespaceConflictErrors","checkTerminalAndNoneTerminalsNameSpace","tooManyAltsErrors","curRule","validateTooManyAlts","duplicateRulesError","validateRuleDoesNotAlreadyExist","collectorVisitor","OccurrenceValidationCollector","allRuleProductions","allProductions","productionGroups","identifyProductionForDuplicates","duplicates","currGroup","currDuplicates","firstProd","defError","DUPLICATE_PRODUCTIONS","param","parameter","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","allRules","className","occurrences","DUPLICATE_RULE_NAME","validateRuleIsOverridden","definedRulesNames","INVALID_RULE_OVERRIDE","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","foundLeftRecursion","LEFT_RECURSION","validNextSteps","errorsFromNextSteps","currRefRule","currSubDef","isFirstOptional","hasMore","rest","OrCollector","alternations","validateEmptyOrAlternative","orCollector","ors","currOr","exceptLast","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","validateAmbiguousAlternationAlternatives","globalMaxLookahead","currOccurrence","actualMaxLookahead","altsAmbiguityErrors","checkAlternativesAmbiguities","altsPrefixAmbiguityErrors","checkPrefixAlternativesAmbiguities","RepetitionCollector","TOO_MANY_ALTS","validateSomeNonEmptyLookaheadPath","topLevelRules","currTopRule","currProd","paths","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currErrors","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","pathsAndIndices","currPathsAndIdx","currPathAndIdx","alternativeGast","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","currPathPrefixErrors","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","tokenNames","currToken","currRuleName","CONFLICT_TOKENS_RULES_NAMESPACE","actualOptions","topRulesTable","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","setPrototypeOf","captureStackTrace","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","Recoverable","initRecoverable","firstAfterRepMap","resyncFollows","DEFAULT_PARSER_CONFIG","attemptInRepetitionRecovery","getTokenToInsert","tokToInsert","NaN","isInsertedInRecovery","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","tryInRepetitionRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","getCurrRuleFullName","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","shouldInRepetitionRecoveryBeTried","expectTokAfterLastMatch","nextTokIdx","notStuck","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","isMisMatchedTokInFollows","possibleFollowsTokType","isNextTokenWhatIsExpected","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","currentRuleReSyncSet","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","canMatch","RULE_STACK","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","prodFunc","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","pathRuleStack","getHumanReadableRuleStack","pathOccurrenceStack","currShortName","getKeyForAutomaticLookahead","firstAfterRepInfo","getGAstProductions","walker","BITS_FOR_METHOD_TYPE","BITS_FOR_OCCURRENCE_IDX","BITS_FOR_RULE_IDX","BITS_FOR_ALT_IDX","OR_IDX","OPTION_IDX","MANY_IDX","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","ruleIdx","BITS_START_FOR_ALT_IDX","LLkLookaheadStrategy","leftRecursionErrors","emptyAltErrors","validateEmptyOrAlternatives","ambiguousAltsErrors","emptyRepetitionErrors","allErrors","buildLookaheadForAlternation","buildLookaheadForOptional","LooksAhead","initLooksAhead","lookAheadFuncsCache","Map","preComputeLookaheadFunctions","repetitionMandatory","repetitionMandatoryWithSeparator","repetitionWithSeparator","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","get","DslMethodsCollectorVisitor","dslMethods","reset","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","isNaN","setNodeLocationFull","addTerminalToCst","tokenTypeName","children","addNoneTerminalToCst","ruleResult","NAME","defineNameProp","nameValue","enumerable","writable","defaultVisit","ctx","childrenNames","childrenNamesLength","currChildName","currChildArray","currChildArrayLength","currChild","createBaseSemanticVisitorConstructor","ruleNames","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","errorMessages","currDefError","_RULE_NAMES","createBaseVisitorConstructorWithDefaults","baseConstructor","withDefaultsProto","create","CstVisitorDefinitionError","visitorInstance","missingErrors","validateMissingCstMethods","missingRuleNames","MISSING_METHOD","methodName","TreeBuilder","initTreeBuilder","CST_STACK","outputCst","nodeLocationTracking","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","cstPostRule","setNodeLocationFromToken","setNodeLocationFromNode","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","location","fullRuleName","ruleCstNode","prevToken","consumedToken","rootCst","ruleCstResult","preCstNode","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","gastProductionsCache","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","LexerAdapter","initLexerAdapter","tokVector","tokVectorLength","newInput","selfAnalysisDone","END_OF_FILE","soughtIdx","resetLexerState","moveToTerminatedState","getLexerPosition","RecognizerApi","ACTION","impl","consume","consumeInternal","ruleToCall","subruleInternal","actionORMethodDef","optionInternal","altsOrOpts","orInternal","manyInternal","atLeastOneInternal","CONSUME","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","manySepFirstInternal","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","atLeastOneSepFirstInternal","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","RULE","implementation","DEFAULT_RULE_CONFIG","definitionErrors","ruleImplementation","defineRule","OVERRIDE_RULE","ruleErrors","BACKTRACK","isBackTrackingStack","orgState","saveRecogState","reloadRecogState","getSerializedGastProductions","RecognizerEngine","initRecognizerEngine","tokenVocabulary","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","tokensMap","uniqueTokens","isObject","noTokenCategoriesUsed","tokenConstructor","resyncEnabled","recoveryValueFunc","shortName","invokeRuleWithTry","ruleInvocationStateUpdate","cst","invokeRuleCatch","ruleFinallyStateUpdate","invokeRuleWithTryCst","wrappedGrammarRule","originalGrammarAction","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternalLogic","DEF","orgLookaheadFunction","laKey","atLeastOneInternalLogic","doSingleRepetition","raiseEarlyExitException","ERR_MSG","atLeastOneSepFirstInternalLogic","SEP","firstIterationLookaheadFunc","separatorLookAheadFunc","repetitionSepSecondInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternalLogic","firstIterationLaFunc","nextTerminalAfterWalker","beforeIteration","afterIteration","altIdxToTake","chosenAlternative","ALT","raiseNoAltException","isAtEndOfInput","firstRedundantTok","ARGS","subruleInternalError","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","savedErrors","savedRuleStack","lexerState","fullName","ErrorHandler","initErrorHandler","_errors","ruleOccurrenceStack","newErrors","userDefinedErrMsg","lookAheadPathsPerAlternative","insideProdPaths","actualTokens","errMsgTypes","ContentAssist","initContentAssist","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","gastProductions","topProduction","nextPossibleTokenTypes","RECORDING_NULL_OBJECT","description","HANDLE_SEPARATOR","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","GastRecorder","initGastRecorder","recordingProdStack","RECORDING_PHASE","enableRecording","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","disableRecording","that","topLevelRuleRecord","newTopLevelRule","originalError","KNOWN_RECORDER_ERROR","mutabilityError","recordProd","recordOrProd","assertMethodIdxIsValid","getIdxSuffix","JSON","stringify","prevProd","newNoneTerminal","prodConstructor","mainProdArg","handleSep","grammarAction","newProd","MAX_LOOKAHEAD","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","PerformanceTracer","initPerformanceTracer","userTraceInitPerf","traceIsNumber","applyMixins","derivedCtor","baseCtors","baseCtor","baseProto","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","EMPTY_ALT","Parser","performSelfAnalysis","parserInstance","defErrorsMsgs","wrappedRule","recordedRuleGast","resolverErrors","validationErrors","lookaheadValidationErrors","allFollows","_b","initialize","DEFER_DEFINITION_ERRORS_HANDLING","CstParser","configClone","EmbeddedActionsParser","productions","generator","CstNodeDefinitionGenerator","rawElements","visitEach","grouped","groupBy","el","propertyName","allNullable","some","canBeNull","propertyType","g","optional","visitEachAndOverrideWith","getType","override","flatten","production","NonTerminal","kind","defaultOptions","includeVisitorInterface","visitorInterfaceName","generateCstDts","effectiveOptions","model","buildModel","genDts","clearCache","createGrammarConfig","multilineCommentRules","nameRegexp","buildATNKey","ATN_INVALID_TYPE","ATN_BASIC","ATN_RULE_START","ATN_PLUS_BLOCK_START","ATN_STAR_BLOCK_START","ATN_TOKEN_START","ATN_RULE_STOP","ATN_BLOCK_END","ATN_STAR_LOOP_BACK","ATN_STAR_LOOP_ENTRY","ATN_PLUS_LOOP_BACK","ATN_LOOP_END","AbstractTransition","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","createATN","atn","decisionMap","decisionStates","ruleToStartState","ruleToStopState","states","createRuleStartAndStopATNStates","ruleLength","ruleBlock","block","buildRuleHandle","stop","tokenRef","ruleRef","repetitionSep","repetitionMandatorySep","starState","defineDecisionState","handle","makeAlts","star","sep","plusState","plus","handles","makeBlock","blkStart","left","blkEnd","right","loop","loopback","epsilon","entry","loopEnd","state","decision","altsLength","transition","transitions","isRuleTransition","ruleTransition","next","removeState","addTransition","currentRule","nonTerminal","a","b","partial","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","splice","DFA_ERROR","ATNConfigSet","configs","finalize","add","getATNConfigKey","elements","stack","uniqBy","createDFACache","startState","predicateSet","existing","atnStartState","PredicateSet","is","EMPTY_PREDICATES","LLStarLookaheadStrategy","logging","dfas","initATNSimulator","decisionState","decisionIndex","isLL1Sequence","prediction","gate","adaptivePredict","sequences","allowEmpty","fullSet","altSet","indices","decisionLength","decisionToDFA","dfaCaches","dfa","closure","computeStartState","addDFAState","newDFAState","performLookahead","s0","previousD","d","getExistingTargetState","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","lookahead","reach","computeReachSet","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","hasConflictTerminatingPrediction","min","reportLookaheadAmbiguity","atnState","buildAmbiguityError","current","nextTransitions","nextTokenTypes","possibleTokenTypes","tokenPath","edges","intermediate","skippedStopStates","transitionLength","getReachableTarget","hasConfigInRuleStopState","mapKey","numberOfTransitions","p","atnStack","followConfig","getEpsilonTarget","allConfigsInRuleStopStates","altSets","getConflictingAltSets","heuristic","hasConflictingAltSet","hasStateAssociatedWithOneAlt","configToAlts","DocumentUri","URI","integer","MIN_VALUE","MAX_VALUE","uinteger","Position","character","Number","candidate","Is","objectLiteral","Range","one","two","three","four","Location","uri","string","LocationLink","targetUri","targetRange","targetSelectionRange","originSelectionRange","Color","red","green","blue","alpha","numberRange","ColorInformation","color","ColorPresentation","textEdit","additionalTextEdits","TextEdit","typedArray","FoldingRangeKind","Comment","Imports","Region","FoldingRange","startCharacter","endCharacter","collapsedText","defined","DiagnosticRelatedInformation","DiagnosticSeverity","Warning","Information","Hint","DiagnosticTag","Unnecessary","Deprecated","CodeDescription","href","Diagnostic","severity","relatedInformation","codeDescription","Command","title","command","newText","insert","position","del","ChangeAnnotation","needsConfirmation","boolean","ChangeAnnotationIdentifier","AnnotatedTextEdit","annotation","annotationId","TextDocumentEdit","textDocument","edits","OptionalVersionedTextDocumentIdentifier","CreateFile","overwrite","ignoreIfExists","RenameFile","oldUri","newUri","DeleteFile","recursive","ignoreIfNotExists","WorkspaceEdit","changes","documentChanges","change","TextEditChangeImpl","changeAnnotations","edit","id","assertChangeAnnotations","manage","all","clear","ChangeAnnotations","annotations","_annotations","_counter","_size","idOrAnnotation","nextId","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","_changeAnnotations","textEditChange","initDocumentChanges","getTextEditChange","version","textDocumentEdit","initChanges","createFile","optionsOrAnnotation","operation","renameFile","deleteFile","TextDocumentIdentifier","VersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","PlainText","Markdown","MarkupContent","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","asIs","adjustIndentation","CompletionItemLabelDetails","detail","CompletionItem","CompletionList","items","isIncomplete","MarkedString","fromPlainText","plainText","language","Hover","contents","ParameterInformation","documentation","SignatureInformation","parameters","DocumentHighlightKind","Read","Write","DocumentHighlight","SymbolKind","Namespace","Package","Boolean","Key","Null","SymbolTag","SymbolInformation","containerName","WorkspaceSymbol","DocumentSymbol","selectionRange","deprecated","tags","CodeActionKind","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","CodeActionTriggerKind","Invoked","Automatic","CodeActionContext","diagnostics","only","triggerKind","CodeAction","kindOrCommandOrEdit","checkKind","isPreferred","CodeLens","data","FormattingOptions","tabSize","insertSpaces","DocumentLink","SelectionRange","parent","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","resultId","InlineValueText","InlineValueVariableLookup","variableName","caseSensitiveLookup","InlineValueEvaluatableExpression","expression","InlineValueContext","frameId","stoppedLocation","InlayHintKind","Type","Parameter","InlayHintLabelPart","tooltip","InlayHint","textEdits","paddingLeft","paddingRight","StringValue","createSnippet","InlineCompletionItem","insertText","filterText","InlineCompletionList","InlineCompletionTriggerKind","SelectedCompletionInfo","InlineCompletionContext","selectedCompletionInfo","WorkspaceFolder","EOL","TextDocument","content","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","diff","lastModifiedOffset","compare","slice","leftIdx","rightIdx","ret","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","lineOffset","nextLineOffset","check","CstNodeBuilder","nodeStack","rootNode","buildRootNode","RootCstNodeImpl","root","buildCompositeNode","feature","compositeNode","CompositeCstNodeImpl","grammarSource","buildLeafNode","leafNode","LeafCstNodeImpl","removeNode","addHiddenNodes","nodes","added","unshift","construct","$cstNode","AbstractCstNode","hidden","_astNode","element","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","addParents","count","_text","DatatypeSymbol","Symbol","isDataTypeNode","ruleSuffix","withRuleSuffix","endsWith","AbstractLangiumParser","_unorderedGroups","lexer","wrapper","ChevrotainWrapper","ParserConfig","ParserErrorMessageProvider","choices","wrapOr","callback","wrapOption","wrapMany","wrapAtLeastOne","getRule","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","wrapSelfAnalysis","nodeBuilder","assignmentMap","linker","references","Linker","converter","astReflection","computeRuleType","ruleMethod","DEFINE_RULE","startImplementation","bind","mainRule","fragment","explicit","lexerResult","lexerReport","report","createNode","extractHiddenTokens","hiddenTokens","wrapConsume","isValidToken","assignment","isCrossRef","getAssignment","convertedValue","convert","operator","subruleResult","wrapSubrule","performSubruleAssignment","assignWithoutOverride","newItem","buildReference","existingValue","entries","newValue","targetCstNode","AbstractParserErrorMessageProvider","LangiumParserErrorMessageProvider","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","before","after","lastIndexOf","defaultConfig","useDefaultLookahead","createParser","parserContext","buildRules","reachable","parserRules","stream","buildElement","ignoreGuard","method","buildKeyword","buildAction","buildCrossReference","buildRuleCall","buildAlternatives","buildUnorderedGroup","buildGroup","wrap","getGuardCondition","cardinality","actionType","ruleCall","buildRuleCallPredicate","getToken","$refText","namedArgs","buildPredicate","ruleArgs","ruleTarget","condition","true","methods","predicatedMethod","orIdx","idFunc","lParser","stackId","groupState","trackedAlternatives","allow","wrapped","delete","guardCondition","crossRef","assignTerminal","terminalRule","keyword","getRuleName","$container","createCompletionParser","createLangiumParser","prepareLangiumParser","delayNextTick","Promise","resolve","setImmediate","setTimeout","lastTick","globalInterruptionPeriod","startCancelableOperation","performance","now","CancellationTokenSource","setInterruptionPeriod","period","isOperationCancelled","interruptAndCheck","CancellationToken","None","isCancellationRequested","promise","arg","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","ensureBeforeEOL","isEOL","rangeLength","getWellformedEdit","spans","substr","isAtLineStart","textOffset","DocumentState","DefaultLangiumDocumentFactory","serviceRegistry","textDocuments","TextDocuments","fileSystemProvider","FileSystemProvider","fromUri","cancellationToken","readFile","createAsync","fromTextDocument","fromString","$model","parseResult","createLangiumDocument","cancelToken","parseAsync","Parsed","textDocumentGetter","createTextDocumentGetter","$document","oldText","getServices","AsyncParser","textDoc","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","addDocument","uriString","getDocument","getOrCreateDocument","createDocument","then","hasDocument","invalidateDocument","langiumDoc","unlink","Changed","precomputedScopes","deleteDocument","ref_resolving","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","reference","_ref","getCandidate","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","scope","getScope","getElement","refNode","refText","$refNode","refData","getLinkedNode","ComputedScopes","descr","getAstNodePath","$nodeDescription","nodeDescription","doc","getAstNode","targetDescription","referenceType","isNamed","DefaultNameProvider","getName","getNameNode","UriUtils","basename","dirname","extname","joinPath","resolvePath","equals","relative","fromPath","toPath","fromParts","split","toParts","backPart","repeat","toPart","normalize","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","nodeElem","nameNode","findDeclarationNode","targetNode","findReferences","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","sourceUri","sourcePath","segment","local","MultiMap","sum","addAll","callbackfn","iterator","flat","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","parentNode","exports","exportNode","createDescription","computeLocalScopes","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","EMPTY_SCOPE","DisposableCache","toDispose","isDisposed","onDispose","disposable","dispose","throwIfDisposed","SimpleCache","cache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","DocumentCache","sharedServices","DocumentBuilder","onDocumentPhase","onUpdate","_changed","deleted","changed","allUris","WorkspaceCache","onBuildPhase","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","s","nonNullable","_context","allElements","isAstNodeWithComment","$comment","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","CommentProvider","serialize","serializeOptions","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserializeOptions","linkNode","sourceText","textRegions","comments","uriConverter","_c","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","createDocumentSegment","textRegion","assignments","startsWith","propertyAssignments","containerProperty","containerIndex","reviveReference","mutable","$containerProperty","$containerIndex","getRefNode","fragmentIndex","DefaultServiceRegistry","fileExtensionMap","languageIdMap","ext","singleton","hasServices","diagnosticData","ValidationCategory","ValidationRegistry","entriesBefore","entriesAfter","checksRecord","thisObj","category","callbacks","wrapValidationException","addEntry","handleException","functionality","messageContext","messageDetails","getAllSubTypes","getChecks","checks","registerBeforeDocument","checkBefore","wrapPreparationException","registerAfterDocument","checkAfter","checksBefore","checksAfter","DefaultDocumentValidator","validationRegistry","validation","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","DocumentValidator","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","_options","lexerDiagnostics","lexerDiagnostic","diagnostic","toDiagnosticSeverity","toDiagnosticData","getSource","parserError","linkingError","containerType","toDiagnostic","validationItems","acceptor","validateAstBefore","validateAstNodes","validateAstAfter","getDiagnosticRange","LexingWarning","LexingInfo","LexingHint","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","nodePath","segments","previousValue","currentValue","propertyIndex","arrayIndex","DefaultConfigurationProvider","_ready","settings","workspaceConfig","onConfigurationSectionUpdateEmitter","Emitter","ready","params","capabilities","configuration","initialized","languages","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","fire","getConfiguration","sectionName","onConfigurationSectionUpdate","Disposable","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","documentPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","Validated","IndexedReferences","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","deletedUri","remove","changedUri","invalidated","newDocument","allChangedUris","toSet","shouldRelink","rebuildDocuments","sortDocuments","Linked","toArray","listener","hasTextDocument","changedUris","isAffected","prepareBuild","runCancelable","IndexedContent","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","targetState","filtered","notifyDocumentPhase","targetStateDocs","notifyBuildPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","onCancellationRequested","listeners","listenersCopy","getBuildOptions","validator","validationSetting","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","allFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","workspaceFolders","folders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","readDirectory","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexerErrorMessageProvider","DEFAULT_TOKENIZE_OPTIONS","DefaultLexer","LexerErrorMessageProvider","tokenBuilder","buildTokens","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","chevrotainResult","flushLexingReport","isIMultiModeLexerDefinition","res","isTokenTypeArray","parseJSDoc","opts","lines","getLines","normalizedOptions","normalizeOptions","parseJSDocComment","isJSDoc","firstRegex","lastRegex","tagRegex","inlineTagRegex","currentLine","currentCharacter","lastCharacter","whitespaceEnd","skipWhitespace","tagMatch","fullMatch","inlineTagMatches","matchAll","buildInlineTokens","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","startPosition","JSDocCommentImpl","parseJSDocElement","parseJSDocTag","parseJSDocText","appendEmptyLine","JSDocLineImpl","inlines","firstToken","lastToken","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOption","escaped","getTag","getAllTags","getTags","fillNewlines","toMarkdown","renderTag","toMarkdownDefault","rendered","renderInlineTag","marker","tag","display","displayStart","renderedLink","renderLink","renderLinkDefault","JSDocDocumentationProvider","getDocumentation","parsedJSDoc","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","with","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","DefaultAsyncParser","syncParser","_cancelToken","AbstractThreadedAsyncParser","threadCount","terminationDelay","workerPool","queue","hydrator","Hydrator","initializeWorkers","worker","createWorker","onReady","deferred","shift","lock","acquireParserWorker","Deferred","timeout","cancellation","terminateWorker","hydrated","hydrate","catch","finally","clearTimeout","terminate","OperationCancelled","ParserWorker","onReadyEmitter","sendMessage","onMessage","onError","_parsing","_terminate","unlock","DefaultWorkspaceLock","previousTokenSource","writeQueue","readQueue","done","cancelWrite","tokenSource","enqueue","read","performNextOperation","cancel","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateLexerReport","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","createHydrationContext","hydrateCstNode","hydrateAstNode","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","getTokenType","createGrammarElementIdMap","createDefaultCoreModule","DocumentationProvider","CompletionParser","References","createDefaultSharedCoreModule","WorkspaceManager","ConfigurationProvider","merge","m1","m2","_merge","inject","module1","module2","module3","module4","module5","module6","module7","module8","module9","module","_inject","isProxy","eagerLoad","injector","proxy","Proxy","deleteProperty","_resolve","_","ownKeys","__requested__","cause","value2","value1","LangiumGrammarTerminals","ID","STRING","NUMBER","RegexLiteral","WS","ML_COMMENT","SL_COMMENT","AbstractRule","isAbstractRule","AbstractType","isAbstractType","Condition","isCondition","isFeatureName","isPrimitiveType","TypeDefinition","isTypeDefinition","ValueLiteral","isValueLiteral","AbstractElement","isAbstractElement","ArrayLiteral","isArrayLiteral","ArrayType","isArrayType","BooleanLiteral","isBooleanLiteral","Conjunction","isConjunction","Disjunction","isDisjunction","isGrammar","GrammarImport","isGrammarImport","InferredType","isInferredType","isInterface","NamedArgument","isNamedArgument","Negation","isNegation","NumberLiteral","isNumberLiteral","isParameter","ParameterReference","isParameterReference","ParserRule","isParserRule","ReferenceType","isReferenceType","ReturnType","isReturnType","SimpleType","isSimpleType","StringLiteral","isStringLiteral","TerminalRule","isTerminalRule","isType","TypeAttribute","isTypeAttribute","UnionType","isUnionType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","isCharacterRange","CrossReference","isCrossReference","EndOfFile","isEndOfFile","isGroup","isKeyword","NegatedToken","isNegatedToken","RegexToken","isRegexToken","RuleCall","isRuleCall","TerminalAlternatives","isTerminalAlternatives","TerminalGroup","isTerminalGroup","TerminalRuleCall","isTerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","isUntilToken","Wildcard","isWildcard","LangiumGrammarAstReflection","DefaultTokenBuilder","reachableRules","buildTerminalTokens","terminalToken","popDiagnostics","buildTerminalToken","requiresCustomPattern","regexPatternFunction","stickyRegex","execResult","distinct","sort","buildKeywordToken","keywordPattern","buildKeywordPattern","findLongerAlt","longerAlts","DefaultValueConverter","convertInt","convertString","convertID","convertNumber","convertBoolean","convertBigint","convertDate","c1","convertEscapeCharacter","BigInt","isAstNode","isReference","isAstNodeDescription","isLinkingError","AbstractAstReflection","subtypes","allSubtypes","nested","allTypes","types","possibleSubType","isCompositeCstNode","isLeafCstNode","isRootCstNode","linkContentToContainer","getContainerOfType","typePredicate","hasContainerOfType","findRootNode","streamContents","keyIndex","isAstNodeInRange","streamAllContents","streamAst","includeRoot","nodeRange","streamReferences","findLocalReferences","lookup","assignMandatoryProperties","typeMetaData","genericNode","copyDefaultValue","copyAstNode","copy","copiedArray","streamCst","flattenCst","isChildNode","tokenToRange","toDocumentSegment","RangeComparison","compareRange","Before","After","startInside","endInside","Inside","OverlapBack","OverlapFront","Outside","inRange","comparison","DefaultNameRegexp","findDeclarationNodeAtOffset","localOffset","textAtOffset","findLeafNodeAtOffset","findCommentNode","commentNames","getPreviousNode","isCommentNode","endIndex","findIndex","searchResult","binarySearch","findLeafNodeBeforeOffset","closest","closestNode","middle","middleNode","getNextNode","getStartlineNode","selfIndex","getInteriorNodes","commonParent","getCommonParent","aParents","getParentChain","bParents","aParent","bParent","chain","ErrorWithLocation","assertUnreachable","getEntryRule","getHiddenRules","getAllReachableRules","allTerminals","entryRule","topMostRules","ruleDfs","visitedSet","refRule","getCrossReferenceTerminal","nameAssigment","findNameAssignment","isCommentTerminal","terminalRegex","findNodesForProperty","findNodesForPropertyInternal","findNodeForProperty","nodeFeature","findNodesForKeyword","findNodesForKeywordInternal","findNodeForKeyword","treeIterator","keywordNodes","childNode","prune","findAssignment","startNode","findNameAssignmentInternal","go","refType","childAssignment","parentAssignment","typeRef","getActionAtElement","isOptionalCardinality","isArrayCardinality","isArrayOperator","isDataTypeRule","isDataTypeRuleInternal","visited","isDataType","isDataTypeInternal","primitiveType","stringType","getExplicitRuleType","inferredType","dataType","returnType","getTypeName","getActionType","getRuleTypeName","getRuleType","u","abstractElementToRegex","flagText","WILDCARD","terminalAlternativesToRegex","terminalGroupToRegex","characterRangeToRegex","withCardinality","negateTokenToRegex","untilTokenToRegex","lastSlash","regexFlags","until","keywordToRegex","NEWLINE_REGEXP","regexpParser","TerminalRegExpVisitor","isStarting","endRegexpStack","endRegex","startRegexp","escapeRegExp","getTerminalParts","regexp","parts","isMultilineComment","whitespaceCharacters","isWhitespace","ws","getCaseInsensitivePattern","partialMatches","partialRegExp","re","process","tmp","appendRaw","nbChars","appendOptional","StreamImpl","startFn","nextFn","toMap","keyFn","valueFn","entryStream","firstDone","DONE_RESULT","addSeparator","searchElement","initialValue","reduceRight","recursiveReduce","mapped","isIterable","depth","tail","skipCount","limit","maxSize","by","internalState","exclude","otherKeySet","ownKey","EMPTY_STREAM","collections","collIndex","arrIndex","TreeStreamImpl","iterators","pruned","Reduction","product","EmptyFileSystemProvider","EmptyFileSystem","baseExtremum","baseLt","baseMap","baseSet","customizer","objValue","basePickBy","CLONE_SYMBOLS_FLAG","sources","propsIndex","propsLength","createFind","findIndexFunc","iterable","baseHas","stringTag","reWhitespace","trimmedEndIndex","reTrimStart","baseTrim","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","isSymbol","valueOf","isBinary","INFINITY","MAX_INTEGER","toFinite","sign","remainder","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","run","nextTick","Item","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","ral_1","events_1","Cancelled","shortcutEvent","default","MutableToken","_isCancelled","_emitter","_token","_disposable","CallbackList","bucket","_callbacks","_contexts","foundCallbackWithDifferentContext","invoke","contexts","_event","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","stringArray","elem","_ral","RAL","install","ral","LIB","r","o","h","isAbsolute","f","l","_makeLong","format","base","delimiter","win32","posix","toStringTag","Utils","P","platform","navigator","userAgent","scheme","authority","query","isUri","fsPath","m","C","file","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","decodeURIComponent","A","w"],"sourceRoot":""}