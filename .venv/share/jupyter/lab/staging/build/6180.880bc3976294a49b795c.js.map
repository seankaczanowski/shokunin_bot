{"version":3,"file":"6180.880bc3976294a49b795c.js?v=880bc3976294a49b795c","mappings":"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","sources":["webpack://@jupyterlab/application-top/./build/index.out.js"],"sourcesContent":["// This file is auto-generated from the corresponding file in /dev_mode\n/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport { PageConfig } from '@jupyterlab/coreutils';\nimport { PluginRegistry } from '@lumino/coreutils';\n\nimport './style.js';\n\nasync function createModule(scope, module) {\n  try {\n    const factory = await window._JUPYTERLAB[scope].get(module);\n    const instance = factory();\n    instance.__scope__ = scope;\n    return instance;\n  } catch(e) {\n    console.warn(`Failed to create module: package: ${scope}; module: ${module}`);\n    throw e;\n  }\n}\n\n/**\n * The main entry point for the application.\n */\nexport async function main() {\n\n   // Handle a browser test.\n   // Set up error handling prior to loading extensions.\n   var browserTest = PageConfig.getOption('browserTest');\n   if (browserTest.toLowerCase() === 'true') {\n     var el = document.createElement('div');\n     el.id = 'browserTest';\n     document.body.appendChild(el);\n     el.textContent = '[]';\n     el.style.display = 'none';\n     var errors = [];\n     var reported = false;\n     var timeout = 25000;\n\n     var report = function() {\n       if (reported) {\n         return;\n       }\n       reported = true;\n       el.className = 'completed';\n     }\n\n     window.onerror = function(msg, url, line, col, error) {\n       errors.push(String(error));\n       el.textContent = JSON.stringify(errors)\n     };\n     console.error = function(message) {\n       errors.push(String(message));\n       el.textContent = JSON.stringify(errors)\n     };\n  }\n\n  var pluginRegistry = new PluginRegistry();\n  var JupyterLab = require('@jupyterlab/application').JupyterLab;\n  var disabled = [];\n  var deferred = [];\n  var ignorePlugins = [];\n  var register = [];\n\n\n  const federatedExtensionPromises = [];\n  const federatedMimeExtensionPromises = [];\n  const federatedStylePromises = [];\n\n  // Start initializing the federated extensions\n  const extensions = JSON.parse(\n    PageConfig.getOption('federated_extensions')\n  );\n\n  // Keep a mapping of renamed plugin ids to ensure user configs don't break.\n  // The mapping is defined in the main index.js for JupyterLab, since it may not be relevant for\n  // other lab-based applications (they may not use the same set of plugins).\n  const renamedPluginIds = {\n    '@jupyterlab/application:mimedocument': '@jupyterlab/application-extension:mimedocument',\n    '@jupyterlab/help-extension:licenses': '@jupyterlab/apputils-extension:licenses-plugin',\n    '@jupyterlab/lsp:ILSPCodeExtractorsManager': '@jupyterlab/lsp-extension:code-extractor-manager',\n    '@jupyterlab/translation:translator': '@jupyterlab/translation-extension:translator',\n    '@jupyterlab/workspaces:commands': '@jupyterlab/workspaces-extension:commands'\n  };\n\n  // Transparently handle the case of renamed plugins, so current configs don't break.\n  // And emit a warning in the dev tools console to notify about the rename so\n  // users can update their config.\n  const disabledExtensions = PageConfig.Extension.disabled.map(id => {\n    if (renamedPluginIds[id]) {\n      console.warn(`Plugin ${id} has been renamed to ${renamedPluginIds[id]}. Consider updating your config to use the new name.`);\n      return renamedPluginIds[id];\n    }\n    return id;\n  });\n\n  const deferredExtensions = PageConfig.Extension.deferred.map(id => {\n    if (renamedPluginIds[id]) {\n      console.warn(`Plugin id ${id} has been renamed to ${renamedPluginIds[id]}. Consider updating your config to use the new name.`);\n      return renamedPluginIds[id];\n    }\n    return id;\n  });\n\n  // This is basically a copy of PageConfig.Extension.isDisabled to\n  // take into account the case of renamed plugins.\n  const isPluginDisabled = (id) => {\n    const separatorIndex = id.indexOf(':');\n    let extName = '';\n    if (separatorIndex !== -1) {\n      extName = id.slice(0, separatorIndex);\n    }\n    return disabledExtensions.some(val => val === id || (extName && val === extName));\n  }\n\n  // This is basically a copy of PageConfig.Extension.isDeferred to\n  // take into account the case of renamed plugins.\n  const isPluginDeferred = (id) => {\n    const separatorIndex = id.indexOf(':');\n    let extName = '';\n    if (separatorIndex !== -1) {\n      extName = id.slice(0, separatorIndex);\n    }\n    return deferredExtensions.some(val => val === id || (extName && val === extName));\n  }\n\n  const queuedFederated = [];\n\n  extensions.forEach(data => {\n    if (data.extension) {\n      queuedFederated.push(data.name);\n      federatedExtensionPromises.push(createModule(data.name, data.extension));\n    }\n    if (data.mimeExtension) {\n      queuedFederated.push(data.name);\n      federatedMimeExtensionPromises.push(createModule(data.name, data.mimeExtension));\n    }\n\n    if (data.style && !isPluginDisabled(data.name)) {\n      federatedStylePromises.push(createModule(data.name, data.style));\n    }\n  });\n\n  const allPlugins = [];\n\n  /**\n   * Get the plugins from an extension.\n   */\n  function getPlugins(extension) {\n    // Handle commonjs or es2015 modules\n    let exports;\n    if (extension.hasOwnProperty('__esModule')) {\n      exports = extension.default;\n    } else {\n      // CommonJS exports.\n      exports = extension;\n    }\n\n    return Array.isArray(exports) ? exports : [exports];\n  }\n\n  /**\n   * Iterate over active plugins in an extension.\n   *\n   * #### Notes\n   * This also populates the disabled, deferred, and ignored arrays.\n   */\n  function* activePlugins(extension) {\n    const plugins = getPlugins(extension);\n    for (let plugin of plugins) {\n      const isDisabled = isPluginDisabled(plugin.id);\n      allPlugins.push({\n        id: plugin.id,\n        description: plugin.description,\n        requires: plugin.requires ?? [],\n        optional: plugin.optional ?? [],\n        provides: plugin.provides ?? null,\n        autoStart: plugin.autoStart,\n        enabled: !isDisabled,\n        extension: extension.__scope__\n      });\n      if (isDisabled) {\n        disabled.push(plugin.id);\n        continue;\n      }\n      if (isPluginDeferred(plugin.id)) {\n        deferred.push(plugin.id);\n        ignorePlugins.push(plugin.id);\n      }\n      yield plugin;\n    }\n  }\n\n  // Handle the registered mime extensions.\n  const mimeExtensions = [];\n  if (!queuedFederated.includes('@jupyterlab/javascript-extension')) {\n    try {\n      let ext = require('@jupyterlab/javascript-extension');\n      ext.__scope__ = '@jupyterlab/javascript-extension';\n      for (let plugin of activePlugins(ext)) {\n        mimeExtensions.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/json-extension')) {\n    try {\n      let ext = require('@jupyterlab/json-extension');\n      ext.__scope__ = '@jupyterlab/json-extension';\n      for (let plugin of activePlugins(ext)) {\n        mimeExtensions.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/mermaid-extension')) {\n    try {\n      let ext = require('@jupyterlab/mermaid-extension/lib/mime.js');\n      ext.__scope__ = '@jupyterlab/mermaid-extension';\n      for (let plugin of activePlugins(ext)) {\n        mimeExtensions.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/pdf-extension')) {\n    try {\n      let ext = require('@jupyterlab/pdf-extension');\n      ext.__scope__ = '@jupyterlab/pdf-extension';\n      for (let plugin of activePlugins(ext)) {\n        mimeExtensions.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/vega5-extension')) {\n    try {\n      let ext = require('@jupyterlab/vega5-extension');\n      ext.__scope__ = '@jupyterlab/vega5-extension';\n      for (let plugin of activePlugins(ext)) {\n        mimeExtensions.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  // Add the federated mime extensions.\n  const federatedMimeExtensions = await Promise.allSettled(federatedMimeExtensionPromises);\n  federatedMimeExtensions.forEach(p => {\n    if (p.status === \"fulfilled\") {\n      for (let plugin of activePlugins(p.value)) {\n        mimeExtensions.push(plugin);\n      }\n    } else {\n      console.error(p.reason);\n    }\n  });\n\n  // Handled the registered standard extensions.\n  if (!queuedFederated.includes('@jupyterlab/application-extension')) {\n    try {\n      let ext = require('@jupyterlab/application-extension');\n      ext.__scope__ = '@jupyterlab/application-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/apputils-extension')) {\n    try {\n      let ext = require('@jupyterlab/apputils-extension');\n      ext.__scope__ = '@jupyterlab/apputils-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/cell-toolbar-extension')) {\n    try {\n      let ext = require('@jupyterlab/cell-toolbar-extension');\n      ext.__scope__ = '@jupyterlab/cell-toolbar-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/celltags-extension')) {\n    try {\n      let ext = require('@jupyterlab/celltags-extension');\n      ext.__scope__ = '@jupyterlab/celltags-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/codemirror-extension')) {\n    try {\n      let ext = require('@jupyterlab/codemirror-extension');\n      ext.__scope__ = '@jupyterlab/codemirror-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/completer-extension')) {\n    try {\n      let ext = require('@jupyterlab/completer-extension');\n      ext.__scope__ = '@jupyterlab/completer-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/console-extension')) {\n    try {\n      let ext = require('@jupyterlab/console-extension');\n      ext.__scope__ = '@jupyterlab/console-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/csvviewer-extension')) {\n    try {\n      let ext = require('@jupyterlab/csvviewer-extension');\n      ext.__scope__ = '@jupyterlab/csvviewer-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/debugger-extension')) {\n    try {\n      let ext = require('@jupyterlab/debugger-extension');\n      ext.__scope__ = '@jupyterlab/debugger-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/docmanager-extension')) {\n    try {\n      let ext = require('@jupyterlab/docmanager-extension');\n      ext.__scope__ = '@jupyterlab/docmanager-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/documentsearch-extension')) {\n    try {\n      let ext = require('@jupyterlab/documentsearch-extension');\n      ext.__scope__ = '@jupyterlab/documentsearch-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/extensionmanager-extension')) {\n    try {\n      let ext = require('@jupyterlab/extensionmanager-extension');\n      ext.__scope__ = '@jupyterlab/extensionmanager-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/filebrowser-extension')) {\n    try {\n      let ext = require('@jupyterlab/filebrowser-extension');\n      ext.__scope__ = '@jupyterlab/filebrowser-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/fileeditor-extension')) {\n    try {\n      let ext = require('@jupyterlab/fileeditor-extension');\n      ext.__scope__ = '@jupyterlab/fileeditor-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/help-extension')) {\n    try {\n      let ext = require('@jupyterlab/help-extension');\n      ext.__scope__ = '@jupyterlab/help-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/htmlviewer-extension')) {\n    try {\n      let ext = require('@jupyterlab/htmlviewer-extension');\n      ext.__scope__ = '@jupyterlab/htmlviewer-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/hub-extension')) {\n    try {\n      let ext = require('@jupyterlab/hub-extension');\n      ext.__scope__ = '@jupyterlab/hub-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/imageviewer-extension')) {\n    try {\n      let ext = require('@jupyterlab/imageviewer-extension');\n      ext.__scope__ = '@jupyterlab/imageviewer-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/inspector-extension')) {\n    try {\n      let ext = require('@jupyterlab/inspector-extension');\n      ext.__scope__ = '@jupyterlab/inspector-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/launcher-extension')) {\n    try {\n      let ext = require('@jupyterlab/launcher-extension');\n      ext.__scope__ = '@jupyterlab/launcher-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/logconsole-extension')) {\n    try {\n      let ext = require('@jupyterlab/logconsole-extension');\n      ext.__scope__ = '@jupyterlab/logconsole-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/lsp-extension')) {\n    try {\n      let ext = require('@jupyterlab/lsp-extension');\n      ext.__scope__ = '@jupyterlab/lsp-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/mainmenu-extension')) {\n    try {\n      let ext = require('@jupyterlab/mainmenu-extension');\n      ext.__scope__ = '@jupyterlab/mainmenu-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/markdownviewer-extension')) {\n    try {\n      let ext = require('@jupyterlab/markdownviewer-extension');\n      ext.__scope__ = '@jupyterlab/markdownviewer-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/markedparser-extension')) {\n    try {\n      let ext = require('@jupyterlab/markedparser-extension');\n      ext.__scope__ = '@jupyterlab/markedparser-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/mathjax-extension')) {\n    try {\n      let ext = require('@jupyterlab/mathjax-extension');\n      ext.__scope__ = '@jupyterlab/mathjax-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/mermaid-extension')) {\n    try {\n      let ext = require('@jupyterlab/mermaid-extension');\n      ext.__scope__ = '@jupyterlab/mermaid-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/metadataform-extension')) {\n    try {\n      let ext = require('@jupyterlab/metadataform-extension');\n      ext.__scope__ = '@jupyterlab/metadataform-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/notebook-extension')) {\n    try {\n      let ext = require('@jupyterlab/notebook-extension');\n      ext.__scope__ = '@jupyterlab/notebook-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/pluginmanager-extension')) {\n    try {\n      let ext = require('@jupyterlab/pluginmanager-extension');\n      ext.__scope__ = '@jupyterlab/pluginmanager-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/rendermime-extension')) {\n    try {\n      let ext = require('@jupyterlab/rendermime-extension');\n      ext.__scope__ = '@jupyterlab/rendermime-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/running-extension')) {\n    try {\n      let ext = require('@jupyterlab/running-extension');\n      ext.__scope__ = '@jupyterlab/running-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/services-extension')) {\n    try {\n      let ext = require('@jupyterlab/services-extension');\n      ext.__scope__ = '@jupyterlab/services-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/settingeditor-extension')) {\n    try {\n      let ext = require('@jupyterlab/settingeditor-extension');\n      ext.__scope__ = '@jupyterlab/settingeditor-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/shortcuts-extension')) {\n    try {\n      let ext = require('@jupyterlab/shortcuts-extension');\n      ext.__scope__ = '@jupyterlab/shortcuts-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/statusbar-extension')) {\n    try {\n      let ext = require('@jupyterlab/statusbar-extension');\n      ext.__scope__ = '@jupyterlab/statusbar-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/terminal-extension')) {\n    try {\n      let ext = require('@jupyterlab/terminal-extension');\n      ext.__scope__ = '@jupyterlab/terminal-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/theme-dark-extension')) {\n    try {\n      let ext = require('@jupyterlab/theme-dark-extension');\n      ext.__scope__ = '@jupyterlab/theme-dark-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/theme-dark-high-contrast-extension')) {\n    try {\n      let ext = require('@jupyterlab/theme-dark-high-contrast-extension');\n      ext.__scope__ = '@jupyterlab/theme-dark-high-contrast-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/theme-light-extension')) {\n    try {\n      let ext = require('@jupyterlab/theme-light-extension');\n      ext.__scope__ = '@jupyterlab/theme-light-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/toc-extension')) {\n    try {\n      let ext = require('@jupyterlab/toc-extension');\n      ext.__scope__ = '@jupyterlab/toc-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/tooltip-extension')) {\n    try {\n      let ext = require('@jupyterlab/tooltip-extension');\n      ext.__scope__ = '@jupyterlab/tooltip-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/translation-extension')) {\n    try {\n      let ext = require('@jupyterlab/translation-extension');\n      ext.__scope__ = '@jupyterlab/translation-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/ui-components-extension')) {\n    try {\n      let ext = require('@jupyterlab/ui-components-extension');\n      ext.__scope__ = '@jupyterlab/ui-components-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!queuedFederated.includes('@jupyterlab/workspaces-extension')) {\n    try {\n      let ext = require('@jupyterlab/workspaces-extension');\n      ext.__scope__ = '@jupyterlab/workspaces-extension';\n      for (let plugin of activePlugins(ext)) {\n        register.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  // Add the federated extensions.\n  const federatedExtensions = await Promise.allSettled(federatedExtensionPromises);\n  federatedExtensions.forEach(p => {\n    if (p.status === \"fulfilled\") {\n      for (let plugin of activePlugins(p.value)) {\n        register.push(plugin);\n      }\n    } else {\n      console.error(p.reason);\n    }\n  });\n\n  // Load all federated component styles and log errors for any that do not\n  (await Promise.allSettled(federatedStylePromises)).filter(({status}) => status === \"rejected\").forEach(({reason}) => {\n    console.error(reason);\n  });\n\n  // 2. Register the plugins\n  pluginRegistry.registerPlugins(register);\n\n  // 3. Get and resolve the service manager and connection status plugins\n  const IConnectionStatus = require('@jupyterlab/services').IConnectionStatus;\n  const IServiceManager = require('@jupyterlab/services').IServiceManager;\n  const connectionStatus = await pluginRegistry.resolveOptionalService(IConnectionStatus);\n  const serviceManager = await pluginRegistry.resolveRequiredService(IServiceManager);\n\n  const lab = new JupyterLab({\n    pluginRegistry,\n    serviceManager,\n    mimeExtensions,\n    connectionStatus,\n    disabled: {\n      matches: disabled,\n      patterns: disabledExtensions\n        .map(function (val) { return val.raw; })\n    },\n    deferred: {\n      matches: deferred,\n      patterns: deferredExtensions\n        .map(function (val) { return val.raw; })\n    },\n    availablePlugins: allPlugins\n  });\n\n  // 4. Start the application, which will activate the other plugins\n  lab.start({ ignorePlugins, bubblingKeydown: true });\n\n  // Expose global app instance when in dev mode or when toggled explicitly.\n  var exposeAppInBrowser = (PageConfig.getOption('exposeAppInBrowser') || '').toLowerCase() === 'true';\n  var devMode = (PageConfig.getOption('devMode') || '').toLowerCase() === 'true';\n\n  if (exposeAppInBrowser || devMode) {\n    window.jupyterapp = lab;\n  }\n\n  // Handle a browser test.\n  if (browserTest.toLowerCase() === 'true') {\n    lab.restored\n      .then(function() { report(errors); })\n      .catch(function(reason) { report([`RestoreError: ${reason.message}`]); });\n\n    // Handle failures to restore after the timeout has elapsed.\n    window.setTimeout(function() { report(errors); }, timeout);\n  }\n}\n"],"names":["async","createModule","scope","module","factory","window","_JUPYTERLAB","get","instance","__scope__","e","console","warn","main","browserTest","PageConfig","getOption","toLowerCase","el","document","createElement","id","body","appendChild","textContent","style","display","errors","reported","timeout","report","className","onerror","msg","url","line","col","error","push","String","JSON","stringify","message","pluginRegistry","PluginRegistry","JupyterLab","disabled","deferred","ignorePlugins","register","federatedExtensionPromises","federatedMimeExtensionPromises","federatedStylePromises","extensions","parse","renamedPluginIds","disabledExtensions","Extension","map","deferredExtensions","isPluginDisabled","separatorIndex","indexOf","extName","slice","some","val","isPluginDeferred","queuedFederated","forEach","data","extension","name","mimeExtension","allPlugins","getPlugins","exports","hasOwnProperty","default","Array","isArray","activePlugins","plugins","plugin","isDisabled","description","requires","optional","provides","autoStart","enabled","mimeExtensions","includes","ext","federatedMimeExtensions","Promise","allSettled","p","status","value","reason","federatedExtensions","filter","registerPlugins","IConnectionStatus","IServiceManager","connectionStatus","resolveOptionalService","serviceManager","resolveRequiredService","lab","matches","patterns","raw","availablePlugins","start","bubblingKeydown","exposeAppInBrowser","devMode","jupyterapp","restored","then","catch","setTimeout"],"sourceRoot":""}