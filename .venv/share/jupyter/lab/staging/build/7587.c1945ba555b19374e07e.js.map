{"version":3,"file":"7587.c1945ba555b19374e07e.js?v=c1945ba555b19374e07e","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/@codemirror/legacy-modes/mode/ebnf.js"],"sourcesContent":["var commentType = {slash: 0, parenthesis: 1};\nvar stateType = {comment: 0, _string: 1, characterClass: 2};\n\nexport const ebnf = {\n  name: \"ebnf\",\n  startState: function () {\n    return {\n      stringType: null,\n      commentType: null,\n      braced: 0,\n      lhs: true,\n      localState: null,\n      stack: [],\n      inDefinition: false\n    };\n  },\n  token: function (stream, state) {\n    if (!stream) return;\n\n    //check for state changes\n    if (state.stack.length === 0) {\n      //strings\n      if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.stack.unshift(stateType._string);\n      } else if (stream.match('/*')) { //comments starting with /*\n        state.stack.unshift(stateType.comment);\n        state.commentType = commentType.slash;\n      } else if (stream.match('(*')) { //comments starting with (*\n        state.stack.unshift(stateType.comment);\n        state.commentType = commentType.parenthesis;\n      }\n    }\n\n    //return state\n    //stack has\n    switch (state.stack[0]) {\n    case stateType._string:\n      while (state.stack[0] === stateType._string && !stream.eol()) {\n        if (stream.peek() === state.stringType) {\n          stream.next(); // Skip quote\n          state.stack.shift(); // Clear flag\n        } else if (stream.peek() === \"\\\\\") {\n          stream.next();\n          stream.next();\n        } else {\n          stream.match(/^.[^\\\\\\\"\\']*/);\n        }\n      }\n      return state.lhs ? \"property\" : \"string\"; // Token style\n\n    case stateType.comment:\n      while (state.stack[0] === stateType.comment && !stream.eol()) {\n        if (state.commentType === commentType.slash && stream.match('*/')) {\n          state.stack.shift(); // Clear flag\n          state.commentType = null;\n        } else if (state.commentType === commentType.parenthesis && stream.match('*)')) {\n          state.stack.shift(); // Clear flag\n          state.commentType = null;\n        } else {\n          stream.match(/^.[^\\*]*/);\n        }\n      }\n      return \"comment\";\n\n    case stateType.characterClass:\n      while (state.stack[0] === stateType.characterClass && !stream.eol()) {\n        if (!(stream.match(/^[^\\]\\\\]+/) || stream.match('.'))) {\n          state.stack.shift();\n        }\n      }\n      return \"operator\";\n    }\n\n    var peek = stream.peek();\n\n    //no stack\n    switch (peek) {\n    case \"[\":\n      stream.next();\n      state.stack.unshift(stateType.characterClass);\n      return \"bracket\";\n    case \":\":\n    case \"|\":\n    case \";\":\n      stream.next();\n      return \"operator\";\n    case \"%\":\n      if (stream.match(\"%%\")) {\n        return \"header\";\n      } else if (stream.match(/[%][A-Za-z]+/)) {\n        return \"keyword\";\n      } else if (stream.match(/[%][}]/)) {\n        return \"bracket\";\n      }\n      break;\n    case \"/\":\n      if (stream.match(/[\\/][A-Za-z]+/)) {\n        return \"keyword\";\n      }\n    case \"\\\\\":\n      if (stream.match(/[\\][a-z]+/)) {\n        return \"string.special\";\n      }\n    case \".\":\n      if (stream.match(\".\")) {\n        return \"atom\";\n      }\n    case \"*\":\n    case \"-\":\n    case \"+\":\n    case \"^\":\n      if (stream.match(peek)) {\n        return \"atom\";\n      }\n    case \"$\":\n      if (stream.match(\"$$\")) {\n        return \"builtin\";\n      } else if (stream.match(/[$][0-9]+/)) {\n        return \"variableName.special\";\n      }\n    case \"<\":\n      if (stream.match(/<<[a-zA-Z_]+>>/)) {\n        return \"builtin\";\n      }\n    }\n\n    if (stream.match('//')) {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (stream.match('return')) {\n      return \"operator\";\n    } else if (stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      if (stream.match(/(?=[\\(.])/)) {\n        return \"variable\";\n      } else if (stream.match(/(?=[\\s\\n]*[:=])/)) {\n        return \"def\";\n      }\n      return \"variableName.special\";\n    } else if ([\"[\", \"]\", \"(\", \")\"].indexOf(stream.peek()) != -1) {\n      stream.next();\n      return \"bracket\";\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n    return null;\n  }\n};\n"],"names":["commentType","slash","parenthesis","stateType","comment","_string","characterClass","ebnf","name","startState","stringType","braced","lhs","localState","stack","inDefinition","token","stream","state","length","peek","next","unshift","match","eol","shift","skipToEnd","indexOf","eatSpace"],"sourceRoot":""}