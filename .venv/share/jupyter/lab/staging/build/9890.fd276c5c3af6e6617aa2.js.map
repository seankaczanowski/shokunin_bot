{"version":3,"file":"9890.fd276c5c3af6e6617aa2.js?v=fd276c5c3af6e6617aa2","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/mermaid/dist/chunks/mermaid.core/chunk-4BMEZGHF.mjs","webpack://@jupyterlab/application-top/./node_modules/mermaid/dist/chunks/mermaid.core/chunk-XZIHB7SX.mjs","webpack://@jupyterlab/application-top/./node_modules/mermaid/dist/chunks/mermaid.core/gitGraphDiagram-7IBYFJ6S.mjs"],"sourcesContent":["import {\n  __name\n} from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/common/populateCommonDb.ts\nfunction populateCommonDb(ast, db) {\n  if (ast.accDescr) {\n    db.setAccDescription?.(ast.accDescr);\n  }\n  if (ast.accTitle) {\n    db.setAccTitle?.(ast.accTitle);\n  }\n  if (ast.title) {\n    db.setDiagramTitle?.(ast.title);\n  }\n}\n__name(populateCommonDb, \"populateCommonDb\");\n\nexport {\n  populateCommonDb\n};\n","import {\n  __name\n} from \"./chunk-YTJNT7DU.mjs\";\n\n// src/utils/imperativeState.ts\nvar ImperativeState = class {\n  /**\n   * @param init - Function that creates the default state.\n   */\n  constructor(init) {\n    this.init = init;\n    this.records = this.init();\n  }\n  static {\n    __name(this, \"ImperativeState\");\n  }\n  reset() {\n    this.records = this.init();\n  }\n};\n\nexport {\n  ImperativeState\n};\n","import {\n  populateCommonDb\n} from \"./chunk-4BMEZGHF.mjs\";\nimport {\n  ImperativeState\n} from \"./chunk-XZIHB7SX.mjs\";\nimport {\n  cleanAndMerge,\n  random,\n  utils_default\n} from \"./chunk-O4NI6UNU.mjs\";\nimport {\n  __name,\n  clear,\n  common_default,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig,\n  getConfig2,\n  getDiagramTitle,\n  log,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle,\n  setupGraphViewbox2 as setupGraphViewbox\n} from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/git/gitGraphParser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/git/gitGraphTypes.ts\nvar commitType = {\n  NORMAL: 0,\n  REVERSE: 1,\n  HIGHLIGHT: 2,\n  MERGE: 3,\n  CHERRY_PICK: 4\n};\n\n// src/diagrams/git/gitGraphAst.ts\nvar DEFAULT_GITGRAPH_CONFIG = defaultConfig_default.gitGraph;\nvar getConfig3 = /* @__PURE__ */ __name(() => {\n  const config = cleanAndMerge({\n    ...DEFAULT_GITGRAPH_CONFIG,\n    ...getConfig().gitGraph\n  });\n  return config;\n}, \"getConfig\");\nvar state = new ImperativeState(() => {\n  const config = getConfig3();\n  const mainBranchName = config.mainBranchName;\n  const mainBranchOrder = config.mainBranchOrder;\n  return {\n    mainBranchName,\n    commits: /* @__PURE__ */ new Map(),\n    head: null,\n    branchConfig: /* @__PURE__ */ new Map([[mainBranchName, { name: mainBranchName, order: mainBranchOrder }]]),\n    branches: /* @__PURE__ */ new Map([[mainBranchName, null]]),\n    currBranch: mainBranchName,\n    direction: \"LR\",\n    seq: 0,\n    options: {}\n  };\n});\nfunction getID() {\n  return random({ length: 7 });\n}\n__name(getID, \"getID\");\nfunction uniqBy(list, fn) {\n  const recordMap = /* @__PURE__ */ Object.create(null);\n  return list.reduce((out, item) => {\n    const key = fn(item);\n    if (!recordMap[key]) {\n      recordMap[key] = true;\n      out.push(item);\n    }\n    return out;\n  }, []);\n}\n__name(uniqBy, \"uniqBy\");\nvar setDirection = /* @__PURE__ */ __name(function(dir2) {\n  state.records.direction = dir2;\n}, \"setDirection\");\nvar setOptions = /* @__PURE__ */ __name(function(rawOptString) {\n  log.debug(\"options str\", rawOptString);\n  rawOptString = rawOptString?.trim();\n  rawOptString = rawOptString || \"{}\";\n  try {\n    state.records.options = JSON.parse(rawOptString);\n  } catch (e) {\n    log.error(\"error while parsing gitGraph options\", e.message);\n  }\n}, \"setOptions\");\nvar getOptions = /* @__PURE__ */ __name(function() {\n  return state.records.options;\n}, \"getOptions\");\nvar commit = /* @__PURE__ */ __name(function(commitDB) {\n  let msg = commitDB.msg;\n  let id = commitDB.id;\n  const type = commitDB.type;\n  let tags = commitDB.tags;\n  log.info(\"commit\", msg, id, type, tags);\n  log.debug(\"Entering commit:\", msg, id, type, tags);\n  const config = getConfig3();\n  id = common_default.sanitizeText(id, config);\n  msg = common_default.sanitizeText(msg, config);\n  tags = tags?.map((tag) => common_default.sanitizeText(tag, config));\n  const newCommit = {\n    id: id ? id : state.records.seq + \"-\" + getID(),\n    message: msg,\n    seq: state.records.seq++,\n    type: type ?? commitType.NORMAL,\n    tags: tags ?? [],\n    parents: state.records.head == null ? [] : [state.records.head.id],\n    branch: state.records.currBranch\n  };\n  state.records.head = newCommit;\n  log.info(\"main branch\", config.mainBranchName);\n  state.records.commits.set(newCommit.id, newCommit);\n  state.records.branches.set(state.records.currBranch, newCommit.id);\n  log.debug(\"in pushCommit \" + newCommit.id);\n}, \"commit\");\nvar branch = /* @__PURE__ */ __name(function(branchDB) {\n  let name = branchDB.name;\n  const order = branchDB.order;\n  name = common_default.sanitizeText(name, getConfig3());\n  if (state.records.branches.has(name)) {\n    throw new Error(\n      `Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using \"checkout ${name}\")`\n    );\n  }\n  state.records.branches.set(name, state.records.head != null ? state.records.head.id : null);\n  state.records.branchConfig.set(name, { name, order });\n  checkout(name);\n  log.debug(\"in createBranch\");\n}, \"branch\");\nvar merge = /* @__PURE__ */ __name((mergeDB) => {\n  let otherBranch = mergeDB.branch;\n  let customId = mergeDB.id;\n  const overrideType = mergeDB.type;\n  const customTags = mergeDB.tags;\n  const config = getConfig3();\n  otherBranch = common_default.sanitizeText(otherBranch, config);\n  if (customId) {\n    customId = common_default.sanitizeText(customId, config);\n  }\n  const currentBranchCheck = state.records.branches.get(state.records.currBranch);\n  const otherBranchCheck = state.records.branches.get(otherBranch);\n  const currentCommit = currentBranchCheck ? state.records.commits.get(currentBranchCheck) : void 0;\n  const otherCommit = otherBranchCheck ? state.records.commits.get(otherBranchCheck) : void 0;\n  if (currentCommit && otherCommit && currentCommit.branch === otherBranch) {\n    throw new Error(`Cannot merge branch '${otherBranch}' into itself.`);\n  }\n  if (state.records.currBranch === otherBranch) {\n    const error = new Error('Incorrect usage of \"merge\". Cannot merge a branch to itself');\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"branch abc\"]\n    };\n    throw error;\n  }\n  if (currentCommit === void 0 || !currentCommit) {\n    const error = new Error(\n      `Incorrect usage of \"merge\". Current branch (${state.records.currBranch})has no commits`\n    );\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"commit\"]\n    };\n    throw error;\n  }\n  if (!state.records.branches.has(otherBranch)) {\n    const error = new Error(\n      'Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + \") does not exist\"\n    );\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [`branch ${otherBranch}`]\n    };\n    throw error;\n  }\n  if (otherCommit === void 0 || !otherCommit) {\n    const error = new Error(\n      'Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + \") has no commits\"\n    );\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: ['\"commit\"']\n    };\n    throw error;\n  }\n  if (currentCommit === otherCommit) {\n    const error = new Error('Incorrect usage of \"merge\". Both branches have same head');\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"branch abc\"]\n    };\n    throw error;\n  }\n  if (customId && state.records.commits.has(customId)) {\n    const error = new Error(\n      'Incorrect usage of \"merge\". Commit with id:' + customId + \" already exists, use different custom Id\"\n    );\n    error.hash = {\n      text: `merge ${otherBranch} ${customId} ${overrideType} ${customTags?.join(\" \")}`,\n      token: `merge ${otherBranch} ${customId} ${overrideType} ${customTags?.join(\" \")}`,\n      expected: [\n        `merge ${otherBranch} ${customId}_UNIQUE ${overrideType} ${customTags?.join(\" \")}`\n      ]\n    };\n    throw error;\n  }\n  const verifiedBranch = otherBranchCheck ? otherBranchCheck : \"\";\n  const commit2 = {\n    id: customId || `${state.records.seq}-${getID()}`,\n    message: `merged branch ${otherBranch} into ${state.records.currBranch}`,\n    seq: state.records.seq++,\n    parents: state.records.head == null ? [] : [state.records.head.id, verifiedBranch],\n    branch: state.records.currBranch,\n    type: commitType.MERGE,\n    customType: overrideType,\n    customId: customId ? true : false,\n    tags: customTags ?? []\n  };\n  state.records.head = commit2;\n  state.records.commits.set(commit2.id, commit2);\n  state.records.branches.set(state.records.currBranch, commit2.id);\n  log.debug(state.records.branches);\n  log.debug(\"in mergeBranch\");\n}, \"merge\");\nvar cherryPick = /* @__PURE__ */ __name(function(cherryPickDB) {\n  let sourceId = cherryPickDB.id;\n  let targetId = cherryPickDB.targetId;\n  let tags = cherryPickDB.tags;\n  let parentCommitId = cherryPickDB.parent;\n  log.debug(\"Entering cherryPick:\", sourceId, targetId, tags);\n  const config = getConfig3();\n  sourceId = common_default.sanitizeText(sourceId, config);\n  targetId = common_default.sanitizeText(targetId, config);\n  tags = tags?.map((tag) => common_default.sanitizeText(tag, config));\n  parentCommitId = common_default.sanitizeText(parentCommitId, config);\n  if (!sourceId || !state.records.commits.has(sourceId)) {\n    const error = new Error(\n      'Incorrect usage of \"cherryPick\". Source commit id should exist and provided'\n    );\n    error.hash = {\n      text: `cherryPick ${sourceId} ${targetId}`,\n      token: `cherryPick ${sourceId} ${targetId}`,\n      expected: [\"cherry-pick abc\"]\n    };\n    throw error;\n  }\n  const sourceCommit = state.records.commits.get(sourceId);\n  if (sourceCommit === void 0 || !sourceCommit) {\n    throw new Error('Incorrect usage of \"cherryPick\". Source commit id should exist and provided');\n  }\n  if (parentCommitId && !(Array.isArray(sourceCommit.parents) && sourceCommit.parents.includes(parentCommitId))) {\n    const error = new Error(\n      \"Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.\"\n    );\n    throw error;\n  }\n  const sourceCommitBranch = sourceCommit.branch;\n  if (sourceCommit.type === commitType.MERGE && !parentCommitId) {\n    const error = new Error(\n      \"Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.\"\n    );\n    throw error;\n  }\n  if (!targetId || !state.records.commits.has(targetId)) {\n    if (sourceCommitBranch === state.records.currBranch) {\n      const error = new Error(\n        'Incorrect usage of \"cherryPick\". Source commit is already on current branch'\n      );\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const currentCommitId = state.records.branches.get(state.records.currBranch);\n    if (currentCommitId === void 0 || !currentCommitId) {\n      const error = new Error(\n        `Incorrect usage of \"cherry-pick\". Current branch (${state.records.currBranch})has no commits`\n      );\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const currentCommit = state.records.commits.get(currentCommitId);\n    if (currentCommit === void 0 || !currentCommit) {\n      const error = new Error(\n        `Incorrect usage of \"cherry-pick\". Current branch (${state.records.currBranch})has no commits`\n      );\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const commit2 = {\n      id: state.records.seq + \"-\" + getID(),\n      message: `cherry-picked ${sourceCommit?.message} into ${state.records.currBranch}`,\n      seq: state.records.seq++,\n      parents: state.records.head == null ? [] : [state.records.head.id, sourceCommit.id],\n      branch: state.records.currBranch,\n      type: commitType.CHERRY_PICK,\n      tags: tags ? tags.filter(Boolean) : [\n        `cherry-pick:${sourceCommit.id}${sourceCommit.type === commitType.MERGE ? `|parent:${parentCommitId}` : \"\"}`\n      ]\n    };\n    state.records.head = commit2;\n    state.records.commits.set(commit2.id, commit2);\n    state.records.branches.set(state.records.currBranch, commit2.id);\n    log.debug(state.records.branches);\n    log.debug(\"in cherryPick\");\n  }\n}, \"cherryPick\");\nvar checkout = /* @__PURE__ */ __name(function(branch2) {\n  branch2 = common_default.sanitizeText(branch2, getConfig3());\n  if (!state.records.branches.has(branch2)) {\n    const error = new Error(\n      `Trying to checkout branch which is not yet created. (Help try using \"branch ${branch2}\")`\n    );\n    error.hash = {\n      text: `checkout ${branch2}`,\n      token: `checkout ${branch2}`,\n      expected: [`branch ${branch2}`]\n    };\n    throw error;\n  } else {\n    state.records.currBranch = branch2;\n    const id = state.records.branches.get(state.records.currBranch);\n    if (id === void 0 || !id) {\n      state.records.head = null;\n    } else {\n      state.records.head = state.records.commits.get(id) ?? null;\n    }\n  }\n}, \"checkout\");\nfunction upsert(arr, key, newVal) {\n  const index = arr.indexOf(key);\n  if (index === -1) {\n    arr.push(newVal);\n  } else {\n    arr.splice(index, 1, newVal);\n  }\n}\n__name(upsert, \"upsert\");\nfunction prettyPrintCommitHistory(commitArr) {\n  const commit2 = commitArr.reduce((out, commit3) => {\n    if (out.seq > commit3.seq) {\n      return out;\n    }\n    return commit3;\n  }, commitArr[0]);\n  let line = \"\";\n  commitArr.forEach(function(c) {\n    if (c === commit2) {\n      line += \"\t*\";\n    } else {\n      line += \"\t|\";\n    }\n  });\n  const label = [line, commit2.id, commit2.seq];\n  for (const branch2 in state.records.branches) {\n    if (state.records.branches.get(branch2) === commit2.id) {\n      label.push(branch2);\n    }\n  }\n  log.debug(label.join(\" \"));\n  if (commit2.parents && commit2.parents.length == 2 && commit2.parents[0] && commit2.parents[1]) {\n    const newCommit = state.records.commits.get(commit2.parents[0]);\n    upsert(commitArr, commit2, newCommit);\n    if (commit2.parents[1]) {\n      commitArr.push(state.records.commits.get(commit2.parents[1]));\n    }\n  } else if (commit2.parents.length == 0) {\n    return;\n  } else {\n    if (commit2.parents[0]) {\n      const newCommit = state.records.commits.get(commit2.parents[0]);\n      upsert(commitArr, commit2, newCommit);\n    }\n  }\n  commitArr = uniqBy(commitArr, (c) => c.id);\n  prettyPrintCommitHistory(commitArr);\n}\n__name(prettyPrintCommitHistory, \"prettyPrintCommitHistory\");\nvar prettyPrint = /* @__PURE__ */ __name(function() {\n  log.debug(state.records.commits);\n  const node = getCommitsArray()[0];\n  prettyPrintCommitHistory([node]);\n}, \"prettyPrint\");\nvar clear2 = /* @__PURE__ */ __name(function() {\n  state.reset();\n  clear();\n}, \"clear\");\nvar getBranchesAsObjArray = /* @__PURE__ */ __name(function() {\n  const branchesArray = [...state.records.branchConfig.values()].map((branchConfig, i) => {\n    if (branchConfig.order !== null && branchConfig.order !== void 0) {\n      return branchConfig;\n    }\n    return {\n      ...branchConfig,\n      order: parseFloat(`0.${i}`)\n    };\n  }).sort((a, b) => (a.order ?? 0) - (b.order ?? 0)).map(({ name }) => ({ name }));\n  return branchesArray;\n}, \"getBranchesAsObjArray\");\nvar getBranches = /* @__PURE__ */ __name(function() {\n  return state.records.branches;\n}, \"getBranches\");\nvar getCommits = /* @__PURE__ */ __name(function() {\n  return state.records.commits;\n}, \"getCommits\");\nvar getCommitsArray = /* @__PURE__ */ __name(function() {\n  const commitArr = [...state.records.commits.values()];\n  commitArr.forEach(function(o) {\n    log.debug(o.id);\n  });\n  commitArr.sort((a, b) => a.seq - b.seq);\n  return commitArr;\n}, \"getCommitsArray\");\nvar getCurrentBranch = /* @__PURE__ */ __name(function() {\n  return state.records.currBranch;\n}, \"getCurrentBranch\");\nvar getDirection = /* @__PURE__ */ __name(function() {\n  return state.records.direction;\n}, \"getDirection\");\nvar getHead = /* @__PURE__ */ __name(function() {\n  return state.records.head;\n}, \"getHead\");\nvar db = {\n  commitType,\n  getConfig: getConfig3,\n  setDirection,\n  setOptions,\n  getOptions,\n  commit,\n  branch,\n  merge,\n  cherryPick,\n  checkout,\n  //reset,\n  prettyPrint,\n  clear: clear2,\n  getBranchesAsObjArray,\n  getBranches,\n  getCommits,\n  getCommitsArray,\n  getCurrentBranch,\n  getDirection,\n  getHead,\n  setAccTitle,\n  getAccTitle,\n  getAccDescription,\n  setAccDescription,\n  setDiagramTitle,\n  getDiagramTitle\n};\n\n// src/diagrams/git/gitGraphParser.ts\nvar populate = /* @__PURE__ */ __name((ast, db2) => {\n  populateCommonDb(ast, db2);\n  if (ast.dir) {\n    db2.setDirection(ast.dir);\n  }\n  for (const statement of ast.statements) {\n    parseStatement(statement, db2);\n  }\n}, \"populate\");\nvar parseStatement = /* @__PURE__ */ __name((statement, db2) => {\n  const parsers = {\n    Commit: /* @__PURE__ */ __name((stmt) => db2.commit(parseCommit(stmt)), \"Commit\"),\n    Branch: /* @__PURE__ */ __name((stmt) => db2.branch(parseBranch(stmt)), \"Branch\"),\n    Merge: /* @__PURE__ */ __name((stmt) => db2.merge(parseMerge(stmt)), \"Merge\"),\n    Checkout: /* @__PURE__ */ __name((stmt) => db2.checkout(parseCheckout(stmt)), \"Checkout\"),\n    CherryPicking: /* @__PURE__ */ __name((stmt) => db2.cherryPick(parseCherryPicking(stmt)), \"CherryPicking\")\n  };\n  const parser2 = parsers[statement.$type];\n  if (parser2) {\n    parser2(statement);\n  } else {\n    log.error(`Unknown statement type: ${statement.$type}`);\n  }\n}, \"parseStatement\");\nvar parseCommit = /* @__PURE__ */ __name((commit2) => {\n  const commitDB = {\n    id: commit2.id,\n    msg: commit2.message ?? \"\",\n    type: commit2.type !== void 0 ? commitType[commit2.type] : commitType.NORMAL,\n    tags: commit2.tags ?? void 0\n  };\n  return commitDB;\n}, \"parseCommit\");\nvar parseBranch = /* @__PURE__ */ __name((branch2) => {\n  const branchDB = {\n    name: branch2.name,\n    order: branch2.order ?? 0\n  };\n  return branchDB;\n}, \"parseBranch\");\nvar parseMerge = /* @__PURE__ */ __name((merge2) => {\n  const mergeDB = {\n    branch: merge2.branch,\n    id: merge2.id ?? \"\",\n    type: merge2.type !== void 0 ? commitType[merge2.type] : void 0,\n    tags: merge2.tags ?? void 0\n  };\n  return mergeDB;\n}, \"parseMerge\");\nvar parseCheckout = /* @__PURE__ */ __name((checkout2) => {\n  const branch2 = checkout2.branch;\n  return branch2;\n}, \"parseCheckout\");\nvar parseCherryPicking = /* @__PURE__ */ __name((cherryPicking) => {\n  const cherryPickDB = {\n    id: cherryPicking.id,\n    targetId: \"\",\n    tags: cherryPicking.tags?.length === 0 ? void 0 : cherryPicking.tags,\n    parent: cherryPicking.parent\n  };\n  return cherryPickDB;\n}, \"parseCherryPicking\");\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"gitGraph\", input);\n    log.debug(ast);\n    populate(ast, db);\n  }, \"parse\")\n};\nif (void 0) {\n  const { it, expect, describe } = void 0;\n  const mockDB = {\n    commitType,\n    setDirection: vi.fn(),\n    commit: vi.fn(),\n    branch: vi.fn(),\n    merge: vi.fn(),\n    cherryPick: vi.fn(),\n    checkout: vi.fn()\n  };\n  describe(\"GitGraph Parser\", () => {\n    it(\"should parse a commit statement\", () => {\n      const commit2 = {\n        $type: \"Commit\",\n        id: \"1\",\n        message: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: \"NORMAL\"\n      };\n      parseStatement(commit2, mockDB);\n      expect(mockDB.commit).toHaveBeenCalledWith({\n        id: \"1\",\n        msg: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n    });\n    it(\"should parse a branch statement\", () => {\n      const branch2 = {\n        $type: \"Branch\",\n        name: \"newBranch\",\n        order: 1\n      };\n      parseStatement(branch2, mockDB);\n      expect(mockDB.branch).toHaveBeenCalledWith({ name: \"newBranch\", order: 1 });\n    });\n    it(\"should parse a checkout statement\", () => {\n      const checkout2 = {\n        $type: \"Checkout\",\n        branch: \"newBranch\"\n      };\n      parseStatement(checkout2, mockDB);\n      expect(mockDB.checkout).toHaveBeenCalledWith(\"newBranch\");\n    });\n    it(\"should parse a merge statement\", () => {\n      const merge2 = {\n        $type: \"Merge\",\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: \"NORMAL\"\n      };\n      parseStatement(merge2, mockDB);\n      expect(mockDB.merge).toHaveBeenCalledWith({\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n    });\n    it(\"should parse a cherry picking statement\", () => {\n      const cherryPick2 = {\n        $type: \"CherryPicking\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        parent: \"2\"\n      };\n      parseStatement(cherryPick2, mockDB);\n      expect(mockDB.cherryPick).toHaveBeenCalledWith({\n        id: \"1\",\n        targetId: \"\",\n        parent: \"2\",\n        tags: [\"tag1\", \"tag2\"]\n      });\n    });\n    it(\"should parse a langium generated gitGraph ast\", () => {\n      const dummy = {\n        $type: \"GitGraph\",\n        statements: []\n      };\n      const gitGraphAst = {\n        $type: \"GitGraph\",\n        statements: [\n          {\n            $container: dummy,\n            $type: \"Commit\",\n            id: \"1\",\n            message: \"test\",\n            tags: [\"tag1\", \"tag2\"],\n            type: \"NORMAL\"\n          },\n          {\n            $container: dummy,\n            $type: \"Branch\",\n            name: \"newBranch\",\n            order: 1\n          },\n          {\n            $container: dummy,\n            $type: \"Merge\",\n            branch: \"newBranch\",\n            id: \"1\",\n            tags: [\"tag1\", \"tag2\"],\n            type: \"NORMAL\"\n          },\n          {\n            $container: dummy,\n            $type: \"Checkout\",\n            branch: \"newBranch\"\n          },\n          {\n            $container: dummy,\n            $type: \"CherryPicking\",\n            id: \"1\",\n            tags: [\"tag1\", \"tag2\"],\n            parent: \"2\"\n          }\n        ]\n      };\n      populate(gitGraphAst, mockDB);\n      expect(mockDB.commit).toHaveBeenCalledWith({\n        id: \"1\",\n        msg: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n      expect(mockDB.branch).toHaveBeenCalledWith({ name: \"newBranch\", order: 1 });\n      expect(mockDB.merge).toHaveBeenCalledWith({\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n      expect(mockDB.checkout).toHaveBeenCalledWith(\"newBranch\");\n    });\n  });\n}\n\n// src/diagrams/git/gitGraphRenderer.ts\nimport { select } from \"d3\";\nvar DEFAULT_CONFIG = getConfig2();\nvar DEFAULT_GITGRAPH_CONFIG2 = DEFAULT_CONFIG?.gitGraph;\nvar LAYOUT_OFFSET = 10;\nvar COMMIT_STEP = 40;\nvar PX = 4;\nvar PY = 2;\nvar THEME_COLOR_LIMIT = 8;\nvar branchPos = /* @__PURE__ */ new Map();\nvar commitPos = /* @__PURE__ */ new Map();\nvar defaultPos = 30;\nvar allCommitsDict = /* @__PURE__ */ new Map();\nvar lanes = [];\nvar maxPos = 0;\nvar dir = \"LR\";\nvar clear3 = /* @__PURE__ */ __name(() => {\n  branchPos.clear();\n  commitPos.clear();\n  allCommitsDict.clear();\n  maxPos = 0;\n  lanes = [];\n  dir = \"LR\";\n}, \"clear\");\nvar drawText = /* @__PURE__ */ __name((txt) => {\n  const svgLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n  const rows = typeof txt === \"string\" ? txt.split(/\\\\n|\\n|<br\\s*\\/?>/gi) : txt;\n  rows.forEach((row) => {\n    const tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n    tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n    tspan.setAttribute(\"dy\", \"1em\");\n    tspan.setAttribute(\"x\", \"0\");\n    tspan.setAttribute(\"class\", \"row\");\n    tspan.textContent = row.trim();\n    svgLabel.appendChild(tspan);\n  });\n  return svgLabel;\n}, \"drawText\");\nvar findClosestParent = /* @__PURE__ */ __name((parents) => {\n  let closestParent;\n  let comparisonFunc;\n  let targetPosition;\n  if (dir === \"BT\") {\n    comparisonFunc = /* @__PURE__ */ __name((a, b) => a <= b, \"comparisonFunc\");\n    targetPosition = Infinity;\n  } else {\n    comparisonFunc = /* @__PURE__ */ __name((a, b) => a >= b, \"comparisonFunc\");\n    targetPosition = 0;\n  }\n  parents.forEach((parent) => {\n    const parentPosition = dir === \"TB\" || dir == \"BT\" ? commitPos.get(parent)?.y : commitPos.get(parent)?.x;\n    if (parentPosition !== void 0 && comparisonFunc(parentPosition, targetPosition)) {\n      closestParent = parent;\n      targetPosition = parentPosition;\n    }\n  });\n  return closestParent;\n}, \"findClosestParent\");\nvar findClosestParentBT = /* @__PURE__ */ __name((parents) => {\n  let closestParent = \"\";\n  let maxPosition = Infinity;\n  parents.forEach((parent) => {\n    const parentPosition = commitPos.get(parent).y;\n    if (parentPosition <= maxPosition) {\n      closestParent = parent;\n      maxPosition = parentPosition;\n    }\n  });\n  return closestParent || void 0;\n}, \"findClosestParentBT\");\nvar setParallelBTPos = /* @__PURE__ */ __name((sortedKeys, commits, defaultPos2) => {\n  let curPos = defaultPos2;\n  let maxPosition = defaultPos2;\n  const roots = [];\n  sortedKeys.forEach((key) => {\n    const commit2 = commits.get(key);\n    if (!commit2) {\n      throw new Error(`Commit not found for key ${key}`);\n    }\n    if (commit2.parents.length) {\n      curPos = calculateCommitPosition(commit2);\n      maxPosition = Math.max(curPos, maxPosition);\n    } else {\n      roots.push(commit2);\n    }\n    setCommitPosition(commit2, curPos);\n  });\n  curPos = maxPosition;\n  roots.forEach((commit2) => {\n    setRootPosition(commit2, curPos, defaultPos2);\n  });\n  sortedKeys.forEach((key) => {\n    const commit2 = commits.get(key);\n    if (commit2?.parents.length) {\n      const closestParent = findClosestParentBT(commit2.parents);\n      curPos = commitPos.get(closestParent).y - COMMIT_STEP;\n      if (curPos <= maxPosition) {\n        maxPosition = curPos;\n      }\n      const x = branchPos.get(commit2.branch).pos;\n      const y = curPos - LAYOUT_OFFSET;\n      commitPos.set(commit2.id, { x, y });\n    }\n  });\n}, \"setParallelBTPos\");\nvar findClosestParentPos = /* @__PURE__ */ __name((commit2) => {\n  const closestParent = findClosestParent(commit2.parents.filter((p) => p !== null));\n  if (!closestParent) {\n    throw new Error(`Closest parent not found for commit ${commit2.id}`);\n  }\n  const closestParentPos = commitPos.get(closestParent)?.y;\n  if (closestParentPos === void 0) {\n    throw new Error(`Closest parent position not found for commit ${commit2.id}`);\n  }\n  return closestParentPos;\n}, \"findClosestParentPos\");\nvar calculateCommitPosition = /* @__PURE__ */ __name((commit2) => {\n  const closestParentPos = findClosestParentPos(commit2);\n  return closestParentPos + COMMIT_STEP;\n}, \"calculateCommitPosition\");\nvar setCommitPosition = /* @__PURE__ */ __name((commit2, curPos) => {\n  const branch2 = branchPos.get(commit2.branch);\n  if (!branch2) {\n    throw new Error(`Branch not found for commit ${commit2.id}`);\n  }\n  const x = branch2.pos;\n  const y = curPos + LAYOUT_OFFSET;\n  commitPos.set(commit2.id, { x, y });\n  return { x, y };\n}, \"setCommitPosition\");\nvar setRootPosition = /* @__PURE__ */ __name((commit2, curPos, defaultPos2) => {\n  const branch2 = branchPos.get(commit2.branch);\n  if (!branch2) {\n    throw new Error(`Branch not found for commit ${commit2.id}`);\n  }\n  const y = curPos + defaultPos2;\n  const x = branch2.pos;\n  commitPos.set(commit2.id, { x, y });\n}, \"setRootPosition\");\nvar drawCommitBullet = /* @__PURE__ */ __name((gBullets, commit2, commitPosition, typeClass, branchIndex, commitSymbolType) => {\n  if (commitSymbolType === commitType.HIGHLIGHT) {\n    gBullets.append(\"rect\").attr(\"x\", commitPosition.x - 10).attr(\"y\", commitPosition.y - 10).attr(\"width\", 20).attr(\"height\", 20).attr(\n      \"class\",\n      `commit ${commit2.id} commit-highlight${branchIndex % THEME_COLOR_LIMIT} ${typeClass}-outer`\n    );\n    gBullets.append(\"rect\").attr(\"x\", commitPosition.x - 6).attr(\"y\", commitPosition.y - 6).attr(\"width\", 12).attr(\"height\", 12).attr(\n      \"class\",\n      `commit ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT} ${typeClass}-inner`\n    );\n  } else if (commitSymbolType === commitType.CHERRY_PICK) {\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x).attr(\"cy\", commitPosition.y).attr(\"r\", 10).attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x - 3).attr(\"cy\", commitPosition.y + 2).attr(\"r\", 2.75).attr(\"fill\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x + 3).attr(\"cy\", commitPosition.y + 2).attr(\"r\", 2.75).attr(\"fill\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"line\").attr(\"x1\", commitPosition.x + 3).attr(\"y1\", commitPosition.y + 1).attr(\"x2\", commitPosition.x).attr(\"y2\", commitPosition.y - 5).attr(\"stroke\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"line\").attr(\"x1\", commitPosition.x - 3).attr(\"y1\", commitPosition.y + 1).attr(\"x2\", commitPosition.x).attr(\"y2\", commitPosition.y - 5).attr(\"stroke\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n  } else {\n    const circle = gBullets.append(\"circle\");\n    circle.attr(\"cx\", commitPosition.x);\n    circle.attr(\"cy\", commitPosition.y);\n    circle.attr(\"r\", commit2.type === commitType.MERGE ? 9 : 10);\n    circle.attr(\"class\", `commit ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`);\n    if (commitSymbolType === commitType.MERGE) {\n      const circle2 = gBullets.append(\"circle\");\n      circle2.attr(\"cx\", commitPosition.x);\n      circle2.attr(\"cy\", commitPosition.y);\n      circle2.attr(\"r\", 6);\n      circle2.attr(\n        \"class\",\n        `commit ${typeClass} ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`\n      );\n    }\n    if (commitSymbolType === commitType.REVERSE) {\n      const cross = gBullets.append(\"path\");\n      cross.attr(\n        \"d\",\n        `M ${commitPosition.x - 5},${commitPosition.y - 5}L${commitPosition.x + 5},${commitPosition.y + 5}M${commitPosition.x - 5},${commitPosition.y + 5}L${commitPosition.x + 5},${commitPosition.y - 5}`\n      ).attr(\"class\", `commit ${typeClass} ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`);\n    }\n  }\n}, \"drawCommitBullet\");\nvar drawCommitLabel = /* @__PURE__ */ __name((gLabels, commit2, commitPosition, pos) => {\n  if (commit2.type !== commitType.CHERRY_PICK && (commit2.customId && commit2.type === commitType.MERGE || commit2.type !== commitType.MERGE) && DEFAULT_GITGRAPH_CONFIG2?.showCommitLabel) {\n    const wrapper = gLabels.append(\"g\");\n    const labelBkg = wrapper.insert(\"rect\").attr(\"class\", \"commit-label-bkg\");\n    const text = wrapper.append(\"text\").attr(\"x\", pos).attr(\"y\", commitPosition.y + 25).attr(\"class\", \"commit-label\").text(commit2.id);\n    const bbox = text.node()?.getBBox();\n    if (bbox) {\n      labelBkg.attr(\"x\", commitPosition.posWithOffset - bbox.width / 2 - PY).attr(\"y\", commitPosition.y + 13.5).attr(\"width\", bbox.width + 2 * PY).attr(\"height\", bbox.height + 2 * PY);\n      if (dir === \"TB\" || dir === \"BT\") {\n        labelBkg.attr(\"x\", commitPosition.x - (bbox.width + 4 * PX + 5)).attr(\"y\", commitPosition.y - 12);\n        text.attr(\"x\", commitPosition.x - (bbox.width + 4 * PX)).attr(\"y\", commitPosition.y + bbox.height - 12);\n      } else {\n        text.attr(\"x\", commitPosition.posWithOffset - bbox.width / 2);\n      }\n      if (DEFAULT_GITGRAPH_CONFIG2.rotateCommitLabel) {\n        if (dir === \"TB\" || dir === \"BT\") {\n          text.attr(\n            \"transform\",\n            \"rotate(-45, \" + commitPosition.x + \", \" + commitPosition.y + \")\"\n          );\n          labelBkg.attr(\n            \"transform\",\n            \"rotate(-45, \" + commitPosition.x + \", \" + commitPosition.y + \")\"\n          );\n        } else {\n          const r_x = -7.5 - (bbox.width + 10) / 25 * 9.5;\n          const r_y = 10 + bbox.width / 25 * 8.5;\n          wrapper.attr(\n            \"transform\",\n            \"translate(\" + r_x + \", \" + r_y + \") rotate(-45, \" + pos + \", \" + commitPosition.y + \")\"\n          );\n        }\n      }\n    }\n  }\n}, \"drawCommitLabel\");\nvar drawCommitTags = /* @__PURE__ */ __name((gLabels, commit2, commitPosition, pos) => {\n  if (commit2.tags.length > 0) {\n    let yOffset = 0;\n    let maxTagBboxWidth = 0;\n    let maxTagBboxHeight = 0;\n    const tagElements = [];\n    for (const tagValue of commit2.tags.reverse()) {\n      const rect = gLabels.insert(\"polygon\");\n      const hole = gLabels.append(\"circle\");\n      const tag = gLabels.append(\"text\").attr(\"y\", commitPosition.y - 16 - yOffset).attr(\"class\", \"tag-label\").text(tagValue);\n      const tagBbox = tag.node()?.getBBox();\n      if (!tagBbox) {\n        throw new Error(\"Tag bbox not found\");\n      }\n      maxTagBboxWidth = Math.max(maxTagBboxWidth, tagBbox.width);\n      maxTagBboxHeight = Math.max(maxTagBboxHeight, tagBbox.height);\n      tag.attr(\"x\", commitPosition.posWithOffset - tagBbox.width / 2);\n      tagElements.push({\n        tag,\n        hole,\n        rect,\n        yOffset\n      });\n      yOffset += 20;\n    }\n    for (const { tag, hole, rect, yOffset: yOffset2 } of tagElements) {\n      const h2 = maxTagBboxHeight / 2;\n      const ly = commitPosition.y - 19.2 - yOffset2;\n      rect.attr(\"class\", \"tag-label-bkg\").attr(\n        \"points\",\n        `\n      ${pos - maxTagBboxWidth / 2 - PX / 2},${ly + PY}  \n      ${pos - maxTagBboxWidth / 2 - PX / 2},${ly - PY}\n      ${commitPosition.posWithOffset - maxTagBboxWidth / 2 - PX},${ly - h2 - PY}\n      ${commitPosition.posWithOffset + maxTagBboxWidth / 2 + PX},${ly - h2 - PY}\n      ${commitPosition.posWithOffset + maxTagBboxWidth / 2 + PX},${ly + h2 + PY}\n      ${commitPosition.posWithOffset - maxTagBboxWidth / 2 - PX},${ly + h2 + PY}`\n      );\n      hole.attr(\"cy\", ly).attr(\"cx\", pos - maxTagBboxWidth / 2 + PX / 2).attr(\"r\", 1.5).attr(\"class\", \"tag-hole\");\n      if (dir === \"TB\" || dir === \"BT\") {\n        const yOrigin = pos + yOffset2;\n        rect.attr(\"class\", \"tag-label-bkg\").attr(\n          \"points\",\n          `\n        ${commitPosition.x},${yOrigin + 2}\n        ${commitPosition.x},${yOrigin - 2}\n        ${commitPosition.x + LAYOUT_OFFSET},${yOrigin - h2 - 2}\n        ${commitPosition.x + LAYOUT_OFFSET + maxTagBboxWidth + 4},${yOrigin - h2 - 2}\n        ${commitPosition.x + LAYOUT_OFFSET + maxTagBboxWidth + 4},${yOrigin + h2 + 2}\n        ${commitPosition.x + LAYOUT_OFFSET},${yOrigin + h2 + 2}`\n        ).attr(\"transform\", \"translate(12,12) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n        hole.attr(\"cx\", commitPosition.x + PX / 2).attr(\"cy\", yOrigin).attr(\"transform\", \"translate(12,12) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n        tag.attr(\"x\", commitPosition.x + 5).attr(\"y\", yOrigin + 3).attr(\"transform\", \"translate(14,14) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n      }\n    }\n  }\n}, \"drawCommitTags\");\nvar getCommitClassType = /* @__PURE__ */ __name((commit2) => {\n  const commitSymbolType = commit2.customType ?? commit2.type;\n  switch (commitSymbolType) {\n    case commitType.NORMAL:\n      return \"commit-normal\";\n    case commitType.REVERSE:\n      return \"commit-reverse\";\n    case commitType.HIGHLIGHT:\n      return \"commit-highlight\";\n    case commitType.MERGE:\n      return \"commit-merge\";\n    case commitType.CHERRY_PICK:\n      return \"commit-cherry-pick\";\n    default:\n      return \"commit-normal\";\n  }\n}, \"getCommitClassType\");\nvar calculatePosition = /* @__PURE__ */ __name((commit2, dir2, pos, commitPos2) => {\n  const defaultCommitPosition = { x: 0, y: 0 };\n  if (commit2.parents.length > 0) {\n    const closestParent = findClosestParent(commit2.parents);\n    if (closestParent) {\n      const parentPosition = commitPos2.get(closestParent) ?? defaultCommitPosition;\n      if (dir2 === \"TB\") {\n        return parentPosition.y + COMMIT_STEP;\n      } else if (dir2 === \"BT\") {\n        const currentPosition = commitPos2.get(commit2.id) ?? defaultCommitPosition;\n        return currentPosition.y - COMMIT_STEP;\n      } else {\n        return parentPosition.x + COMMIT_STEP;\n      }\n    }\n  } else {\n    if (dir2 === \"TB\") {\n      return defaultPos;\n    } else if (dir2 === \"BT\") {\n      const currentPosition = commitPos2.get(commit2.id) ?? defaultCommitPosition;\n      return currentPosition.y - COMMIT_STEP;\n    } else {\n      return 0;\n    }\n  }\n  return 0;\n}, \"calculatePosition\");\nvar getCommitPosition = /* @__PURE__ */ __name((commit2, pos, isParallelCommits) => {\n  const posWithOffset = dir === \"BT\" && isParallelCommits ? pos : pos + LAYOUT_OFFSET;\n  const y = dir === \"TB\" || dir === \"BT\" ? posWithOffset : branchPos.get(commit2.branch)?.pos;\n  const x = dir === \"TB\" || dir === \"BT\" ? branchPos.get(commit2.branch)?.pos : posWithOffset;\n  if (x === void 0 || y === void 0) {\n    throw new Error(`Position were undefined for commit ${commit2.id}`);\n  }\n  return { x, y, posWithOffset };\n}, \"getCommitPosition\");\nvar drawCommits = /* @__PURE__ */ __name((svg, commits, modifyGraph) => {\n  if (!DEFAULT_GITGRAPH_CONFIG2) {\n    throw new Error(\"GitGraph config not found\");\n  }\n  const gBullets = svg.append(\"g\").attr(\"class\", \"commit-bullets\");\n  const gLabels = svg.append(\"g\").attr(\"class\", \"commit-labels\");\n  let pos = dir === \"TB\" || dir === \"BT\" ? defaultPos : 0;\n  const keys = [...commits.keys()];\n  const isParallelCommits = DEFAULT_GITGRAPH_CONFIG2?.parallelCommits ?? false;\n  const sortKeys = /* @__PURE__ */ __name((a, b) => {\n    const seqA = commits.get(a)?.seq;\n    const seqB = commits.get(b)?.seq;\n    return seqA !== void 0 && seqB !== void 0 ? seqA - seqB : 0;\n  }, \"sortKeys\");\n  let sortedKeys = keys.sort(sortKeys);\n  if (dir === \"BT\") {\n    if (isParallelCommits) {\n      setParallelBTPos(sortedKeys, commits, pos);\n    }\n    sortedKeys = sortedKeys.reverse();\n  }\n  sortedKeys.forEach((key) => {\n    const commit2 = commits.get(key);\n    if (!commit2) {\n      throw new Error(`Commit not found for key ${key}`);\n    }\n    if (isParallelCommits) {\n      pos = calculatePosition(commit2, dir, pos, commitPos);\n    }\n    const commitPosition = getCommitPosition(commit2, pos, isParallelCommits);\n    if (modifyGraph) {\n      const typeClass = getCommitClassType(commit2);\n      const commitSymbolType = commit2.customType ?? commit2.type;\n      const branchIndex = branchPos.get(commit2.branch)?.index ?? 0;\n      drawCommitBullet(gBullets, commit2, commitPosition, typeClass, branchIndex, commitSymbolType);\n      drawCommitLabel(gLabels, commit2, commitPosition, pos);\n      drawCommitTags(gLabels, commit2, commitPosition, pos);\n    }\n    if (dir === \"TB\" || dir === \"BT\") {\n      commitPos.set(commit2.id, { x: commitPosition.x, y: commitPosition.posWithOffset });\n    } else {\n      commitPos.set(commit2.id, { x: commitPosition.posWithOffset, y: commitPosition.y });\n    }\n    pos = dir === \"BT\" && isParallelCommits ? pos + COMMIT_STEP : pos + COMMIT_STEP + LAYOUT_OFFSET;\n    if (pos > maxPos) {\n      maxPos = pos;\n    }\n  });\n}, \"drawCommits\");\nvar shouldRerouteArrow = /* @__PURE__ */ __name((commitA, commitB, p1, p2, allCommits) => {\n  const commitBIsFurthest = dir === \"TB\" || dir === \"BT\" ? p1.x < p2.x : p1.y < p2.y;\n  const branchToGetCurve = commitBIsFurthest ? commitB.branch : commitA.branch;\n  const isOnBranchToGetCurve = /* @__PURE__ */ __name((x) => x.branch === branchToGetCurve, \"isOnBranchToGetCurve\");\n  const isBetweenCommits = /* @__PURE__ */ __name((x) => x.seq > commitA.seq && x.seq < commitB.seq, \"isBetweenCommits\");\n  return [...allCommits.values()].some((commitX) => {\n    return isBetweenCommits(commitX) && isOnBranchToGetCurve(commitX);\n  });\n}, \"shouldRerouteArrow\");\nvar findLane = /* @__PURE__ */ __name((y1, y2, depth = 0) => {\n  const candidate = y1 + Math.abs(y1 - y2) / 2;\n  if (depth > 5) {\n    return candidate;\n  }\n  const ok = lanes.every((lane) => Math.abs(lane - candidate) >= 10);\n  if (ok) {\n    lanes.push(candidate);\n    return candidate;\n  }\n  const diff = Math.abs(y1 - y2);\n  return findLane(y1, y2 - diff / 5, depth + 1);\n}, \"findLane\");\nvar drawArrow = /* @__PURE__ */ __name((svg, commitA, commitB, allCommits) => {\n  const p1 = commitPos.get(commitA.id);\n  const p2 = commitPos.get(commitB.id);\n  if (p1 === void 0 || p2 === void 0) {\n    throw new Error(`Commit positions not found for commits ${commitA.id} and ${commitB.id}`);\n  }\n  const arrowNeedsRerouting = shouldRerouteArrow(commitA, commitB, p1, p2, allCommits);\n  let arc = \"\";\n  let arc2 = \"\";\n  let radius = 0;\n  let offset = 0;\n  let colorClassNum = branchPos.get(commitB.branch)?.index;\n  if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n    colorClassNum = branchPos.get(commitA.branch)?.index;\n  }\n  let lineDef;\n  if (arrowNeedsRerouting) {\n    arc = \"A 10 10, 0, 0, 0,\";\n    arc2 = \"A 10 10, 0, 0, 1,\";\n    radius = 10;\n    offset = 10;\n    const lineY = p1.y < p2.y ? findLane(p1.y, p2.y) : findLane(p2.y, p1.y);\n    const lineX = p1.x < p2.x ? findLane(p1.x, p2.x) : findLane(p2.x, p1.x);\n    if (dir === \"TB\") {\n      if (p1.x < p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX - radius} ${p1.y} ${arc2} ${lineX} ${p1.y + offset} L ${lineX} ${p2.y - radius} ${arc} ${lineX + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX + radius} ${p1.y} ${arc} ${lineX} ${p1.y + offset} L ${lineX} ${p2.y - radius} ${arc2} ${lineX - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      }\n    } else if (dir === \"BT\") {\n      if (p1.x < p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX - radius} ${p1.y} ${arc} ${lineX} ${p1.y - offset} L ${lineX} ${p2.y + radius} ${arc2} ${lineX + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX + radius} ${p1.y} ${arc2} ${lineX} ${p1.y - offset} L ${lineX} ${p2.y + radius} ${arc} ${lineX - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      }\n    } else {\n      if (p1.y < p2.y) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY - radius} ${arc} ${p1.x + offset} ${lineY} L ${p2.x - radius} ${lineY} ${arc2} ${p2.x} ${lineY + offset} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY + radius} ${arc2} ${p1.x + offset} ${lineY} L ${p2.x - radius} ${lineY} ${arc} ${p2.x} ${lineY - offset} L ${p2.x} ${p2.y}`;\n      }\n    }\n  } else {\n    arc = \"A 20 20, 0, 0, 0,\";\n    arc2 = \"A 20 20, 0, 0, 1,\";\n    radius = 20;\n    offset = 20;\n    if (dir === \"TB\") {\n      if (p1.x < p2.x) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc2} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x > p2.x) {\n        arc = \"A 20 20, 0, 0, 0,\";\n        arc2 = \"A 20 20, 0, 0, 1,\";\n        radius = 20;\n        offset = 20;\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc2} ${p1.x - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x + radius} ${p1.y} ${arc} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x === p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    } else if (dir === \"BT\") {\n      if (p1.x < p2.x) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc2} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x > p2.x) {\n        arc = \"A 20 20, 0, 0, 0,\";\n        arc2 = \"A 20 20, 0, 0, 1,\";\n        radius = 20;\n        offset = 20;\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc} ${p1.x - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x === p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    } else {\n      if (p1.y < p2.y) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc2} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.y > p2.y) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc2} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.y === p2.y) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    }\n  }\n  if (lineDef === void 0) {\n    throw new Error(\"Line definition not found\");\n  }\n  svg.append(\"path\").attr(\"d\", lineDef).attr(\"class\", \"arrow arrow\" + colorClassNum % THEME_COLOR_LIMIT);\n}, \"drawArrow\");\nvar drawArrows = /* @__PURE__ */ __name((svg, commits) => {\n  const gArrows = svg.append(\"g\").attr(\"class\", \"commit-arrows\");\n  [...commits.keys()].forEach((key) => {\n    const commit2 = commits.get(key);\n    if (commit2.parents && commit2.parents.length > 0) {\n      commit2.parents.forEach((parent) => {\n        drawArrow(gArrows, commits.get(parent), commit2, commits);\n      });\n    }\n  });\n}, \"drawArrows\");\nvar drawBranches = /* @__PURE__ */ __name((svg, branches) => {\n  const g = svg.append(\"g\");\n  branches.forEach((branch2, index) => {\n    const adjustIndexForTheme = index % THEME_COLOR_LIMIT;\n    const pos = branchPos.get(branch2.name)?.pos;\n    if (pos === void 0) {\n      throw new Error(`Position not found for branch ${branch2.name}`);\n    }\n    const line = g.append(\"line\");\n    line.attr(\"x1\", 0);\n    line.attr(\"y1\", pos);\n    line.attr(\"x2\", maxPos);\n    line.attr(\"y2\", pos);\n    line.attr(\"class\", \"branch branch\" + adjustIndexForTheme);\n    if (dir === \"TB\") {\n      line.attr(\"y1\", defaultPos);\n      line.attr(\"x1\", pos);\n      line.attr(\"y2\", maxPos);\n      line.attr(\"x2\", pos);\n    } else if (dir === \"BT\") {\n      line.attr(\"y1\", maxPos);\n      line.attr(\"x1\", pos);\n      line.attr(\"y2\", defaultPos);\n      line.attr(\"x2\", pos);\n    }\n    lanes.push(pos);\n    const name = branch2.name;\n    const labelElement = drawText(name);\n    const bkg = g.insert(\"rect\");\n    const branchLabel = g.insert(\"g\").attr(\"class\", \"branchLabel\");\n    const label = branchLabel.insert(\"g\").attr(\"class\", \"label branch-label\" + adjustIndexForTheme);\n    label.node().appendChild(labelElement);\n    const bbox = labelElement.getBBox();\n    bkg.attr(\"class\", \"branchLabelBkg label\" + adjustIndexForTheme).attr(\"rx\", 4).attr(\"ry\", 4).attr(\"x\", -bbox.width - 4 - (DEFAULT_GITGRAPH_CONFIG2?.rotateCommitLabel === true ? 30 : 0)).attr(\"y\", -bbox.height / 2 + 8).attr(\"width\", bbox.width + 18).attr(\"height\", bbox.height + 4);\n    label.attr(\n      \"transform\",\n      \"translate(\" + (-bbox.width - 14 - (DEFAULT_GITGRAPH_CONFIG2?.rotateCommitLabel === true ? 30 : 0)) + \", \" + (pos - bbox.height / 2 - 1) + \")\"\n    );\n    if (dir === \"TB\") {\n      bkg.attr(\"x\", pos - bbox.width / 2 - 10).attr(\"y\", 0);\n      label.attr(\"transform\", \"translate(\" + (pos - bbox.width / 2 - 5) + \", 0)\");\n    } else if (dir === \"BT\") {\n      bkg.attr(\"x\", pos - bbox.width / 2 - 10).attr(\"y\", maxPos);\n      label.attr(\"transform\", \"translate(\" + (pos - bbox.width / 2 - 5) + \", \" + maxPos + \")\");\n    } else {\n      bkg.attr(\"transform\", \"translate(-19, \" + (pos - bbox.height / 2) + \")\");\n    }\n  });\n}, \"drawBranches\");\nvar setBranchPosition = /* @__PURE__ */ __name(function(name, pos, index, bbox, rotateCommitLabel) {\n  branchPos.set(name, { pos, index });\n  pos += 50 + (rotateCommitLabel ? 40 : 0) + (dir === \"TB\" || dir === \"BT\" ? bbox.width / 2 : 0);\n  return pos;\n}, \"setBranchPosition\");\nvar draw = /* @__PURE__ */ __name(function(txt, id, ver, diagObj) {\n  clear3();\n  log.debug(\"in gitgraph renderer\", txt + \"\\n\", \"id:\", id, ver);\n  if (!DEFAULT_GITGRAPH_CONFIG2) {\n    throw new Error(\"GitGraph config not found\");\n  }\n  const rotateCommitLabel = DEFAULT_GITGRAPH_CONFIG2.rotateCommitLabel ?? false;\n  const db2 = diagObj.db;\n  allCommitsDict = db2.getCommits();\n  const branches = db2.getBranchesAsObjArray();\n  dir = db2.getDirection();\n  const diagram2 = select(`[id=\"${id}\"]`);\n  let pos = 0;\n  branches.forEach((branch2, index) => {\n    const labelElement = drawText(branch2.name);\n    const g = diagram2.append(\"g\");\n    const branchLabel = g.insert(\"g\").attr(\"class\", \"branchLabel\");\n    const label = branchLabel.insert(\"g\").attr(\"class\", \"label branch-label\");\n    label.node()?.appendChild(labelElement);\n    const bbox = labelElement.getBBox();\n    pos = setBranchPosition(branch2.name, pos, index, bbox, rotateCommitLabel);\n    label.remove();\n    branchLabel.remove();\n    g.remove();\n  });\n  drawCommits(diagram2, allCommitsDict, false);\n  if (DEFAULT_GITGRAPH_CONFIG2.showBranches) {\n    drawBranches(diagram2, branches);\n  }\n  drawArrows(diagram2, allCommitsDict);\n  drawCommits(diagram2, allCommitsDict, true);\n  utils_default.insertTitle(\n    diagram2,\n    \"gitTitleText\",\n    DEFAULT_GITGRAPH_CONFIG2.titleTopMargin ?? 0,\n    db2.getDiagramTitle()\n  );\n  setupGraphViewbox(\n    void 0,\n    diagram2,\n    DEFAULT_GITGRAPH_CONFIG2.diagramPadding,\n    DEFAULT_GITGRAPH_CONFIG2.useMaxWidth\n  );\n}, \"draw\");\nvar gitGraphRenderer_default = {\n  draw\n};\nif (void 0) {\n  const { it, expect, describe } = void 0;\n  describe(\"drawText\", () => {\n    it(\"should drawText\", () => {\n      const svgLabel = drawText(\"main\");\n      expect(svgLabel).toBeDefined();\n      expect(svgLabel.children[0].innerHTML).toBe(\"main\");\n    });\n  });\n  describe(\"branchPosition\", () => {\n    const bbox = {\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 10,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      toJSON: /* @__PURE__ */ __name(() => \"\", \"toJSON\")\n    };\n    it(\"should setBranchPositions LR with two branches\", () => {\n      dir = \"LR\";\n      const pos = setBranchPosition(\"main\", 0, 0, bbox, true);\n      expect(pos).toBe(90);\n      expect(branchPos.get(\"main\")).toEqual({ pos: 0, index: 0 });\n      const posNext = setBranchPosition(\"develop\", pos, 1, bbox, true);\n      expect(posNext).toBe(180);\n      expect(branchPos.get(\"develop\")).toEqual({ pos, index: 1 });\n    });\n    it(\"should setBranchPositions TB with two branches\", () => {\n      dir = \"TB\";\n      bbox.width = 34.9921875;\n      const pos = setBranchPosition(\"main\", 0, 0, bbox, true);\n      expect(pos).toBe(107.49609375);\n      expect(branchPos.get(\"main\")).toEqual({ pos: 0, index: 0 });\n      bbox.width = 56.421875;\n      const posNext = setBranchPosition(\"develop\", pos, 1, bbox, true);\n      expect(posNext).toBe(225.70703125);\n      expect(branchPos.get(\"develop\")).toEqual({ pos, index: 1 });\n    });\n  });\n  describe(\"commitPosition\", () => {\n    const commits = /* @__PURE__ */ new Map([\n      [\n        \"commitZero\",\n        {\n          id: \"ZERO\",\n          message: \"\",\n          seq: 0,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"commitA\",\n        {\n          id: \"A\",\n          message: \"\",\n          seq: 1,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"ZERO\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"commitB\",\n        {\n          id: \"B\",\n          message: \"\",\n          seq: 2,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"A\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"commitM\",\n        {\n          id: \"M\",\n          message: \"merged branch feature into main\",\n          seq: 3,\n          type: commitType.MERGE,\n          tags: [],\n          parents: [\"ZERO\", \"B\"],\n          branch: \"main\",\n          customId: true\n        }\n      ],\n      [\n        \"commitC\",\n        {\n          id: \"C\",\n          message: \"\",\n          seq: 4,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"ZERO\"],\n          branch: \"release\"\n        }\n      ],\n      [\n        \"commit5_8928ea0\",\n        {\n          id: \"5-8928ea0\",\n          message: \"cherry-picked [object Object] into release\",\n          seq: 5,\n          type: commitType.CHERRY_PICK,\n          tags: [],\n          parents: [\"C\", \"M\"],\n          branch: \"release\"\n        }\n      ],\n      [\n        \"commitD\",\n        {\n          id: \"D\",\n          message: \"\",\n          seq: 6,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"5-8928ea0\"],\n          branch: \"release\"\n        }\n      ],\n      [\n        \"commit7_ed848ba\",\n        {\n          id: \"7-ed848ba\",\n          message: \"cherry-picked [object Object] into release\",\n          seq: 7,\n          type: commitType.CHERRY_PICK,\n          tags: [],\n          parents: [\"D\", \"M\"],\n          branch: \"release\"\n        }\n      ]\n    ]);\n    let pos = 0;\n    branchPos.set(\"main\", { pos: 0, index: 0 });\n    branchPos.set(\"feature\", { pos: 107.49609375, index: 1 });\n    branchPos.set(\"release\", { pos: 224.03515625, index: 2 });\n    describe(\"TB\", () => {\n      pos = 30;\n      dir = \"TB\";\n      const expectedCommitPositionTB = /* @__PURE__ */ new Map([\n        [\"commitZero\", { x: 0, y: 40, posWithOffset: 40 }],\n        [\"commitA\", { x: 107.49609375, y: 90, posWithOffset: 90 }],\n        [\"commitB\", { x: 107.49609375, y: 140, posWithOffset: 140 }],\n        [\"commitM\", { x: 0, y: 190, posWithOffset: 190 }],\n        [\"commitC\", { x: 224.03515625, y: 240, posWithOffset: 240 }],\n        [\"commit5_8928ea0\", { x: 224.03515625, y: 290, posWithOffset: 290 }],\n        [\"commitD\", { x: 224.03515625, y: 340, posWithOffset: 340 }],\n        [\"commit7_ed848ba\", { x: 224.03515625, y: 390, posWithOffset: 390 }]\n      ]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct position for commit ${key}`, () => {\n          const position = getCommitPosition(commit2, pos, false);\n          expect(position).toEqual(expectedCommitPositionTB.get(key));\n          pos += 50;\n        });\n      });\n    });\n    describe(\"LR\", () => {\n      let pos2 = 30;\n      dir = \"LR\";\n      const expectedCommitPositionLR = /* @__PURE__ */ new Map([\n        [\"commitZero\", { x: 0, y: 40, posWithOffset: 40 }],\n        [\"commitA\", { x: 107.49609375, y: 90, posWithOffset: 90 }],\n        [\"commitB\", { x: 107.49609375, y: 140, posWithOffset: 140 }],\n        [\"commitM\", { x: 0, y: 190, posWithOffset: 190 }],\n        [\"commitC\", { x: 224.03515625, y: 240, posWithOffset: 240 }],\n        [\"commit5_8928ea0\", { x: 224.03515625, y: 290, posWithOffset: 290 }],\n        [\"commitD\", { x: 224.03515625, y: 340, posWithOffset: 340 }],\n        [\"commit7_ed848ba\", { x: 224.03515625, y: 390, posWithOffset: 390 }]\n      ]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct position for commit ${key}`, () => {\n          const position = getCommitPosition(commit2, pos2, false);\n          expect(position).toEqual(expectedCommitPositionLR.get(key));\n          pos2 += 50;\n        });\n      });\n    });\n    describe(\"getCommitClassType\", () => {\n      const expectedCommitClassType = /* @__PURE__ */ new Map([\n        [\"commitZero\", \"commit-normal\"],\n        [\"commitA\", \"commit-normal\"],\n        [\"commitB\", \"commit-normal\"],\n        [\"commitM\", \"commit-merge\"],\n        [\"commitC\", \"commit-normal\"],\n        [\"commit5_8928ea0\", \"commit-cherry-pick\"],\n        [\"commitD\", \"commit-normal\"],\n        [\"commit7_ed848ba\", \"commit-cherry-pick\"]\n      ]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct class type for commit ${key}`, () => {\n          const classType = getCommitClassType(commit2);\n          expect(classType).toBe(expectedCommitClassType.get(key));\n        });\n      });\n    });\n  });\n  describe(\"building BT parallel commit diagram\", () => {\n    const commits = /* @__PURE__ */ new Map([\n      [\n        \"1-abcdefg\",\n        {\n          id: \"1-abcdefg\",\n          message: \"\",\n          seq: 0,\n          type: 0,\n          tags: [],\n          parents: [],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"2-abcdefg\",\n        {\n          id: \"2-abcdefg\",\n          message: \"\",\n          seq: 1,\n          type: 0,\n          tags: [],\n          parents: [\"1-abcdefg\"],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"3-abcdefg\",\n        {\n          id: \"3-abcdefg\",\n          message: \"\",\n          seq: 2,\n          type: 0,\n          tags: [],\n          parents: [\"2-abcdefg\"],\n          branch: \"develop\"\n        }\n      ],\n      [\n        \"4-abcdefg\",\n        {\n          id: \"4-abcdefg\",\n          message: \"\",\n          seq: 3,\n          type: 0,\n          tags: [],\n          parents: [\"3-abcdefg\"],\n          branch: \"develop\"\n        }\n      ],\n      [\n        \"5-abcdefg\",\n        {\n          id: \"5-abcdefg\",\n          message: \"\",\n          seq: 4,\n          type: 0,\n          tags: [],\n          parents: [\"2-abcdefg\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"6-abcdefg\",\n        {\n          id: \"6-abcdefg\",\n          message: \"\",\n          seq: 5,\n          type: 0,\n          tags: [],\n          parents: [\"5-abcdefg\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"7-abcdefg\",\n        {\n          id: \"7-abcdefg\",\n          message: \"\",\n          seq: 6,\n          type: 0,\n          tags: [],\n          parents: [\"2-abcdefg\"],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"8-abcdefg\",\n        {\n          id: \"8-abcdefg\",\n          message: \"\",\n          seq: 7,\n          type: 0,\n          tags: [],\n          parents: [\"7-abcdefg\"],\n          branch: \"main\"\n        }\n      ]\n    ]);\n    const expectedCommitPosition = /* @__PURE__ */ new Map([\n      [\"1-abcdefg\", { x: 0, y: 40 }],\n      [\"2-abcdefg\", { x: 0, y: 90 }],\n      [\"3-abcdefg\", { x: 107.49609375, y: 140 }],\n      [\"4-abcdefg\", { x: 107.49609375, y: 190 }],\n      [\"5-abcdefg\", { x: 225.70703125, y: 140 }],\n      [\"6-abcdefg\", { x: 225.70703125, y: 190 }],\n      [\"7-abcdefg\", { x: 0, y: 140 }],\n      [\"8-abcdefg\", { x: 0, y: 190 }]\n    ]);\n    const expectedCommitPositionAfterParallel = /* @__PURE__ */ new Map([\n      [\"1-abcdefg\", { x: 0, y: 210 }],\n      [\"2-abcdefg\", { x: 0, y: 160 }],\n      [\"3-abcdefg\", { x: 107.49609375, y: 110 }],\n      [\"4-abcdefg\", { x: 107.49609375, y: 60 }],\n      [\"5-abcdefg\", { x: 225.70703125, y: 110 }],\n      [\"6-abcdefg\", { x: 225.70703125, y: 60 }],\n      [\"7-abcdefg\", { x: 0, y: 110 }],\n      [\"8-abcdefg\", { x: 0, y: 60 }]\n    ]);\n    const expectedCommitCurrentPosition = /* @__PURE__ */ new Map([\n      [\"1-abcdefg\", 30],\n      [\"2-abcdefg\", 80],\n      [\"3-abcdefg\", 130],\n      [\"4-abcdefg\", 180],\n      [\"5-abcdefg\", 130],\n      [\"6-abcdefg\", 180],\n      [\"7-abcdefg\", 130],\n      [\"8-abcdefg\", 180]\n    ]);\n    const sortedKeys = [...expectedCommitPosition.keys()];\n    it(\"should get the correct commit position and current position\", () => {\n      dir = \"BT\";\n      let curPos = 30;\n      commitPos.clear();\n      branchPos.clear();\n      branchPos.set(\"main\", { pos: 0, index: 0 });\n      branchPos.set(\"develop\", { pos: 107.49609375, index: 1 });\n      branchPos.set(\"feature\", { pos: 225.70703125, index: 2 });\n      DEFAULT_GITGRAPH_CONFIG2.parallelCommits = true;\n      commits.forEach((commit2, key) => {\n        if (commit2.parents.length > 0) {\n          curPos = calculateCommitPosition(commit2);\n        }\n        const position = setCommitPosition(commit2, curPos);\n        expect(position).toEqual(expectedCommitPosition.get(key));\n        expect(curPos).toEqual(expectedCommitCurrentPosition.get(key));\n      });\n    });\n    it(\"should get the correct commit position after parallel commits\", () => {\n      commitPos.clear();\n      branchPos.clear();\n      dir = \"BT\";\n      const curPos = 30;\n      commitPos.clear();\n      branchPos.clear();\n      branchPos.set(\"main\", { pos: 0, index: 0 });\n      branchPos.set(\"develop\", { pos: 107.49609375, index: 1 });\n      branchPos.set(\"feature\", { pos: 225.70703125, index: 2 });\n      setParallelBTPos(sortedKeys, commits, curPos);\n      sortedKeys.forEach((commit2) => {\n        const position = commitPos.get(commit2);\n        expect(position).toEqual(expectedCommitPositionAfterParallel.get(commit2));\n      });\n    });\n  });\n  DEFAULT_GITGRAPH_CONFIG2.parallelCommits = false;\n  it(\"add\", () => {\n    commitPos.set(\"parent1\", { x: 1, y: 1 });\n    commitPos.set(\"parent2\", { x: 2, y: 2 });\n    commitPos.set(\"parent3\", { x: 3, y: 3 });\n    dir = \"LR\";\n    const parents = [\"parent1\", \"parent2\", \"parent3\"];\n    const closestParent = findClosestParent(parents);\n    expect(closestParent).toBe(\"parent3\");\n    commitPos.clear();\n  });\n}\n\n// src/diagrams/git/styles.js\nvar getStyles = /* @__PURE__ */ __name((options) => `\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ${[0, 1, 2, 3, 4, 5, 6, 7].map(\n  (i) => `\n        .branch-label${i} { fill: ${options[\"gitBranchLabel\" + i]}; }\n        .commit${i} { stroke: ${options[\"git\" + i]}; fill: ${options[\"git\" + i]}; }\n        .commit-highlight${i} { stroke: ${options[\"gitInv\" + i]}; fill: ${options[\"gitInv\" + i]}; }\n        .label${i}  { fill: ${options[\"git\" + i]}; }\n        .arrow${i} { stroke: ${options[\"git\" + i]}; }\n        `\n).join(\"\\n\")}\n\n  .branch {\n    stroke-width: 1;\n    stroke: ${options.lineColor};\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: ${options.commitLabelFontSize}; fill: ${options.commitLabelColor};}\n  .commit-label-bkg { font-size: ${options.commitLabelFontSize}; fill: ${options.commitLabelBackground}; opacity: 0.5; }\n  .tag-label { font-size: ${options.tagLabelFontSize}; fill: ${options.tagLabelColor};}\n  .tag-label-bkg { fill: ${options.tagLabelBackground}; stroke: ${options.tagLabelBorder}; }\n  .tag-hole { fill: ${options.textColor}; }\n\n  .commit-merge {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n  }\n  .commit-reverse {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  .gitTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`, \"getStyles\");\nvar styles_default = getStyles;\n\n// src/diagrams/git/gitGraphDiagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer: gitGraphRenderer_default,\n  styles: styles_default\n};\nexport {\n  diagram\n};\n"],"names":["populateCommonDb","ast","db","accDescr","setAccDescription","accTitle","setAccTitle","title","setDiagramTitle","ImperativeState","constructor","init","this","records","reset","commitType","NORMAL","REVERSE","HIGHLIGHT","MERGE","CHERRY_PICK","DEFAULT_GITGRAPH_CONFIG","gitGraph","getConfig3","config","state","mainBranchName","mainBranchOrder","commits","Map","head","branchConfig","name","order","branches","currBranch","direction","seq","options","getID","length","uniqBy","list","fn","recordMap","Object","create","reduce","out","item","key","push","setDirection","dir2","setOptions","rawOptString","debug","trim","JSON","parse","e","error","message","getOptions","commit","commitDB","msg","id","type","tags","info","sanitizeText","map","tag","newCommit","parents","branch","set","branchDB","has","Error","checkout","merge","mergeDB","otherBranch","customId","overrideType","customTags","currentBranchCheck","get","otherBranchCheck","currentCommit","otherCommit","hash","text","token","expected","join","verifiedBranch","commit2","customType","cherryPick","cherryPickDB","sourceId","targetId","parentCommitId","parent","sourceCommit","Array","isArray","includes","sourceCommitBranch","currentCommitId","filter","Boolean","branch2","upsert","arr","newVal","index","indexOf","splice","prettyPrintCommitHistory","commitArr","commit3","line","forEach","c","label","prettyPrint","node","getCommitsArray","clear2","getBranchesAsObjArray","branchesArray","values","i","parseFloat","sort","a","b","getBranches","getCommits","o","getCurrentBranch","getDirection","getHead","getConfig","clear","getAccTitle","getAccDescription","getDiagramTitle","populate","db2","dir","statement","statements","parseStatement","parsers","Commit","stmt","parseCommit","Branch","parseBranch","Merge","parseMerge","Checkout","parseCheckout","CherryPicking","parseCherryPicking","parser2","$type","merge2","checkout2","cherryPicking","parser","async","input","it","expect","describe","mockDB","vi","toHaveBeenCalledWith","cherryPick2","dummy","gitGraphAst","$container","DEFAULT_CONFIG","DEFAULT_GITGRAPH_CONFIG2","LAYOUT_OFFSET","COMMIT_STEP","PX","PY","THEME_COLOR_LIMIT","branchPos","commitPos","defaultPos","allCommitsDict","lanes","maxPos","clear3","drawText","txt","svgLabel","document","createElementNS","rows","split","row","tspan","setAttributeNS","setAttribute","textContent","appendChild","findClosestParent","closestParent","comparisonFunc","targetPosition","Infinity","parentPosition","y","x","findClosestParentBT","maxPosition","setParallelBTPos","sortedKeys","defaultPos2","curPos","roots","calculateCommitPosition","Math","max","setCommitPosition","setRootPosition","pos","findClosestParentPos","p","closestParentPos","drawCommitBullet","gBullets","commitPosition","typeClass","branchIndex","commitSymbolType","append","attr","circle","circle2","cross","drawCommitLabel","gLabels","showCommitLabel","wrapper","labelBkg","insert","bbox","getBBox","posWithOffset","width","height","rotateCommitLabel","r_x","r_y","drawCommitTags","yOffset","maxTagBboxWidth","maxTagBboxHeight","tagElements","tagValue","reverse","rect","hole","tagBbox","yOffset2","h2","ly","yOrigin","getCommitClassType","calculatePosition","commitPos2","defaultCommitPosition","currentPosition","getCommitPosition","isParallelCommits","drawCommits","svg","modifyGraph","keys","parallelCommits","sortKeys","seqA","seqB","shouldRerouteArrow","commitA","commitB","p1","p2","allCommits","commitBIsFurthest","branchToGetCurve","isOnBranchToGetCurve","isBetweenCommits","some","commitX","findLane","y1","y2","depth","candidate","abs","ok","every","lane","diff","drawArrow","arrowNeedsRerouting","arc","arc2","radius","offset","colorClassNum","lineDef","lineY","lineX","drawArrows","gArrows","drawBranches","g","adjustIndexForTheme","labelElement","bkg","branchLabel","setBranchPosition","draw","ver","diagObj","diagram2","remove","showBranches","insertTitle","titleTopMargin","diagramPadding","useMaxWidth","gitGraphRenderer_default","toBeDefined","children","innerHTML","toBe","top","right","bottom","left","toJSON","toEqual","posNext","expectedCommitPositionTB","position","pos2","expectedCommitPositionLR","expectedCommitClassType","classType","expectedCommitPosition","expectedCommitPositionAfterParallel","expectedCommitCurrentPosition","getStyles","lineColor","commitLabelFontSize","commitLabelColor","commitLabelBackground","tagLabelFontSize","tagLabelColor","tagLabelBackground","tagLabelBorder","textColor","primaryColor","styles_default","diagram","renderer","styles"],"sourceRoot":""}